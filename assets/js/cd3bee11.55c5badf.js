"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[31845],{21385:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var s=t(86070),i=t(31503);const r={},o="1282.\u7528\u6237\u5206\u7ec4",l={id:"leetcode/1201-1300/\u7528\u6237\u5206\u7ec4",title:"1282.\u7528\u6237\u5206\u7ec4",description:"\u94fe\u63a5\uff1a1282.\u7528\u6237\u5206\u7ec4",source:"@site/docs/leetcode/1201-1300/1282.\u7528\u6237\u5206\u7ec4.md",sourceDirName:"leetcode/1201-1300",slug:"/leetcode/1201-1300/\u7528\u6237\u5206\u7ec4",permalink:"/docs/leetcode/1201-1300/\u7528\u6237\u5206\u7ec4",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1282,frontMatter:{},sidebar:"journal",previous:{title:"1281.\u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee",permalink:"/docs/leetcode/1201-1300/\u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee"},next:{title:"1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",permalink:"/docs/leetcode/1201-1300/\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII"}},c={},u=[{value:"\u9898\u89e3 1 - rust",id:"\u9898\u89e3-1---rust",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"1282\u7528\u6237\u5206\u7ec4",children:"1282.\u7528\u6237\u5206\u7ec4"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(n.a,{href:"https://leetcode.cn/problems/group-the-people-given-the-group-size-they-belong-to",children:"1282.\u7528\u6237\u5206\u7ec4"}),(0,s.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868",(0,s.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u4e00\u4e2a\u7ec4\u5217\u8868\uff0c\u4f7f\u6bcf\u4e2a\u4eba i \u90fd\u5728\u4e00\u4e2a\u5927\u5c0f\u4e3a groupSizes[i] \u7684\u7ec4\u4e2d\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3-1---rust",children:"\u9898\u89e3 1 - rust"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-08-12"}),"\n",(0,s.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.3MB"}),"\n",(0,s.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","map \u91cd\u7ec4\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use std::collections::*;\nimpl Solution {\n    pub fn group_the_people(group_sizes: Vec<i32>) -> Vec<Vec<i32>> {\n        let mut ans = Vec::new();\n        let mut map = HashMap::<i32, Vec<Vec<i32>>>::new();\n        for i in 0..group_sizes.len() {\n            let k = group_sizes[i];\n            let list = map.entry(k).or_insert(vec![vec![]]);\n            let item = list.last_mut().unwrap();\n            item.push(i as i32);\n            if item.len() == k as usize {\n                ans.push(item.clone());\n                list.push(Vec::new());\n            }\n        }\n        ans\n    }\n}\n"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},31503:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(30758);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);