"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[63226],{98922:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>b,frontMatter:()=>s,metadata:()=>t,toc:()=>u});var r=i(86070),l=i(25710);const s={},o="MACOS \u5e38\u7528\u547d\u4ee4",t={id:"\u5e38\u89c1\u6280\u5de7/MACOS\u5e38\u7528\u547d\u4ee4",title:"MACOS \u5e38\u7528\u547d\u4ee4",description:"zsh",source:"@site/docs/\u5e38\u89c1\u6280\u5de7/MACOS\u5e38\u7528\u547d\u4ee4.mdx",sourceDirName:"\u5e38\u89c1\u6280\u5de7",slug:"/\u5e38\u89c1\u6280\u5de7/MACOS\u5e38\u7528\u547d\u4ee4",permalink:"/docs/\u5e38\u89c1\u6280\u5de7/MACOS\u5e38\u7528\u547d\u4ee4",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"journal",previous:{title:"\u901a\u8fc7\u70b9\u51fb\u4e8b\u4ef6\u83b7\u53d6 WebGL \u5b9a\u4f4d",permalink:"/docs/WEBGL/\u901a\u8fc7\u70b9\u51fb\u4e8b\u4ef6\u83b7\u53d6WebGL\u5b9a\u4f4d"},next:{title:"Git \u76f8\u5173",permalink:"/docs/\u5e38\u89c1\u6280\u5de7/git"}},a={},u=[{value:"zsh",id:"zsh",level:2},{value:"homebrew",id:"homebrew",level:2},{value:"\u56fd\u5185\u6e90",id:"\u56fd\u5185\u6e90",level:3},{value:"nvm",id:"nvm",level:2},{value:"\u56fd\u5185\u6e90",id:"\u56fd\u5185\u6e90-1",level:3},{value:"vim",id:"vim",level:2},{value:"pyenv",id:"pyenv",level:2}];function g(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"macos-\u5e38\u7528\u547d\u4ee4",children:"MACOS \u5e38\u7528\u547d\u4ee4"})}),"\n",(0,r.jsx)(e.h2,{id:"zsh",children:"zsh"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/zsh-users/zsh-autosuggestions/blob/master/INSTALL.md",children:"zsh-autosuggestions"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md",children:"zsh-syntax-highlighting"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/zsh-users/zsh-completions",children:"zsh-completions"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/ohmyzsh/ohmyzsh",children:"onmyzsh"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/unixorn/awesome-zsh-plugins",children:"awesome-zsh-plugins"})}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sh",children:"brew install antigen\nsh -c \"$(curl -fsSL https://install.ohmyz.sh/)\"\nsource /opt/homebrew/share/antigen/antigen.zsh\nantigen use oh-my-zsh\nantigen bundle git\nantigen bundle jeffreytse/zsh-vi-mode\nantigen bundle zsh-users/zsh-autosuggestions\nantigen bundle zsh-users/zsh-syntax-highlighting\nantigen bundle zsh-users/zsh-completions\nantigen bundle zsh-users/zsh-history-substring-search\nHISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1\nbindkey -M vicmd 'k' history-substring-search-up\nbindkey -M vicmd 'j' history-substring-search-down\nantigen theme robbyrussell\nantigen apply\n"})}),"\n",(0,r.jsx)(e.h2,{id:"homebrew",children:"homebrew"}),"\n",(0,r.jsx)(e.h3,{id:"\u56fd\u5185\u6e90",children:"\u56fd\u5185\u6e90"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/",children:"\u6e05\u534e\u6e90\u5b98\u7f51"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sh",children:'export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"\nexport HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"\nexport HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"\nexport HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"\nexport HOMEBREW_PIP_INDEX_URL="https://pypi.tuna.tsinghua.edu.cn/simple"\n\nbrew install nvm\nbrew install --cask visual-studio-code\nbrew install --cask wechat\nbrew install iterm2\nbrew install --cask google-chrome\nbrew install --cask chromedriver\nbrew install pyenv\n'})}),"\n",(0,r.jsx)(e.h2,{id:"nvm",children:"nvm"}),"\n",(0,r.jsx)(e.h3,{id:"\u56fd\u5185\u6e90-1",children:"\u56fd\u5185\u6e90"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sh",children:'export NVM_DIR="$HOME/.nvm"\n[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \\. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm\n[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \\. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion\n\nexport NVM_NODEJS_ORG_MIRROR=https://npmmirror.com/mirrors/node/\nexport PYTHON_BUILD_MIRROR_URL="https://registry.npmmirror.com/-/binary/python"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"vim",children:"vim"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://github.com/junegunn/vim-plug",children:"vim-plug"})}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sh",children:"curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-vim",children:"set nocompatible                        \" \u4e0d\u4e0evi\u517c\u5bb9\nset nu                                  \" \u8bbe\u7f6e\u884c\u53f7 number\nset cul                                 \" \u7a81\u51fa\u663e\u793a\u5f53\u524d\u884c cursorline\nset cuc                                 \" \u7a81\u51fa\u663e\u793a\u5f53\u524d\u5217 cursorcolumn\nset showmatch                           \" \u663e\u793a\u62ec\u53f7\u5339\u914d\nset showmode                            \" \u5728\u5e95\u90e8\u663e\u793a\u6a21\u5f0f\nset hlsearch                            \" \u641c\u7d22\u9ad8\u4eae\nset showcmd                             \" \u663e\u793a\u8f93\u5165\u7684\u547d\u4ee4\nset autoindent                          \" \u81ea\u52a8\u7f29\u8fdb\uff0c\u6309\u4e0b\u56de\u8f66\u540e\uff0c\u4e0b\u4e00\u884c\u4f1a\u81ea\u52a8\u6839\u4e0a\u4e00\u884c\u7684\u7f29\u8fdb\u4fdd\u6301\u4e00\u81f4\nset smartindent                         \" \u667a\u80fd\u7f29\u8fdb\nset ruler                               \" \u5728\u72b6\u6001\u680f\u663e\u793a\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\uff0c\u54ea\u4e00\u884c\u54ea\u4e00\u5217\nset expandtab                           \" tab\u81ea\u52a8\u8f6c\u7a7a\u683c\nset ts=4                                \" \u8bbe\u7f6e\u7f29\u8fdb4 tabstop\nset shiftwidth=4                        \" \u8bbe\u7f6e\u81ea\u52a8\u7f29\u8fdb4\nset softtabstop=4                       \" \u63d2\u5165\u7684\u662f\u7a7a\u683c\u548ctab\u5236\u8868\u7b26\u7684\u6df7\u5408\nset noerrorbells                        \" \u51fa\u9519\u65f6\uff0c\u522b\u53d1\u58f0\nset visualbell                          \" \u51fa\u9519\u65f6\uff0c\u5c4f\u5e55\u95ea\u70c1\nset autoread                            \" \u6253\u5f00\u6587\u4ef6\u76d1\u89c6\nset wildmenu\n\nsyntax enable     \" \u5f00\u542f\u8bed\u6cd5\u9ad8\u4eae\nfiletype on       \" \u5f00\u542f\u6587\u4ef6\u7c7b\u578b\u4fa6\u6d4b\n\nset background=dark\ncolorscheme gruvbox\n\nnnoremap <leader>n :NERDTreeFocus<CR>\nnnoremap <C-n> :NERDTree<CR>\nnnoremap <C-t> :NERDTreeToggle<CR>\nnnoremap <C-f> :NERDTreeFind<CR>\n\ncall plug#begin('~/.vim/plugged')\n\nPlug 'preservim/nerdtree'\nPlug 'pangloss/vim-javascript'    \" JavaScript support\nPlug 'leafgarland/typescript-vim' \" TypeScript syntax\nPlug 'maxmellon/vim-jsx-pretty'   \" JS and JSX syntax\nPlug 'jparise/vim-graphql'        \" GraphQL syntax\nPlug 'neoclide/coc.nvim', {'branch': 'release'}\nPlug 'rust-lang/rust.vim'\nPlug 'prabirshrestha/vim-lsp'\nPlug 'mattn/vim-lsp-settings'\n\ncall plug#end()\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"\" -----------------------------------------------------------------------------\n\" File: gruvbox.vim\n\" Description: Retro groove color scheme for Vim\n\" Author: morhetz <morhetz@gmail.com>\n\" Source: https://github.com/morhetz/gruvbox\n\" Last Modified: 12 Aug 2017\n\" -----------------------------------------------------------------------------\n\n\" Supporting code -------------------------------------------------------------\n\" Initialisation: {{{\n\nif version > 580\n  hi clear\n  if exists(\"syntax_on\")\n    syntax reset\n  endif\nendif\n\nlet g:colors_name='gruvbox'\n\nif !(has('termguicolors') && &termguicolors) && !has('gui_running') && &t_Co != 256\n  finish\nendif\n\n\" }}}\n\" Global Settings: {{{\n\nif !exists('g:gruvbox_bold')\n  let g:gruvbox_bold=1\nendif\nif !exists('g:gruvbox_italic')\n  if has('gui_running') || $TERM_ITALICS == 'true'\n    let g:gruvbox_italic=1\n  else\n    let g:gruvbox_italic=0\n  endif\nendif\nif !exists('g:gruvbox_undercurl')\n  let g:gruvbox_undercurl=1\nendif\nif !exists('g:gruvbox_underline')\n  let g:gruvbox_underline=1\nendif\nif !exists('g:gruvbox_inverse')\n  let g:gruvbox_inverse=1\nendif\n\nif !exists('g:gruvbox_guisp_fallback') || index(['fg', 'bg'], g:gruvbox_guisp_fallback) == -1\n  let g:gruvbox_guisp_fallback='NONE'\nendif\n\nif !exists('g:gruvbox_improved_strings')\n  let g:gruvbox_improved_strings=0\nendif\n\nif !exists('g:gruvbox_improved_warnings')\n  let g:gruvbox_improved_warnings=0\nendif\n\nif !exists('g:gruvbox_termcolors')\n  let g:gruvbox_termcolors=256\nendif\n\nif !exists('g:gruvbox_invert_indent_guides')\n  let g:gruvbox_invert_indent_guides=0\nendif\n\nif exists('g:gruvbox_contrast')\n  echo 'g:gruvbox_contrast is deprecated; use g:gruvbox_contrast_light and g:gruvbox_contrast_dark instead'\nendif\n\nif !exists('g:gruvbox_contrast_dark')\n  let g:gruvbox_contrast_dark='medium'\nendif\n\nif !exists('g:gruvbox_contrast_light')\n  let g:gruvbox_contrast_light='medium'\nendif\n\nlet s:is_dark=(&background == 'dark')\n\n\" }}}\n\" Palette: {{{\n\n\" setup palette dictionary\nlet s:gb = {}\n\n\" fill it with absolute colors\nlet s:gb.dark0_hard  = ['#1d2021', 234]     \" 29-32-33\nlet s:gb.dark0       = ['#282828', 235]     \" 40-40-40\nlet s:gb.dark0_soft  = ['#32302f', 236]     \" 50-48-47\nlet s:gb.dark1       = ['#3c3836', 237]     \" 60-56-54\nlet s:gb.dark2       = ['#504945', 239]     \" 80-73-69\nlet s:gb.dark3       = ['#665c54', 241]     \" 102-92-84\nlet s:gb.dark4       = ['#7c6f64', 243]     \" 124-111-100\nlet s:gb.dark4_256   = ['#7c6f64', 243]     \" 124-111-100\n\nlet s:gb.gray_245    = ['#928374', 245]     \" 146-131-116\nlet s:gb.gray_244    = ['#928374', 244]     \" 146-131-116\n\nlet s:gb.light0_hard = ['#f9f5d7', 230]     \" 249-245-215\nlet s:gb.light0      = ['#fbf1c7', 229]     \" 253-244-193\nlet s:gb.light0_soft = ['#f2e5bc', 228]     \" 242-229-188\nlet s:gb.light1      = ['#ebdbb2', 223]     \" 235-219-178\nlet s:gb.light2      = ['#d5c4a1', 250]     \" 213-196-161\nlet s:gb.light3      = ['#bdae93', 248]     \" 189-174-147\nlet s:gb.light4      = ['#a89984', 246]     \" 168-153-132\nlet s:gb.light4_256  = ['#a89984', 246]     \" 168-153-132\n\nlet s:gb.bright_red     = ['#fb4934', 167]     \" 251-73-52\nlet s:gb.bright_green   = ['#b8bb26', 142]     \" 184-187-38\nlet s:gb.bright_yellow  = ['#fabd2f', 214]     \" 250-189-47\nlet s:gb.bright_blue    = ['#83a598', 109]     \" 131-165-152\nlet s:gb.bright_purple  = ['#d3869b', 175]     \" 211-134-155\nlet s:gb.bright_aqua    = ['#8ec07c', 108]     \" 142-192-124\nlet s:gb.bright_orange  = ['#fe8019', 208]     \" 254-128-25\n\nlet s:gb.neutral_red    = ['#cc241d', 124]     \" 204-36-29\nlet s:gb.neutral_green  = ['#98971a', 106]     \" 152-151-26\nlet s:gb.neutral_yellow = ['#d79921', 172]     \" 215-153-33\nlet s:gb.neutral_blue   = ['#458588', 66]      \" 69-133-136\nlet s:gb.neutral_purple = ['#b16286', 132]     \" 177-98-134\nlet s:gb.neutral_aqua   = ['#689d6a', 72]      \" 104-157-106\nlet s:gb.neutral_orange = ['#d65d0e', 166]     \" 214-93-14\n\nlet s:gb.faded_red      = ['#9d0006', 88]      \" 157-0-6\nlet s:gb.faded_green    = ['#79740e', 100]     \" 121-116-14\nlet s:gb.faded_yellow   = ['#b57614', 136]     \" 181-118-20\nlet s:gb.faded_blue     = ['#076678', 24]      \" 7-102-120\nlet s:gb.faded_purple   = ['#8f3f71', 96]      \" 143-63-113\nlet s:gb.faded_aqua     = ['#427b58', 66]      \" 66-123-88\nlet s:gb.faded_orange   = ['#af3a03', 130]     \" 175-58-3\n\n\" }}}\n\" Setup Emphasis: {{{\n\nlet s:bold = 'bold,'\nif g:gruvbox_bold == 0\n  let s:bold = ''\nendif\n\nlet s:italic = 'italic,'\nif g:gruvbox_italic == 0\n  let s:italic = ''\nendif\n\nlet s:underline = 'underline,'\nif g:gruvbox_underline == 0\n  let s:underline = ''\nendif\n\nlet s:undercurl = 'undercurl,'\nif g:gruvbox_undercurl == 0\n  let s:undercurl = ''\nendif\n\nlet s:inverse = 'inverse,'\nif g:gruvbox_inverse == 0\n  let s:inverse = ''\nendif\n\n\" }}}\n\" Setup Colors: {{{\n\nlet s:vim_bg = ['bg', 'bg']\nlet s:vim_fg = ['fg', 'fg']\nlet s:none = ['NONE', 'NONE']\n\n\" determine relative colors\nif s:is_dark\n  let s:bg0  = s:gb.dark0\n  if g:gruvbox_contrast_dark == 'soft'\n    let s:bg0  = s:gb.dark0_soft\n  elseif g:gruvbox_contrast_dark == 'hard'\n    let s:bg0  = s:gb.dark0_hard\n  endif\n\n  let s:bg1  = s:gb.dark1\n  let s:bg2  = s:gb.dark2\n  let s:bg3  = s:gb.dark3\n  let s:bg4  = s:gb.dark4\n\n  let s:gray = s:gb.gray_245\n\n  let s:fg0 = s:gb.light0\n  let s:fg1 = s:gb.light1\n  let s:fg2 = s:gb.light2\n  let s:fg3 = s:gb.light3\n  let s:fg4 = s:gb.light4\n\n  let s:fg4_256 = s:gb.light4_256\n\n  let s:red    = s:gb.bright_red\n  let s:green  = s:gb.bright_green\n  let s:yellow = s:gb.bright_yellow\n  let s:blue   = s:gb.bright_blue\n  let s:purple = s:gb.bright_purple\n  let s:aqua   = s:gb.bright_aqua\n  let s:orange = s:gb.bright_orange\nelse\n  let s:bg0  = s:gb.light0\n  if g:gruvbox_contrast_light == 'soft'\n    let s:bg0  = s:gb.light0_soft\n  elseif g:gruvbox_contrast_light == 'hard'\n    let s:bg0  = s:gb.light0_hard\n  endif\n\n  let s:bg1  = s:gb.light1\n  let s:bg2  = s:gb.light2\n  let s:bg3  = s:gb.light3\n  let s:bg4  = s:gb.light4\n\n  let s:gray = s:gb.gray_244\n\n  let s:fg0 = s:gb.dark0\n  let s:fg1 = s:gb.dark1\n  let s:fg2 = s:gb.dark2\n  let s:fg3 = s:gb.dark3\n  let s:fg4 = s:gb.dark4\n\n  let s:fg4_256 = s:gb.dark4_256\n\n  let s:red    = s:gb.faded_red\n  let s:green  = s:gb.faded_green\n  let s:yellow = s:gb.faded_yellow\n  let s:blue   = s:gb.faded_blue\n  let s:purple = s:gb.faded_purple\n  let s:aqua   = s:gb.faded_aqua\n  let s:orange = s:gb.faded_orange\nendif\n\n\" reset to 16 colors fallback\nif g:gruvbox_termcolors == 16\n  let s:bg0[1]    = 0\n  let s:fg4[1]    = 7\n  let s:gray[1]   = 8\n  let s:red[1]    = 9\n  let s:green[1]  = 10\n  let s:yellow[1] = 11\n  let s:blue[1]   = 12\n  let s:purple[1] = 13\n  let s:aqua[1]   = 14\n  let s:fg1[1]    = 15\nendif\n\n\" save current relative colors back to palette dictionary\nlet s:gb.bg0 = s:bg0\nlet s:gb.bg1 = s:bg1\nlet s:gb.bg2 = s:bg2\nlet s:gb.bg3 = s:bg3\nlet s:gb.bg4 = s:bg4\n\nlet s:gb.gray = s:gray\n\nlet s:gb.fg0 = s:fg0\nlet s:gb.fg1 = s:fg1\nlet s:gb.fg2 = s:fg2\nlet s:gb.fg3 = s:fg3\nlet s:gb.fg4 = s:fg4\n\nlet s:gb.fg4_256 = s:fg4_256\n\nlet s:gb.red    = s:red\nlet s:gb.green  = s:green\nlet s:gb.yellow = s:yellow\nlet s:gb.blue   = s:blue\nlet s:gb.purple = s:purple\nlet s:gb.aqua   = s:aqua\nlet s:gb.orange = s:orange\n\n\" }}}\n\" Setup Terminal Colors For Neovim: {{{\n\nif has('nvim')\n  let g:terminal_color_0 = s:bg0[0]\n  let g:terminal_color_8 = s:gray[0]\n\n  let g:terminal_color_1 = s:gb.neutral_red[0]\n  let g:terminal_color_9 = s:red[0]\n\n  let g:terminal_color_2 = s:gb.neutral_green[0]\n  let g:terminal_color_10 = s:green[0]\n\n  let g:terminal_color_3 = s:gb.neutral_yellow[0]\n  let g:terminal_color_11 = s:yellow[0]\n\n  let g:terminal_color_4 = s:gb.neutral_blue[0]\n  let g:terminal_color_12 = s:blue[0]\n\n  let g:terminal_color_5 = s:gb.neutral_purple[0]\n  let g:terminal_color_13 = s:purple[0]\n\n  let g:terminal_color_6 = s:gb.neutral_aqua[0]\n  let g:terminal_color_14 = s:aqua[0]\n\n  let g:terminal_color_7 = s:fg4[0]\n  let g:terminal_color_15 = s:fg1[0]\nendif\n\n\" }}}\n\" Overload Setting: {{{\n\nlet s:hls_cursor = s:orange\nif exists('g:gruvbox_hls_cursor')\n  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)\nendif\n\nlet s:number_column = s:none\nif exists('g:gruvbox_number_column')\n  let s:number_column = get(s:gb, g:gruvbox_number_column)\nendif\n\nlet s:sign_column = s:bg1\n\nif exists('g:gitgutter_override_sign_column_highlight') &&\n      \\ g:gitgutter_override_sign_column_highlight == 1\n  let s:sign_column = s:number_column\nelse\n  let g:gitgutter_override_sign_column_highlight = 0\n\n  if exists('g:gruvbox_sign_column')\n    let s:sign_column = get(s:gb, g:gruvbox_sign_column)\n  endif\nendif\n\nlet s:color_column = s:bg1\nif exists('g:gruvbox_color_column')\n  let s:color_column = get(s:gb, g:gruvbox_color_column)\nendif\n\nlet s:vert_split = s:bg0\nif exists('g:gruvbox_vert_split')\n  let s:vert_split = get(s:gb, g:gruvbox_vert_split)\nendif\n\nlet s:invert_signs = ''\nif exists('g:gruvbox_invert_signs')\n  if g:gruvbox_invert_signs == 1\n    let s:invert_signs = s:inverse\n  endif\nendif\n\nlet s:invert_selection = s:inverse\nif exists('g:gruvbox_invert_selection')\n  if g:gruvbox_invert_selection == 0\n    let s:invert_selection = ''\n  endif\nendif\n\nlet s:invert_tabline = ''\nif exists('g:gruvbox_invert_tabline')\n  if g:gruvbox_invert_tabline == 1\n    let s:invert_tabline = s:inverse\n  endif\nendif\n\nlet s:italicize_comments = s:italic\nif exists('g:gruvbox_italicize_comments')\n  if g:gruvbox_italicize_comments == 0\n    let s:italicize_comments = ''\n  endif\nendif\n\nlet s:italicize_strings = ''\nif exists('g:gruvbox_italicize_strings')\n  if g:gruvbox_italicize_strings == 1\n    let s:italicize_strings = s:italic\n  endif\nendif\n\n\" }}}\n\" Highlighting Function: {{{\n\nfunction! s:HL(group, fg, ...)\n  \" Arguments: group, guifg, guibg, gui, guisp\n\n  \" foreground\n  let fg = a:fg\n\n  \" background\n  if a:0 >= 1\n    let bg = a:1\n  else\n    let bg = s:none\n  endif\n\n  \" emphasis\n  if a:0 >= 2 && strlen(a:2)\n    let emstr = a:2\n  else\n    let emstr = 'NONE,'\n  endif\n\n  \" special fallback\n  if a:0 >= 3\n    if g:gruvbox_guisp_fallback != 'NONE'\n      let fg = a:3\n    endif\n\n    \" bg fallback mode should invert higlighting\n    if g:gruvbox_guisp_fallback == 'bg'\n      let emstr .= 'inverse,'\n    endif\n  endif\n\n  let histring = [ 'hi', a:group,\n        \\ 'guifg=' . fg[0], 'ctermfg=' . fg[1],\n        \\ 'guibg=' . bg[0], 'ctermbg=' . bg[1],\n        \\ 'gui=' . emstr[:-2], 'cterm=' . emstr[:-2]\n        \\ ]\n\n  \" special\n  if a:0 >= 3\n    call add(histring, 'guisp=' . a:3[0])\n  endif\n\n  execute join(histring, ' ')\nendfunction\n\n\" }}}\n\" Gruvbox Hi Groups: {{{\n\n\" memoize common hi groups\ncall s:HL('GruvboxFg0', s:fg0)\ncall s:HL('GruvboxFg1', s:fg1)\ncall s:HL('GruvboxFg2', s:fg2)\ncall s:HL('GruvboxFg3', s:fg3)\ncall s:HL('GruvboxFg4', s:fg4)\ncall s:HL('GruvboxGray', s:gray)\ncall s:HL('GruvboxBg0', s:bg0)\ncall s:HL('GruvboxBg1', s:bg1)\ncall s:HL('GruvboxBg2', s:bg2)\ncall s:HL('GruvboxBg3', s:bg3)\ncall s:HL('GruvboxBg4', s:bg4)\n\ncall s:HL('GruvboxRed', s:red)\ncall s:HL('GruvboxRedBold', s:red, s:none, s:bold)\ncall s:HL('GruvboxGreen', s:green)\ncall s:HL('GruvboxGreenBold', s:green, s:none, s:bold)\ncall s:HL('GruvboxYellow', s:yellow)\ncall s:HL('GruvboxYellowBold', s:yellow, s:none, s:bold)\ncall s:HL('GruvboxBlue', s:blue)\ncall s:HL('GruvboxBlueBold', s:blue, s:none, s:bold)\ncall s:HL('GruvboxPurple', s:purple)\ncall s:HL('GruvboxPurpleBold', s:purple, s:none, s:bold)\ncall s:HL('GruvboxAqua', s:aqua)\ncall s:HL('GruvboxAquaBold', s:aqua, s:none, s:bold)\ncall s:HL('GruvboxOrange', s:orange)\ncall s:HL('GruvboxOrangeBold', s:orange, s:none, s:bold)\n\ncall s:HL('GruvboxRedSign', s:red, s:sign_column, s:invert_signs)\ncall s:HL('GruvboxGreenSign', s:green, s:sign_column, s:invert_signs)\ncall s:HL('GruvboxYellowSign', s:yellow, s:sign_column, s:invert_signs)\ncall s:HL('GruvboxBlueSign', s:blue, s:sign_column, s:invert_signs)\ncall s:HL('GruvboxPurpleSign', s:purple, s:sign_column, s:invert_signs)\ncall s:HL('GruvboxAquaSign', s:aqua, s:sign_column, s:invert_signs)\ncall s:HL('GruvboxOrangeSign', s:orange, s:sign_column, s:invert_signs)\n\n\" }}}\n\n\" Vanilla colorscheme ---------------------------------------------------------\n\" General UI: {{{\n\n\" Normal text\ncall s:HL('Normal', s:fg1, s:bg0)\n\n\" Correct background (see issue #7):\n\" --- Problem with changing between dark and light on 256 color terminal\n\" --- https://github.com/morhetz/gruvbox/issues/7\nif s:is_dark\n  set background=dark\nelse\n  set background=light\nendif\n\nif version >= 700\n  \" Screen line that the cursor is\n  call s:HL('CursorLine',   s:none, s:bg1)\n  \" Screen column that the cursor is\n  hi! link CursorColumn CursorLine\n\n  \" Tab pages line filler\n  call s:HL('TabLineFill', s:bg4, s:bg1, s:invert_tabline)\n  \" Active tab page label\n  call s:HL('TabLineSel', s:green, s:bg1, s:invert_tabline)\n  \" Not active tab page label\n  hi! link TabLine TabLineFill\n\n  \" Match paired bracket under the cursor\n  call s:HL('MatchParen', s:none, s:bg3, s:bold)\nendif\n\nif version >= 703\n  \" Highlighted screen columns\n  call s:HL('ColorColumn',  s:none, s:color_column)\n\n  \" Concealed element: \\lambda \u2192 \u03bb\n  call s:HL('Conceal', s:blue, s:none)\n\n  \" Line number of CursorLine\n  call s:HL('CursorLineNr', s:yellow, s:bg1)\nendif\n\nhi! link NonText GruvboxBg2\nhi! link SpecialKey GruvboxBg2\n\ncall s:HL('Visual',    s:none,  s:bg3, s:invert_selection)\nhi! link VisualNOS Visual\n\ncall s:HL('Search',    s:yellow, s:bg0, s:inverse)\ncall s:HL('IncSearch', s:hls_cursor, s:bg0, s:inverse)\n\ncall s:HL('Underlined', s:blue, s:none, s:underline)\n\ncall s:HL('StatusLine',   s:bg2, s:fg1, s:inverse)\ncall s:HL('StatusLineNC', s:bg1, s:fg4, s:inverse)\n\n\" The column separating vertically split windows\ncall s:HL('VertSplit', s:bg3, s:vert_split)\n\n\" Current match in wildmenu completion\ncall s:HL('WildMenu', s:blue, s:bg2, s:bold)\n\n\" Directory names, special names in listing\nhi! link Directory GruvboxGreenBold\n\n\" Titles for output from :set all, :autocmd, etc.\nhi! link Title GruvboxGreenBold\n\n\" Error messages on the command line\ncall s:HL('ErrorMsg',   s:bg0, s:red, s:bold)\n\" More prompt: -- More --\nhi! link MoreMsg GruvboxYellowBold\n\" Current mode message: -- INSERT --\nhi! link ModeMsg GruvboxYellowBold\n\" 'Press enter' prompt and yes/no questions\nhi! link Question GruvboxOrangeBold\n\" Warning messages\nhi! link WarningMsg GruvboxRedBold\n\n\" }}}\n\" Gutter: {{{\n\n\" Line number for :number and :# commands\ncall s:HL('LineNr', s:bg4, s:number_column)\n\n\" Column where signs are displayed\ncall s:HL('SignColumn', s:none, s:sign_column)\n\n\" Line used for closed folds\ncall s:HL('Folded', s:gray, s:bg1, s:italic)\n\" Column where folds are displayed\ncall s:HL('FoldColumn', s:gray, s:bg1)\n\n\" }}}\n\" Cursor: {{{\n\n\" Character under cursor\ncall s:HL('Cursor', s:none, s:none, s:inverse)\n\" Visual mode cursor, selection\nhi! link vCursor Cursor\n\" Input moder cursor\nhi! link iCursor Cursor\n\" Language mapping cursor\nhi! link lCursor Cursor\n\n\" }}}\n\" Syntax Highlighting: {{{\n\nif g:gruvbox_improved_strings == 0\n  hi! link Special GruvboxOrange\nelse\n  call s:HL('Special', s:orange, s:bg1, s:italicize_strings)\nendif\n\ncall s:HL('Comment', s:gray, s:none, s:italicize_comments)\ncall s:HL('Todo', s:vim_fg, s:vim_bg, s:bold . s:italic)\ncall s:HL('Error', s:red, s:vim_bg, s:bold . s:inverse)\n\n\" Generic statement\nhi! link Statement GruvboxRed\n\" if, then, else, endif, swicth, etc.\nhi! link Conditional GruvboxRed\n\" for, do, while, etc.\nhi! link Repeat GruvboxRed\n\" case, default, etc.\nhi! link Label GruvboxRed\n\" try, catch, throw\nhi! link Exception GruvboxRed\n\" sizeof, \"+\", \"*\", etc.\nhi! link Operator Normal\n\" Any other keyword\nhi! link Keyword GruvboxRed\n\n\" Variable name\nhi! link Identifier GruvboxBlue\n\" Function name\nhi! link Function GruvboxGreenBold\n\n\" Generic preprocessor\nhi! link PreProc GruvboxAqua\n\" Preprocessor #include\nhi! link Include GruvboxAqua\n\" Preprocessor #define\nhi! link Define GruvboxAqua\n\" Same as Define\nhi! link Macro GruvboxAqua\n\" Preprocessor #if, #else, #endif, etc.\nhi! link PreCondit GruvboxAqua\n\n\" Generic constant\nhi! link Constant GruvboxPurple\n\" Character constant: 'c', '/n'\nhi! link Character GruvboxPurple\n\" String constant: \"this is a string\"\nif g:gruvbox_improved_strings == 0\n  call s:HL('String',  s:green, s:none, s:italicize_strings)\nelse\n  call s:HL('String',  s:fg1, s:bg1, s:italicize_strings)\nendif\n\" Boolean constant: TRUE, false\nhi! link Boolean GruvboxPurple\n\" Number constant: 234, 0xff\nhi! link Number GruvboxPurple\n\" Floating point constant: 2.3e10\nhi! link Float GruvboxPurple\n\n\" Generic type\nhi! link Type GruvboxYellow\n\" static, register, volatile, etc\nhi! link StorageClass GruvboxOrange\n\" struct, union, enum, etc.\nhi! link Structure GruvboxAqua\n\" typedef\nhi! link Typedef GruvboxYellow\n\n\" }}}\n\" Completion Menu: {{{\n\nif version >= 700\n  \" Popup menu: normal item\n  call s:HL('Pmenu', s:fg1, s:bg2)\n  \" Popup menu: selected item\n  call s:HL('PmenuSel', s:bg2, s:blue, s:bold)\n  \" Popup menu: scrollbar\n  call s:HL('PmenuSbar', s:none, s:bg2)\n  \" Popup menu: scrollbar thumb\n  call s:HL('PmenuThumb', s:none, s:bg4)\nendif\n\n\" }}}\n\" Diffs: {{{\n\ncall s:HL('DiffDelete', s:red, s:bg0, s:inverse)\ncall s:HL('DiffAdd',    s:green, s:bg0, s:inverse)\n\"call s:HL('DiffChange', s:bg0, s:blue)\n\"call s:HL('DiffText',   s:bg0, s:yellow)\n\n\" Alternative setting\ncall s:HL('DiffChange', s:aqua, s:bg0, s:inverse)\ncall s:HL('DiffText',   s:yellow, s:bg0, s:inverse)\n\n\" }}}\n\" Spelling: {{{\n\nif has(\"spell\")\n  \" Not capitalised word, or compile warnings\n  if g:gruvbox_improved_warnings == 0\n    call s:HL('SpellCap',   s:none, s:none, s:undercurl, s:red)\n  else\n    call s:HL('SpellCap',   s:green, s:none, s:bold . s:italic)\n  endif\n  \" Not recognized word\n  call s:HL('SpellBad',   s:none, s:none, s:undercurl, s:blue)\n  \" Wrong spelling for selected region\n  call s:HL('SpellLocal', s:none, s:none, s:undercurl, s:aqua)\n  \" Rare word\n  call s:HL('SpellRare',  s:none, s:none, s:undercurl, s:purple)\nendif\n\n\" }}}\n\n\" Plugin specific -------------------------------------------------------------\n\" EasyMotion: {{{\n\nhi! link EasyMotionTarget Search\nhi! link EasyMotionShade Comment\n\n\" }}}\n\" Sneak: {{{\n\nhi! link Sneak Search\nhi! link SneakLabel Search\n\n\" }}}\n\" Indent Guides: {{{\n\nif !exists('g:indent_guides_auto_colors')\n  let g:indent_guides_auto_colors = 0\nendif\n\nif g:indent_guides_auto_colors == 0\n  if g:gruvbox_invert_indent_guides == 0\n    call s:HL('IndentGuidesOdd', s:vim_bg, s:bg2)\n    call s:HL('IndentGuidesEven', s:vim_bg, s:bg1)\n  else\n    call s:HL('IndentGuidesOdd', s:vim_bg, s:bg2, s:inverse)\n    call s:HL('IndentGuidesEven', s:vim_bg, s:bg3, s:inverse)\n  endif\nendif\n\n\" }}}\n\" IndentLine: {{{\n\nif !exists('g:indentLine_color_term')\n  let g:indentLine_color_term = s:bg2[1]\nendif\nif !exists('g:indentLine_color_gui')\n  let g:indentLine_color_gui = s:bg2[0]\nendif\n\n\" }}}\n\" Rainbow Parentheses: {{{\n\nif !exists('g:rbpt_colorpairs')\n  let g:rbpt_colorpairs =\n    \\ [\n      \\ ['blue', '#458588'], ['magenta', '#b16286'],\n      \\ ['red',  '#cc241d'], ['166',     '#d65d0e']\n    \\ ]\nendif\n\nlet g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]\nlet g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]\n\nif !exists('g:rainbow_conf')\n   let g:rainbow_conf = {}\nendif\nif !has_key(g:rainbow_conf, 'guifgs')\n   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs\nendif\nif !has_key(g:rainbow_conf, 'ctermfgs')\n   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs\nendif\n\nlet g:niji_dark_colours = g:rbpt_colorpairs\nlet g:niji_light_colours = g:rbpt_colorpairs\n\n\"}}}\n\" GitGutter: {{{\n\nhi! link GitGutterAdd GruvboxGreenSign\nhi! link GitGutterChange GruvboxAquaSign\nhi! link GitGutterDelete GruvboxRedSign\nhi! link GitGutterChangeDelete GruvboxAquaSign\n\n\" }}}\n\" GitCommit: \"{{{\n\nhi! link gitcommitSelectedFile GruvboxGreen\nhi! link gitcommitDiscardedFile GruvboxRed\n\n\" }}}\n\" Signify: {{{\n\nhi! link SignifySignAdd GruvboxGreenSign\nhi! link SignifySignChange GruvboxAquaSign\nhi! link SignifySignDelete GruvboxRedSign\n\n\" }}}\n\" Syntastic: {{{\n\ncall s:HL('SyntasticError', s:none, s:none, s:undercurl, s:red)\ncall s:HL('SyntasticWarning', s:none, s:none, s:undercurl, s:yellow)\n\nhi! link SyntasticErrorSign GruvboxRedSign\nhi! link SyntasticWarningSign GruvboxYellowSign\n\n\" }}}\n\" Signature: {{{\nhi! link SignatureMarkText   GruvboxBlueSign\nhi! link SignatureMarkerText GruvboxPurpleSign\n\n\" }}}\n\" ShowMarks: {{{\n\nhi! link ShowMarksHLl GruvboxBlueSign\nhi! link ShowMarksHLu GruvboxBlueSign\nhi! link ShowMarksHLo GruvboxBlueSign\nhi! link ShowMarksHLm GruvboxBlueSign\n\n\" }}}\n\" CtrlP: {{{\n\nhi! link CtrlPMatch GruvboxYellow\nhi! link CtrlPNoEntries GruvboxRed\nhi! link CtrlPPrtBase GruvboxBg2\nhi! link CtrlPPrtCursor GruvboxBlue\nhi! link CtrlPLinePre GruvboxBg2\n\ncall s:HL('CtrlPMode1', s:blue, s:bg2, s:bold)\ncall s:HL('CtrlPMode2', s:bg0, s:blue, s:bold)\ncall s:HL('CtrlPStats', s:fg4, s:bg2, s:bold)\n\n\" }}}\n\" Startify: {{{\n\nhi! link StartifyBracket GruvboxFg3\nhi! link StartifyFile GruvboxFg1\nhi! link StartifyNumber GruvboxBlue\nhi! link StartifyPath GruvboxGray\nhi! link StartifySlash GruvboxGray\nhi! link StartifySection GruvboxYellow\nhi! link StartifySpecial GruvboxBg2\nhi! link StartifyHeader GruvboxOrange\nhi! link StartifyFooter GruvboxBg2\n\n\" }}}\n\" Vimshell: {{{\n\nlet g:vimshell_escape_colors = [\n  \\ s:bg4[0], s:red[0], s:green[0], s:yellow[0],\n  \\ s:blue[0], s:purple[0], s:aqua[0], s:fg4[0],\n  \\ s:bg0[0], s:red[0], s:green[0], s:orange[0],\n  \\ s:blue[0], s:purple[0], s:aqua[0], s:fg0[0]\n  \\ ]\n\n\" }}}\n\" BufTabLine: {{{\n\ncall s:HL('BufTabLineCurrent', s:bg0, s:fg4)\ncall s:HL('BufTabLineActive', s:fg4, s:bg2)\ncall s:HL('BufTabLineHidden', s:bg4, s:bg1)\ncall s:HL('BufTabLineFill', s:bg0, s:bg0)\n\n\" }}}\n\" Asynchronous Lint Engine: {{{\n\ncall s:HL('ALEError', s:none, s:none, s:undercurl, s:red)\ncall s:HL('ALEWarning', s:none, s:none, s:undercurl, s:yellow)\ncall s:HL('ALEInfo', s:none, s:none, s:undercurl, s:blue)\n\nhi! link ALEErrorSign GruvboxRedSign\nhi! link ALEWarningSign GruvboxYellowSign\nhi! link ALEInfoSign GruvboxBlueSign\n\n\" }}}\n\" Dirvish: {{{\n\nhi! link DirvishPathTail GruvboxAqua\nhi! link DirvishArg GruvboxYellow\n\n\" }}}\n\" Netrw: {{{\n\nhi! link netrwDir GruvboxAqua\nhi! link netrwClassify GruvboxAqua\nhi! link netrwLink GruvboxGray\nhi! link netrwSymLink GruvboxFg1\nhi! link netrwExe GruvboxYellow\nhi! link netrwComment GruvboxGray\nhi! link netrwList GruvboxBlue\nhi! link netrwHelpCmd GruvboxAqua\nhi! link netrwCmdSep GruvboxFg3\nhi! link netrwVersion GruvboxGreen\n\n\" }}}\n\" NERDTree: {{{\n\nhi! link NERDTreeDir GruvboxAqua\nhi! link NERDTreeDirSlash GruvboxAqua\n\nhi! link NERDTreeOpenable GruvboxOrange\nhi! link NERDTreeClosable GruvboxOrange\n\nhi! link NERDTreeFile GruvboxFg1\nhi! link NERDTreeExecFile GruvboxYellow\n\nhi! link NERDTreeUp GruvboxGray\nhi! link NERDTreeCWD GruvboxGreen\nhi! link NERDTreeHelp GruvboxFg1\n\nhi! link NERDTreeToggleOn GruvboxGreen\nhi! link NERDTreeToggleOff GruvboxRed\n\n\" }}}\n\" Vim Multiple Cursors: {{{\n\ncall s:HL('multiple_cursors_cursor', s:none, s:none, s:inverse)\ncall s:HL('multiple_cursors_visual', s:none, s:bg2)\n\n\" }}}\n\" coc.nvim: {{{\n\nhi! link CocErrorSign GruvboxRedSign\nhi! link CocWarningSign GruvboxOrangeSign\nhi! link CocInfoSign GruvboxYellowSign\nhi! link CocHintSign GruvboxBlueSign\nhi! link CocErrorFloat GruvboxRed\nhi! link CocWarningFloat GruvboxOrange\nhi! link CocInfoFloat GruvboxYellow\nhi! link CocHintFloat GruvboxBlue\nhi! link CocDiagnosticsError GruvboxRed\nhi! link CocDiagnosticsWarning GruvboxOrange\nhi! link CocDiagnosticsInfo GruvboxYellow\nhi! link CocDiagnosticsHint GruvboxBlue\n\nhi! link CocSelectedText GruvboxRed\nhi! link CocCodeLens GruvboxGray\n\ncall s:HL('CocErrorHighlight', s:none, s:none, s:undercurl, s:red)\ncall s:HL('CocWarningHighlight', s:none, s:none, s:undercurl, s:orange)\ncall s:HL('CocInfoHighlight', s:none, s:none, s:undercurl, s:yellow)\ncall s:HL('CocHintHighlight', s:none, s:none, s:undercurl, s:blue)\n\n\" }}}\n\n\" Filetype specific -----------------------------------------------------------\n\" Diff: {{{\n\nhi! link diffAdded GruvboxGreen\nhi! link diffRemoved GruvboxRed\nhi! link diffChanged GruvboxAqua\n\nhi! link diffFile GruvboxOrange\nhi! link diffNewFile GruvboxYellow\n\nhi! link diffLine GruvboxBlue\n\n\" }}}\n\" Html: {{{\n\nhi! link htmlTag GruvboxBlue\nhi! link htmlEndTag GruvboxBlue\n\nhi! link htmlTagName GruvboxAquaBold\nhi! link htmlArg GruvboxAqua\n\nhi! link htmlScriptTag GruvboxPurple\nhi! link htmlTagN GruvboxFg1\nhi! link htmlSpecialTagName GruvboxAquaBold\n\ncall s:HL('htmlLink', s:fg4, s:none, s:underline)\n\nhi! link htmlSpecialChar GruvboxOrange\n\ncall s:HL('htmlBold', s:vim_fg, s:vim_bg, s:bold)\ncall s:HL('htmlBoldUnderline', s:vim_fg, s:vim_bg, s:bold . s:underline)\ncall s:HL('htmlBoldItalic', s:vim_fg, s:vim_bg, s:bold . s:italic)\ncall s:HL('htmlBoldUnderlineItalic', s:vim_fg, s:vim_bg, s:bold . s:underline . s:italic)\n\ncall s:HL('htmlUnderline', s:vim_fg, s:vim_bg, s:underline)\ncall s:HL('htmlUnderlineItalic', s:vim_fg, s:vim_bg, s:underline . s:italic)\ncall s:HL('htmlItalic', s:vim_fg, s:vim_bg, s:italic)\n\n\" }}}\n\" Xml: {{{\n\nhi! link xmlTag GruvboxBlue\nhi! link xmlEndTag GruvboxBlue\nhi! link xmlTagName GruvboxBlue\nhi! link xmlEqual GruvboxBlue\nhi! link docbkKeyword GruvboxAquaBold\n\nhi! link xmlDocTypeDecl GruvboxGray\nhi! link xmlDocTypeKeyword GruvboxPurple\nhi! link xmlCdataStart GruvboxGray\nhi! link xmlCdataCdata GruvboxPurple\nhi! link dtdFunction GruvboxGray\nhi! link dtdTagName GruvboxPurple\n\nhi! link xmlAttrib GruvboxAqua\nhi! link xmlProcessingDelim GruvboxGray\nhi! link dtdParamEntityPunct GruvboxGray\nhi! link dtdParamEntityDPunct GruvboxGray\nhi! link xmlAttribPunct GruvboxGray\n\nhi! link xmlEntity GruvboxOrange\nhi! link xmlEntityPunct GruvboxOrange\n\" }}}\n\" Vim: {{{\n\ncall s:HL('vimCommentTitle', s:fg4_256, s:none, s:bold . s:italicize_comments)\n\nhi! link vimNotation GruvboxOrange\nhi! link vimBracket GruvboxOrange\nhi! link vimMapModKey GruvboxOrange\nhi! link vimFuncSID GruvboxFg3\nhi! link vimSetSep GruvboxFg3\nhi! link vimSep GruvboxFg3\nhi! link vimContinue GruvboxFg3\n\n\" }}}\n\" Clojure: {{{\n\nhi! link clojureKeyword GruvboxBlue\nhi! link clojureCond GruvboxOrange\nhi! link clojureSpecial GruvboxOrange\nhi! link clojureDefine GruvboxOrange\n\nhi! link clojureFunc GruvboxYellow\nhi! link clojureRepeat GruvboxYellow\nhi! link clojureCharacter GruvboxAqua\nhi! link clojureStringEscape GruvboxAqua\nhi! link clojureException GruvboxRed\n\nhi! link clojureRegexp GruvboxAqua\nhi! link clojureRegexpEscape GruvboxAqua\ncall s:HL('clojureRegexpCharClass', s:fg3, s:none, s:bold)\nhi! link clojureRegexpMod clojureRegexpCharClass\nhi! link clojureRegexpQuantifier clojureRegexpCharClass\n\nhi! link clojureParen GruvboxFg3\nhi! link clojureAnonArg GruvboxYellow\nhi! link clojureVariable GruvboxBlue\nhi! link clojureMacro GruvboxOrange\n\nhi! link clojureMeta GruvboxYellow\nhi! link clojureDeref GruvboxYellow\nhi! link clojureQuote GruvboxYellow\nhi! link clojureUnquote GruvboxYellow\n\n\" }}}\n\" C: {{{\n\nhi! link cOperator GruvboxPurple\nhi! link cStructure GruvboxOrange\n\n\" }}}\n\" Python: {{{\n\nhi! link pythonBuiltin GruvboxOrange\nhi! link pythonBuiltinObj GruvboxOrange\nhi! link pythonBuiltinFunc GruvboxOrange\nhi! link pythonFunction GruvboxAqua\nhi! link pythonDecorator GruvboxRed\nhi! link pythonInclude GruvboxBlue\nhi! link pythonImport GruvboxBlue\nhi! link pythonRun GruvboxBlue\nhi! link pythonCoding GruvboxBlue\nhi! link pythonOperator GruvboxRed\nhi! link pythonException GruvboxRed\nhi! link pythonExceptions GruvboxPurple\nhi! link pythonBoolean GruvboxPurple\nhi! link pythonDot GruvboxFg3\nhi! link pythonConditional GruvboxRed\nhi! link pythonRepeat GruvboxRed\nhi! link pythonDottedName GruvboxGreenBold\n\n\" }}}\n\" CSS: {{{\n\nhi! link cssBraces GruvboxBlue\nhi! link cssFunctionName GruvboxYellow\nhi! link cssIdentifier GruvboxOrange\nhi! link cssClassName GruvboxGreen\nhi! link cssColor GruvboxBlue\nhi! link cssSelectorOp GruvboxBlue\nhi! link cssSelectorOp2 GruvboxBlue\nhi! link cssImportant GruvboxGreen\nhi! link cssVendor GruvboxFg1\n\nhi! link cssTextProp GruvboxAqua\nhi! link cssAnimationProp GruvboxAqua\nhi! link cssUIProp GruvboxYellow\nhi! link cssTransformProp GruvboxAqua\nhi! link cssTransitionProp GruvboxAqua\nhi! link cssPrintProp GruvboxAqua\nhi! link cssPositioningProp GruvboxYellow\nhi! link cssBoxProp GruvboxAqua\nhi! link cssFontDescriptorProp GruvboxAqua\nhi! link cssFlexibleBoxProp GruvboxAqua\nhi! link cssBorderOutlineProp GruvboxAqua\nhi! link cssBackgroundProp GruvboxAqua\nhi! link cssMarginProp GruvboxAqua\nhi! link cssListProp GruvboxAqua\nhi! link cssTableProp GruvboxAqua\nhi! link cssFontProp GruvboxAqua\nhi! link cssPaddingProp GruvboxAqua\nhi! link cssDimensionProp GruvboxAqua\nhi! link cssRenderProp GruvboxAqua\nhi! link cssColorProp GruvboxAqua\nhi! link cssGeneratedContentProp GruvboxAqua\n\n\" }}}\n\" JavaScript: {{{\n\nhi! link javaScriptBraces GruvboxFg1\nhi! link javaScriptFunction GruvboxAqua\nhi! link javaScriptIdentifier GruvboxRed\nhi! link javaScriptMember GruvboxBlue\nhi! link javaScriptNumber GruvboxPurple\nhi! link javaScriptNull GruvboxPurple\nhi! link javaScriptParens GruvboxFg3\n\n\" }}}\n\" YAJS: {{{\n\nhi! link javascriptImport GruvboxAqua\nhi! link javascriptExport GruvboxAqua\nhi! link javascriptClassKeyword GruvboxAqua\nhi! link javascriptClassExtends GruvboxAqua\nhi! link javascriptDefault GruvboxAqua\n\nhi! link javascriptClassName GruvboxYellow\nhi! link javascriptClassSuperName GruvboxYellow\nhi! link javascriptGlobal GruvboxYellow\n\nhi! link javascriptEndColons GruvboxFg1\nhi! link javascriptFuncArg GruvboxFg1\nhi! link javascriptGlobalMethod GruvboxFg1\nhi! link javascriptNodeGlobal GruvboxFg1\nhi! link javascriptBOMWindowProp GruvboxFg1\nhi! link javascriptArrayMethod GruvboxFg1\nhi! link javascriptArrayStaticMethod GruvboxFg1\nhi! link javascriptCacheMethod GruvboxFg1\nhi! link javascriptDateMethod GruvboxFg1\nhi! link javascriptMathStaticMethod GruvboxFg1\n\n\" hi! link javascriptProp GruvboxFg1\nhi! link javascriptURLUtilsProp GruvboxFg1\nhi! link javascriptBOMNavigatorProp GruvboxFg1\nhi! link javascriptDOMDocMethod GruvboxFg1\nhi! link javascriptDOMDocProp GruvboxFg1\nhi! link javascriptBOMLocationMethod GruvboxFg1\nhi! link javascriptBOMWindowMethod GruvboxFg1\nhi! link javascriptStringMethod GruvboxFg1\n\nhi! link javascriptVariable GruvboxOrange\n\" hi! link javascriptVariable GruvboxRed\n\" hi! link javascriptIdentifier GruvboxOrange\n\" hi! link javascriptClassSuper GruvboxOrange\nhi! link javascriptIdentifier GruvboxOrange\nhi! link javascriptClassSuper GruvboxOrange\n\n\" hi! link javascriptFuncKeyword GruvboxOrange\n\" hi! link javascriptAsyncFunc GruvboxOrange\nhi! link javascriptFuncKeyword GruvboxAqua\nhi! link javascriptAsyncFunc GruvboxAqua\nhi! link javascriptClassStatic GruvboxOrange\n\nhi! link javascriptOperator GruvboxRed\nhi! link javascriptForOperator GruvboxRed\nhi! link javascriptYield GruvboxRed\nhi! link javascriptExceptions GruvboxRed\nhi! link javascriptMessage GruvboxRed\n\nhi! link javascriptTemplateSB GruvboxAqua\nhi! link javascriptTemplateSubstitution GruvboxFg1\n\n\" hi! link javascriptLabel GruvboxBlue\n\" hi! link javascriptObjectLabel GruvboxBlue\n\" hi! link javascriptPropertyName GruvboxBlue\nhi! link javascriptLabel GruvboxFg1\nhi! link javascriptObjectLabel GruvboxFg1\nhi! link javascriptPropertyName GruvboxFg1\n\nhi! link javascriptLogicSymbols GruvboxFg1\nhi! link javascriptArrowFunc GruvboxYellow\n\nhi! link javascriptDocParamName GruvboxFg4\nhi! link javascriptDocTags GruvboxFg4\nhi! link javascriptDocNotation GruvboxFg4\nhi! link javascriptDocParamType GruvboxFg4\nhi! link javascriptDocNamedParamType GruvboxFg4\n\nhi! link javascriptBrackets GruvboxFg1\nhi! link javascriptDOMElemAttrs GruvboxFg1\nhi! link javascriptDOMEventMethod GruvboxFg1\nhi! link javascriptDOMNodeMethod GruvboxFg1\nhi! link javascriptDOMStorageMethod GruvboxFg1\nhi! link javascriptHeadersMethod GruvboxFg1\n\nhi! link javascriptAsyncFuncKeyword GruvboxRed\nhi! link javascriptAwaitFuncKeyword GruvboxRed\n\n\" }}}\n\" PanglossJS: {{{\n\nhi! link jsClassKeyword GruvboxAqua\nhi! link jsExtendsKeyword GruvboxAqua\nhi! link jsExportDefault GruvboxAqua\nhi! link jsTemplateBraces GruvboxAqua\nhi! link jsGlobalNodeObjects GruvboxFg1\nhi! link jsGlobalObjects GruvboxFg1\nhi! link jsFunction GruvboxAqua\nhi! link jsFuncParens GruvboxFg3\nhi! link jsParens GruvboxFg3\nhi! link jsNull GruvboxPurple\nhi! link jsUndefined GruvboxPurple\nhi! link jsClassDefinition GruvboxYellow\n\n\" }}}\n\" TypeScript: {{{\n\nhi! link typeScriptReserved GruvboxAqua\nhi! link typeScriptLabel GruvboxAqua\nhi! link typeScriptFuncKeyword GruvboxAqua\nhi! link typeScriptIdentifier GruvboxOrange\nhi! link typeScriptBraces GruvboxFg1\nhi! link typeScriptEndColons GruvboxFg1\nhi! link typeScriptDOMObjects GruvboxFg1\nhi! link typeScriptAjaxMethods GruvboxFg1\nhi! link typeScriptLogicSymbols GruvboxFg1\nhi! link typeScriptDocSeeTag Comment\nhi! link typeScriptDocParam Comment\nhi! link typeScriptDocTags vimCommentTitle\nhi! link typeScriptGlobalObjects GruvboxFg1\nhi! link typeScriptParens GruvboxFg3\nhi! link typeScriptOpSymbols GruvboxFg3\nhi! link typeScriptHtmlElemProperties GruvboxFg1\nhi! link typeScriptNull GruvboxPurple\nhi! link typeScriptInterpolationDelimiter GruvboxAqua\n\n\" }}}\n\" PureScript: {{{\n\nhi! link purescriptModuleKeyword GruvboxAqua\nhi! link purescriptModuleName GruvboxFg1\nhi! link purescriptWhere GruvboxAqua\nhi! link purescriptDelimiter GruvboxFg4\nhi! link purescriptType GruvboxFg1\nhi! link purescriptImportKeyword GruvboxAqua\nhi! link purescriptHidingKeyword GruvboxAqua\nhi! link purescriptAsKeyword GruvboxAqua\nhi! link purescriptStructure GruvboxAqua\nhi! link purescriptOperator GruvboxBlue\n\nhi! link purescriptTypeVar GruvboxFg1\nhi! link purescriptConstructor GruvboxFg1\nhi! link purescriptFunction GruvboxFg1\nhi! link purescriptConditional GruvboxOrange\nhi! link purescriptBacktick GruvboxOrange\n\n\" }}}\n\" CoffeeScript: {{{\n\nhi! link coffeeExtendedOp GruvboxFg3\nhi! link coffeeSpecialOp GruvboxFg3\nhi! link coffeeCurly GruvboxOrange\nhi! link coffeeParen GruvboxFg3\nhi! link coffeeBracket GruvboxOrange\n\n\" }}}\n\" Ruby: {{{\n\nhi! link rubyStringDelimiter GruvboxGreen\nhi! link rubyInterpolationDelimiter GruvboxAqua\n\n\" }}}\n\" ObjectiveC: {{{\n\nhi! link objcTypeModifier GruvboxRed\nhi! link objcDirective GruvboxBlue\n\n\" }}}\n\" Go: {{{\n\nhi! link goDirective GruvboxAqua\nhi! link goConstants GruvboxPurple\nhi! link goDeclaration GruvboxRed\nhi! link goDeclType GruvboxBlue\nhi! link goBuiltins GruvboxOrange\n\n\" }}}\n\" Lua: {{{\n\nhi! link luaIn GruvboxRed\nhi! link luaFunction GruvboxAqua\nhi! link luaTable GruvboxOrange\n\n\" }}}\n\" MoonScript: {{{\n\nhi! link moonSpecialOp GruvboxFg3\nhi! link moonExtendedOp GruvboxFg3\nhi! link moonFunction GruvboxFg3\nhi! link moonObject GruvboxYellow\n\n\" }}}\n\" Java: {{{\n\nhi! link javaAnnotation GruvboxBlue\nhi! link javaDocTags GruvboxAqua\nhi! link javaCommentTitle vimCommentTitle\nhi! link javaParen GruvboxFg3\nhi! link javaParen1 GruvboxFg3\nhi! link javaParen2 GruvboxFg3\nhi! link javaParen3 GruvboxFg3\nhi! link javaParen4 GruvboxFg3\nhi! link javaParen5 GruvboxFg3\nhi! link javaOperator GruvboxOrange\n\nhi! link javaVarArg GruvboxGreen\n\n\" }}}\n\" Elixir: {{{\n\nhi! link elixirDocString Comment\n\nhi! link elixirStringDelimiter GruvboxGreen\nhi! link elixirInterpolationDelimiter GruvboxAqua\n\nhi! link elixirModuleDeclaration GruvboxYellow\n\n\" }}}\n\" Scala: {{{\n\n\" NB: scala vim syntax file is kinda horrible\nhi! link scalaNameDefinition GruvboxFg1\nhi! link scalaCaseFollowing GruvboxFg1\nhi! link scalaCapitalWord GruvboxFg1\nhi! link scalaTypeExtension GruvboxFg1\n\nhi! link scalaKeyword GruvboxRed\nhi! link scalaKeywordModifier GruvboxRed\n\nhi! link scalaSpecial GruvboxAqua\nhi! link scalaOperator GruvboxFg1\n\nhi! link scalaTypeDeclaration GruvboxYellow\nhi! link scalaTypeTypePostDeclaration GruvboxYellow\n\nhi! link scalaInstanceDeclaration GruvboxFg1\nhi! link scalaInterpolation GruvboxAqua\n\n\" }}}\n\" Markdown: {{{\n\ncall s:HL('markdownItalic', s:fg3, s:none, s:italic)\n\nhi! link markdownH1 GruvboxGreenBold\nhi! link markdownH2 GruvboxGreenBold\nhi! link markdownH3 GruvboxYellowBold\nhi! link markdownH4 GruvboxYellowBold\nhi! link markdownH5 GruvboxYellow\nhi! link markdownH6 GruvboxYellow\n\nhi! link markdownCode GruvboxAqua\nhi! link markdownCodeBlock GruvboxAqua\nhi! link markdownCodeDelimiter GruvboxAqua\n\nhi! link markdownBlockquote GruvboxGray\nhi! link markdownListMarker GruvboxGray\nhi! link markdownOrderedListMarker GruvboxGray\nhi! link markdownRule GruvboxGray\nhi! link markdownHeadingRule GruvboxGray\n\nhi! link markdownUrlDelimiter GruvboxFg3\nhi! link markdownLinkDelimiter GruvboxFg3\nhi! link markdownLinkTextDelimiter GruvboxFg3\n\nhi! link markdownHeadingDelimiter GruvboxOrange\nhi! link markdownUrl GruvboxPurple\nhi! link markdownUrlTitleDelimiter GruvboxGreen\n\ncall s:HL('markdownLinkText', s:gray, s:none, s:underline)\nhi! link markdownIdDeclaration markdownLinkText\n\n\" }}}\n\" Haskell: {{{\n\n\" hi! link haskellType GruvboxYellow\n\" hi! link haskellOperators GruvboxOrange\n\" hi! link haskellConditional GruvboxAqua\n\" hi! link haskellLet GruvboxOrange\n\"\nhi! link haskellType GruvboxFg1\nhi! link haskellIdentifier GruvboxFg1\nhi! link haskellSeparator GruvboxFg1\nhi! link haskellDelimiter GruvboxFg4\nhi! link haskellOperators GruvboxBlue\n\"\nhi! link haskellBacktick GruvboxOrange\nhi! link haskellStatement GruvboxOrange\nhi! link haskellConditional GruvboxOrange\n\nhi! link haskellLet GruvboxAqua\nhi! link haskellDefault GruvboxAqua\nhi! link haskellWhere GruvboxAqua\nhi! link haskellBottom GruvboxAqua\nhi! link haskellBlockKeywords GruvboxAqua\nhi! link haskellImportKeywords GruvboxAqua\nhi! link haskellDeclKeyword GruvboxAqua\nhi! link haskellDeriving GruvboxAqua\nhi! link haskellAssocType GruvboxAqua\n\nhi! link haskellNumber GruvboxPurple\nhi! link haskellPragma GruvboxPurple\n\nhi! link haskellString GruvboxGreen\nhi! link haskellChar GruvboxGreen\n\n\" }}}\n\" Json: {{{\n\nhi! link jsonKeyword GruvboxGreen\nhi! link jsonQuote GruvboxGreen\nhi! link jsonBraces GruvboxFg1\nhi! link jsonString GruvboxFg1\n\n\" }}}\n\n\n\" Functions -------------------------------------------------------------------\n\" Search Highlighting Cursor {{{\n\nfunction! GruvboxHlsShowCursor()\n  call s:HL('Cursor', s:bg0, s:hls_cursor)\nendfunction\n\nfunction! GruvboxHlsHideCursor()\n  call s:HL('Cursor', s:none, s:none, s:inverse)\nendfunction\n\n\" }}}\n\n\" vim: set sw=2 ts=2 sts=2 et tw=80 ft=vim fdm=marker:\n"})}),"\n",(0,r.jsx)(e.h2,{id:"pyenv",children:"pyenv"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.code,{children:".pip/pip.conf"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"[global]\nindex-url = https://mirrors.aliyun.com/pypi/simple/\n[install]\ntrusted-host=mirrors.aliyun.com\n"})})]})}function b(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(g,{...n})}):g(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>t});var r=i(30758);const l={},s=r.createContext(l);function o(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:o(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);