"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[45730],{62326:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"leetcode/801-900/\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362","title":"833.\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362","description":"\u94fe\u63a5\uff1a833.\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362","source":"@site/docs/leetcode/801-900/833.\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362.md","sourceDirName":"leetcode/801-900","slug":"/leetcode/801-900/\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362","permalink":"/docs/leetcode/801-900/\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":833,"frontMatter":{},"sidebar":"journal","previous":{"title":"832.\u7ffb\u8f6c\u56fe\u50cf","permalink":"/docs/leetcode/801-900/\u7ffb\u8f6c\u56fe\u50cf"},"next":{"title":"834.\u6811\u4e2d\u8ddd\u79bb\u4e4b\u548c","permalink":"/docs/leetcode/801-900/\u6811\u4e2d\u8ddd\u79bb\u4e4b\u548c"}}');var t=i(25105),r=i(8556);const c={},l="833.\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362",d={},o=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"833\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362",children:"833.\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/find-and-replace-in-string",children:"833.\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\u4e0e\u66ff\u6362"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32\u3001\u6392\u5e8f",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5728\u5bf9 s \u6267\u884c\u6240\u6709\u66ff\u6362\u64cd\u4f5c\u540e\u8fd4\u56de \u7ed3\u679c\u5b57\u7b26\u4e32 \u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-15"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a44ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def findReplaceString(self, s: str, indices: List[int], sources: List[str], targets: List[str]) -> str:\n        n = len(indices)\n        idxs = [i for i in range(n)]\n        idxs.sort(key=lambda i: indices[i], reverse=True)\n        for idx in range(n):\n            i = idxs[idx]\n            if s[indices[i]:indices[i]+len(sources[i])] == sources[i]:\n                s = s[0:indices[i]] + targets[i] +                     s[indices[i]+len(sources[i]):]\n                print(s)\n        return s\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-15"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a13.16MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u4ece\u540e\u5f80\u524d\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    string findReplaceString(string s, vector<int>& indices, vector<string>& sources, vector<string>& targets) {\n        int n = indices.size();\n        vector<int> idxs;\n        for (int i = 0; i < n; i++) idxs.push_back(i);\n        sort(idxs.begin(), idxs.end(), [&](auto &i1, auto &i2) {\n            return indices[i2] < indices[i1];\n        });\n        auto check = [&](int &start, string &source) {\n            for (int i = 0; i < source.size(); i++) {\n                if (start + i >= s.size() || source[i] != s[start + i]) return false;\n            }\n            return true;\n        };\n        for (int idx = 0; idx < n; idx++) {\n            int i = idxs[idx];\n            if (check(indices[i], sources[i])) {\n                s = s.substr(0, indices[i]) + targets[i] + s.substr(indices[i] + sources[i].size());\n            }\n        }\n        return s;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-15"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn find_replace_string(\n        mut s: String,\n        indices: Vec<i32>,\n        sources: Vec<String>,\n        targets: Vec<String>,\n    ) -> String {\n        let indices = indices.into_iter().map(|i| i as usize).collect::<Vec<_>>();\n        let n = indices.len();\n        let mut idxs = (0..n).collect::<Vec<_>>();\n        idxs.sort_by_key(|i| indices[*i]);\n        idxs.reverse();\n        for i in idxs {\n            if indices[i] + sources[i].len() <= s.len() && s[indices[i]..indices[i] + sources[i].len()] == sources[i] {\n                let mut ns = String::new();\n                ns.push_str(&s[0..indices[i]]);\n                ns.push_str(&targets[i]);\n                ns.push_str(&s[indices[i] + sources[i].len()..]);\n                s = ns;\n            }\n        }\n        s\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8556:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>l});var s=i(58101);const t={},r=s.createContext(t);function c(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);