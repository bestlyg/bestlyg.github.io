"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[48312],{17230:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"leetcode/701-800/\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II","title":"731.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II","description":"\u94fe\u63a5\uff1a731.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II","source":"@site/docs/leetcode/701-800/731.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II.md","sourceDirName":"leetcode/701-800","slug":"/leetcode/701-800/\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II","permalink":"/docs/leetcode/701-800/\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":731,"frontMatter":{},"sidebar":"journal","previous":{"title":"729.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868I","permalink":"/docs/leetcode/701-800/\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868I"},"next":{"title":"732.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868III","permalink":"/docs/leetcode/701-800/\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868III"}}');var i=t(25105),l=t(8556);const r={},o="731.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II",c={},a=[{value:"\u9898\u89e3 1 - rust",id:"\u9898\u89e3-1---rust",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"731\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868ii",children:"731.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(n.a,{href:"https://leetcode.cn/problems/my-calendar-ii",children:"731.\u6211\u7684\u65e5\u7a0b\u5b89\u6392\u8868II"}),(0,i.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,i.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u8bbe\u8ba1\u3001\u7ebf\u6bb5\u6811\u3001\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u6709\u5e8f\u96c6\u5408\u3001\u524d\u7f00\u548c",(0,i.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5b9e\u73b0\u4e00\u4e2a MyCalendar \u7c7b\u6765\u5b58\u653e\u4f60\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u5982\u679c\u8981\u6dfb\u52a0\u7684\u65f6\u95f4\u5185\u4e0d\u4f1a\u5bfc\u81f4\u4e09\u91cd\u9884\u8ba2\u65f6\uff0c\u5219\u53ef\u4ee5\u5b58\u50a8\u8fd9\u4e2a\u65b0\u7684\u65e5\u7a0b\u5b89\u6392\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u9898\u89e3-1---rust",children:"\u9898\u89e3 1 - rust"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-07-19"}),"\n",(0,i.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a28ms"}),"\n",(0,i.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.7MB"}),"\n",(0,i.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,i.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u8bb0\u5f55\u5df2\u7ecf\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u6bcf\u6b21\u904d\u5386\u65f6\u5224\u65ad\u65b0\u6dfb\u52a0\u7684\u662f\u5426\u548c\u5df2\u91cd\u53e0\u90e8\u5206\u6709\u51b2\u7a81\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'struct MyCalendarTwo {\n    list: Vec<(i32, i32)>,\n    overlap: Vec<(i32, i32)>,\n}\nimpl MyCalendarTwo {\n    fn new() -> Self {\n        MyCalendarTwo {\n            list: Vec::new(),\n            overlap: Vec::new(),\n        }\n    }\n    fn book(&mut self, start: i32, end: i32) -> bool {\n        let block = (start, end);\n        for item in &self.overlap {\n            if self.is_overlap(&block, item) {\n                return false;\n            }\n        }\n        for item in &self.list {\n            if self.is_overlap(&block, item) {\n                self.overlap.push((block.0.max(item.0), block.1.min(item.1)));\n            }\n        }\n        self.list.push(block);\n        print!("{}", block.0);\n        true\n    }\n    fn is_overlap(&self, v1: &(i32, i32), v2: &(i32, i32)) -> bool {\n        v1.0 < v2.1 && v1.1 > v2.0\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2025-01-03"}),"\n",(0,i.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a2079ms"}),"\n",(0,i.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a18.68MB"}),"\n",(0,i.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5dee\u5206\u8bb0\u5f55\u533a\u95f4\u5185\u5df2\u7ecf\u8ba2\u9605\u7684\u8bfe\u7a0b\u6570\u91cf"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def has_intersection(a1: int, b1: int, a2: int, b2: int) -> int:\n    return a1 < b2 and a2 < b1\nclass MyCalendarTwo:\n    def __init__(self):\n        self.map = SortedDict()\n    def book(self, startTime: int, endTime: int) -> bool:\n        cnt = 0\n        for v1, v2 in pairwise(self.map.items()):\n            cnt += v1[1]\n            if has_intersection(startTime, endTime, v1[0], v2[0]) and cnt == 2:\n                return False\n        self.map.setdefault(startTime, 0)\n        self.map.setdefault(endTime, 0)\n        self.map[startTime] += 1\n        self.map[endTime] -= 1\n        if self.map[endTime] == 0: self.map.pop(endTime)\n        return True\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8556:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(58101);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);