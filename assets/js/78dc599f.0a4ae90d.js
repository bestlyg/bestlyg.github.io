"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[57478],{49431:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"leetcode/2901-3000/\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II","title":"2982.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II","description":"\u94fe\u63a5\uff1a2982.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II","source":"@site/docs/leetcode/2901-3000/2982.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II.md","sourceDirName":"leetcode/2901-3000","slug":"/leetcode/2901-3000/\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II","permalink":"/docs/leetcode/2901-3000/\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2982,"frontMatter":{},"sidebar":"journal","previous":{"title":"2981.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32I","permalink":"/docs/leetcode/2901-3000/\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32I"},"next":{"title":"3007.\u4ef7\u503c\u548c\u5c0f\u4e8e\u7b49\u4e8eK\u7684\u6700\u5927\u6570\u5b57","permalink":"/docs/leetcode/3001-3100/\u4ef7\u503c\u548c\u5c0f\u4e8e\u7b49\u4e8eK\u7684\u6700\u5927\u6570\u5b57"}}');var s=t(86070),i=t(31503);const o={},l="2982.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II",c={},a=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"2982\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32ii",children:"2982.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(n.a,{href:"https://leetcode.cn/problems/find-longest-special-substring-that-occurs-thrice-ii",children:"2982.\u627e\u51fa\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32II"}),(0,s.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32\u3001\u4e8c\u5206\u67e5\u627e\u3001\u8ba1\u6570\u3001\u6ed1\u52a8\u7a97\u53e3",(0,s.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u5728 s \u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e09\u6b21 \u7684 \u6700\u957f\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32 \u7684\u957f\u5ea6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u51fa\u73b0\u81f3\u5c11\u4e09\u6b21\u7684\u7279\u6b8a\u5b50\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de -1 \u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-05-30"}),"\n",(0,s.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a461ms"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a18.88MB"}),"\n",(0,s.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u54c8\u5e0c\u5b58\u50a8\u6240\u6709\u76f8\u540c\u5b57\u7b26\u7684\u4e32\u7684\u957f\u5ea6\uff0c\u5224\u65ad\u540c\u7c7b\u4e32\u7684\u6700\u5927\u957f\u5ea6\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_longest(arr: Counter) -> int:\n        max_key = max(arr.keys())\n        if arr[max_key] >= 3:\n            return max_key\n        elif arr[max_key] * 2 + arr[max_key - 1] >= 3:\n            return max_key - 1\n        return max_key - 2\n    class Solution:\n        def maximumLength(self, s: str) -> int:\n            n = len(s)\n            map = defaultdict(Counter)\n            i = 0\n            while i < n:\n                j = i\n                while i < n and s[j] == s[i]: i += 1\n                map[s[j]][i - j] += 1\n            vmax = max([get_longest(arr) for arr in map.values()])\n            return vmax if vmax else -1\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},31503:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(30758);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);