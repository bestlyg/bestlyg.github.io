"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[63001],{98778:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"leetcode/3001-3100/\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee","title":"3067.\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee","description":"\u94fe\u63a5\uff1a3067.\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee","source":"@site/docs/leetcode/3001-3100/3067.\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee.md","sourceDirName":"leetcode/3001-3100","slug":"/leetcode/3001-3100/\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee","permalink":"/docs/leetcode/3001-3100/\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3067,"frontMatter":{},"sidebar":"journal","previous":{"title":"3046.\u5206\u5272\u6570\u7ec4","permalink":"/docs/leetcode/3001-3100/\u5206\u5272\u6570\u7ec4"},"next":{"title":"3072.\u5c06\u5143\u7d20\u5206\u914d\u5230\u4e24\u4e2a\u6570\u7ec4\u4e2dII","permalink":"/docs/leetcode/3001-3100/\u5c06\u5143\u7d20\u5206\u914d\u5230\u4e24\u4e2a\u6570\u7ec4\u4e2dII"}}');var s=t(25105),o=t(8556);const i={},c="3067.\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee",l={},d=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"3067\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee",children:"3067.\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(n.a,{href:"https://leetcode.cn/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network",children:"3067.\u5728\u5e26\u6743\u6811\u7f51\u7edc\u4e2d\u7edf\u8ba1\u53ef\u8fde\u63a5\u670d\u52a1\u5668\u5bf9\u6570\u76ee"}),(0,s.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4",(0,s.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 count \uff0c\u5176\u4e2d count[i] \u8868\u793a\u901a\u8fc7\u670d\u52a1\u5668 i \u53ef\u8fde\u63a5 \u7684\u670d\u52a1\u5668\u5bf9\u7684 \u6570\u76ee \u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-06-04"}),"\n",(0,s.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a797ms"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a18.23MB"}),"\n",(0,s.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6a21\u62df\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def countPairsOfConnectableServers(self, edges: List[List[int]], signalSpeed: int) -> List[int]:\n        nodes = [[] for _ in range(len(edges) + 1)]\n        for n1, n2, w in edges:\n            nodes[n1].append((n2, w))\n            nodes[n2].append((n1, w))\n        def dfs(cur: int, prev: int, sum: int) -> int:\n            res = 0\n            if sum % signalSpeed == 0: res += 1\n            for next, w in nodes[cur]:\n                if next != prev:\n                    res += dfs(next, cur, sum + w)\n            return res\n        def get_cnt(cur: int) -> int:\n            if len(nodes[cur]) == 1: return 0\n            arr = [dfs(next, cur, w) for next, w in nodes[cur]]\n            vsum = sum(arr)\n            res = 0\n            for v in arr:\n                vsum -= v\n                res += v * vsum\n            return res\n        return [get_cnt(i) for i in range(len(nodes))]\n"})})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8556:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(58101);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);