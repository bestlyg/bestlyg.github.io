"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[41625],{60297:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>u});var i=t(86070),s=t(25710);const r={},o="2646.\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",d={id:"leetcode/2601-2700/\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",title:"2646.\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",description:"\u94fe\u63a5\uff1a2646.\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",source:"@site/docs/leetcode/2601-2700/2646.\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c.md",sourceDirName:"leetcode/2601-2700",slug:"/leetcode/2601-2700/\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",permalink:"/docs/leetcode/2601-2700/\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2646,frontMatter:{},sidebar:"journal",previous:{title:"2645.\u6784\u9020\u6709\u6548\u5b57\u7b26\u4e32\u7684\u6700\u5c11\u63d2\u5165\u6570",permalink:"/docs/leetcode/2601-2700/\u6784\u9020\u6709\u6548\u5b57\u7b26\u4e32\u7684\u6700\u5c11\u63d2\u5165\u6570"},next:{title:"2648.\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217",permalink:"/docs/leetcode/2601-2700/\u751f\u6210\u6590\u6ce2\u90a3\u5951\u6570\u5217"}},c={},u=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function l(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"2646\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c",children:"2646.\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/minimize-the-total-price-of-the-trips",children:"2646.\u6700\u5c0f\u5316\u65c5\u884c\u7684\u4ef7\u683c\u603b\u548c"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u56f0\u96be",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u56fe\u3001\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u73b0\u6709\u4e00\u68f5\u65e0\u5411\u3001\u65e0\u6839\u7684\u6811\uff0c\u6811\u4e2d\u6709 n \u4e2a\u8282\u70b9\uff0c\u6309\u4ece 0 \u5230 n - 1 \u7f16\u53f7\u3002\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u957f\u5ea6\u4e3a n - 1 \u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 edges \uff0c\u5176\u4e2d edges[i] = [ai, bi] \u8868\u793a\u6811\u4e2d\u8282\u70b9 ai \u548c bi \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u5173\u8054\u4e00\u4e2a\u4ef7\u683c\u3002\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 price \uff0c\u5176\u4e2d price[i] \u662f\u7b2c i \u4e2a\u8282\u70b9\u7684\u4ef7\u683c\u3002\u7ed9\u5b9a\u8def\u5f84\u7684 \u4ef7\u683c\u603b\u548c \u662f\u8be5\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u4ef7\u683c\u4e4b\u548c\u3002\u53e6\u7ed9\u4f60\u4e00\u4e2a\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 trips \uff0c\u5176\u4e2d trips[i] = [starti, endi] \u8868\u793a\u60a8\u4ece\u8282\u70b9 starti \u5f00\u59cb\u7b2c i \u6b21\u65c5\u884c\uff0c\u5e76\u901a\u8fc7\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u8def\u5f84\u524d\u5f80\u8282\u70b9 endi \u3002\u5728\u6267\u884c\u7b2c\u4e00\u6b21\u65c5\u884c\u4e4b\u524d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b \u975e\u76f8\u90bb\u8282\u70b9 \u5e76\u5c06\u4ef7\u683c\u51cf\u534a\u3002\u8fd4\u56de\u6267\u884c\u6240\u6709\u65c5\u884c\u7684\u6700\u5c0f\u4ef7\u683c\u603b\u548c\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-16"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a760ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a241.1MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6811dp\uff0c\u8bb0\u5f55\u9009\u5f53\u524d\u70b9\u548c\u4e0d\u9009\u65f6\u7684\u6253\u6298\u4ef7\u683c\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"#define pii pair<int, int>\n    #define X first\n    #define Y second\n    struct Node {\n        int idx, price;\n        vector<int> next;\n    };\n    struct QNode {\n        int i, sum;\n        vector<int> list;\n    };\n    class Solution {\n    public:\n        int minimumTotalPrice(int n, vector<vector<int>>& edges, vector<int>& price, vector<vector<int>>& trips) {\n            vector<Node> list(n);\n            for (int i = 0; i < n; i++) {\n                list[i].idx = i;\n                list[i].price = price[i];\n            }\n            for (auto &edge : edges) {\n                list[edge[0]].next.push_back(edge[1]);\n                list[edge[1]].next.push_back(edge[0]);\n            }\n            // \u8bb0\u5f55\u6240\u6709\u8def\u5f84\n            vector<vector<QNode>> roads(n, vector<QNode>(n));\n            for (int i = 0; i < n; i++) {\n                roads[i][i] = QNode{ i, list[i].price, vector<int>(1, i)};\n                queue<QNode> q;\n                q.push(QNode{ i, list[i].price, vector<int>(1, i)});\n                unordered_set<int> used;\n                used.insert(i);\n                while (q.size()) {\n                    auto cur = q.front();\n                    q.pop();\n                    for (auto &next : list[cur.i].next) {\n                        if (used.count(next)) continue;\n                        used.insert(next);\n                        auto nextNode = cur;\n                        nextNode.i = next;\n                        nextNode.sum += list[next].price;\n                        nextNode.list.push_back(next);\n                        roads[i][next] = nextNode;\n                        q.push(nextNode);\n                    }\n                }\n            }\n            // \u8bb0\u5f55\u4e0d\u6253\u6298\u65f6\u603b\u4ef7\uff0c\u548c\u6bcf\u4e2a\u70b9\u4f1a\u88ab\u904d\u5386\u51e0\u6b21\n            int sums = 0, res = 0x7fffffff;\n            vector<int> weights(n, 0);\n            for (auto &trip : trips) {\n                sums += roads[trip[0]][trip[1]].sum;\n                for (auto &item : roads[trip[0]][trip[1]].list) {\n                    weights[item]++;\n                }\n            }\n            // X \u8bb0\u5f55\u8fd9\u4e2a\u70b9\u9009\u7684\u65f6\u5019\u6700\u591a\u80fd\u6253\u591a\u5c11\n            // Y \u8bb0\u5f55\u8fd9\u4e2a\u70b9\u4e0d\u9009\u7684\u65f6\u5019\u6700\u591a\u80fd\u6253\u591a\u5c11\n            unordered_set<int> used;\n            function<pii(int)> discount = [&](int start) -> pii {\n                pii res = make_pair(list[start].price / 2 * weights[start], 0);\n                for (auto &next : list[start].next) {\n                    if (used.count(next)) continue;\n                    used.insert(next);\n                    auto nextRes = discount(next);\n                    res.X += nextRes.Y;                \n                    res.Y += max(nextRes.X, nextRes.Y);\n                    used.erase(next);\n                }\n                return res;\n            };\n            used.insert(0);\n            auto disres = discount(0);\n            res = min(res, sums - max(disres.X, disres.Y));\n            used.erase(0);\n            return res;\n        }\n    };\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-12-06"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a888ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a257.3MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u63d0\u524d\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u4f1a\u88ab\u7ecf\u8fc7\u7684\u6b21\u6570\uff0c\u7136\u540edp\u5224\u65ad\u6bcf\u4e2a\u70b9\u6253\u6298\u548c\u4e0d\u6253\u6298\u7684\u60c5\u51b5\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"class Solution:\n        def minimumTotalPrice(self, n: int, edges: List[List[int]], price: List[int], trips: List[List[int]]) -> int:\n            nodes = [[] for _ in range(n)]\n            for n1, n2 in edges:\n                nodes[n1].append(n2)\n                nodes[n2].append(n1)\n            cnts = [0] * n\n            def dfs(start: int, end: int, used: int) -> bool:\n                if start == end:\n                    cnts[end] += 1\n                    return True\n                check = False\n                for next in nodes[start]:\n                    if (used & (1 << next)) == 0 and dfs(next, end, used | (1 << next)):\n                        cnts[start] += 1\n                        check = True\n                return check\n            for start, end in trips: dfs(start, end, 1 << start)\n            sums = sum(c * price[i] for i, c in enumerate(cnts))\n            @cache\n            def try_trip(idx: int, used: int, can: bool) -> int:\n                res1 = 0\n                if can: \n                    res1 += int(cnts[idx] * price[idx] / 2)\n                    for next in nodes[idx]:\n                        if (used & (1 << next)) == 0:\n                            res1 += try_trip(next, used | (1 << next), not can)\n                res2 = 0\n                for next in nodes[idx]:\n                    if (used & (1 << next)) == 0:\n                        res2 += try_trip(next, used | (1 << next), True)\n                return max(res1, res2)\n            return min(sums - try_trip(i, 1 << i, True) for i in range(n))\n"})})]})}function a(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},25710:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>d});var i=t(30758);const s={},r=i.createContext(s);function o(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);