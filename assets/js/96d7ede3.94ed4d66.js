"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[25142],{51856:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var s=t(86070),i=t(25710);const r={},o="2225.\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",l={id:"leetcode/2201-2300/\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",title:"2225.\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",description:"\u94fe\u63a5\uff1a2225.\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",source:"@site/docs/leetcode/2201-2300/2225.\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6.md",sourceDirName:"leetcode/2201-2300",slug:"/leetcode/2201-2300/\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",permalink:"/docs/leetcode/2201-2300/\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2225,frontMatter:{},sidebar:"journal",previous:{title:"2216.\u7f8e\u5316\u6570\u7ec4\u7684\u6700\u5c11\u5220\u9664\u6570",permalink:"/docs/leetcode/2201-2300/\u7f8e\u5316\u6570\u7ec4\u7684\u6700\u5c11\u5220\u9664\u6570"},next:{title:"2235.\u4e24\u6574\u6570\u76f8\u52a0",permalink:"/docs/leetcode/2201-2300/\u4e24\u6574\u6570\u76f8\u52a0"}},c={},d=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"2225\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6",children:"2225.\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/find-players-with-zero-or-one-losses",children:"2225.\u627e\u51fa\u8f93\u6389\u96f6\u573a\u6216\u4e00\u573a\u6bd4\u8d5b\u7684\u73a9\u5bb6"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u8ba1\u6570\u3001\u6392\u5e8f",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 matches \u5176\u4e2d matches[i] = [winneri, loseri] \u8868\u793a\u5728\u4e00\u573a\u6bd4\u8d5b\u4e2d winneri \u51fb\u8d25\u4e86 loseri \u3002\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u4e3a 2 \u7684\u5217\u8868 answer\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-05-22"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a378ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a59.18MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def findWinners(self, matches: List[List[int]]) -> List[List[int]]:\n        counter = Counter()\n        for w, l in matches:\n            if not counter[w]: counter[w] = 0\n            counter[l] += 1\n        res = [[], []] \n        for k, v in sorted(counter.items()):\n            if v < 2:\n                res[v].append(k)\n        return res\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-05-22"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a209ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a56.78MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n            def findWinners(self, matches: List[List[int]]) -> List[List[int]]:\n                sets = [set() for _ in range(3)]\n                for w, l in matches:\n                    if w not in sets[0] and w not in sets[1] and w not in sets[2]:\n                        sets[0].add(w)\n                    if l not in sets[0] and l not in sets[1] and l not in sets[2]:\n                        sets[1].add(l)\n                    else:\n                        idx = 0\n                        while idx < 2:\n                            if l in sets[idx]:\n                                sets[idx].remove(l)\n                                sets[idx + 1].add(l)\n                                break\n                            idx += 1\n                return [sorted(v) for v in sets[:2]]\n"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},25710:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>l});var s=t(30758);const i={},r=s.createContext(i);function o(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);