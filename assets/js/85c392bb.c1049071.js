"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[15165],{83628:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"leetcode/2601-2700/\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570","title":"2644.\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570","description":"\u94fe\u63a5\uff1a2644.\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570","source":"@site/docs/leetcode/2601-2700/2644.\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570.md","sourceDirName":"leetcode/2601-2700","slug":"/leetcode/2601-2700/\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570","permalink":"/docs/leetcode/2601-2700/\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2644,"frontMatter":{},"sidebar":"journal","previous":{"title":"2643.\u4e00\u6700\u591a\u7684\u884c","permalink":"/docs/leetcode/2601-2700/\u4e00\u6700\u591a\u7684\u884c"},"next":{"title":"2645.\u6784\u9020\u6709\u6548\u5b57\u7b26\u4e32\u7684\u6700\u5c11\u63d2\u5165\u6570","permalink":"/docs/leetcode/2601-2700/\u6784\u9020\u6709\u6548\u5b57\u7b26\u4e32\u7684\u6700\u5c11\u63d2\u5165\u6570"}}');var r=s(86070),t=s(31503);const l={},c="2644.\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570",o={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2},{value:"\u9898\u89e3 4 - python",id:"\u9898\u89e3-4---python",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"2644\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570",children:"2644.\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/find-the-maximum-divisibility-score",children:"2644.\u627e\u51fa\u53ef\u6574\u9664\u6027\u5f97\u5206\u6700\u5927\u7684\u6574\u6570"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aEasy",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e24\u4e2a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u7684\u6574\u6570\u6570\u7ec4 nums \u548c divisors \u3002divisors[i] \u7684 \u53ef\u6574\u9664\u6027\u5f97\u5206 \u7b49\u4e8e\u6ee1\u8db3 nums[j] \u80fd\u88ab divisors[i] \u6574\u9664\u7684\u4e0b\u6807 j \u7684\u6570\u91cf\u3002\u8fd4\u56de \u53ef\u6574\u9664\u6027\u5f97\u5206 \u6700\u5927\u7684\u6574\u6570 divisors[i] \u3002\u5982\u679c\u6709\u591a\u4e2a\u6574\u6570\u5177\u6709\u6700\u5927\u5f97\u5206\uff0c\u5219\u8fd4\u56de\u6570\u503c\u6700\u5c0f\u7684\u4e00\u4e2a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-16"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a240ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a28.6MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n    public:\n        int maxDivScore(vector<int>& nums, vector<int>& divisors) {\n            int res = 0x7fffffff, resCnt = 0;\n            for (auto &v : divisors) {\n                int cnt = 0;\n                for (auto &num : nums) {\n                    if (num % v == 0) cnt++;\n                }\n                if (resCnt < cnt || resCnt == cnt && res > v) {\n                    res = v;\n                    resCnt = cnt;\n                }\n            }\n            return res;\n        }\n    };\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-16"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a2868ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.2MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def maxDivScore(self, nums: List[int], divisors: List[int]) -> int:\n        res = 0x7fffffff\n        resCnt = 0\n        for v in divisors:\n            cnt = 0\n            for num in nums:\n                if num % v == 0:\n                    cnt += 1\n            if resCnt < cnt or resCnt == cnt and res > v:\n                res = v\n                resCnt = cnt\n        return res\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-16"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a172ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn max_div_score(nums: Vec<i32>, divisors: Vec<i32>) -> i32 {\n        let mut res = i32::MAX;\n        let mut resCnt = 0;\n        for v in divisors {\n            let mut cnt = 0;\n            for num in nums.iter() {\n                if *num % v == 0 {\n                    cnt += 1;\n                }\n            }\n            if resCnt < cnt || resCnt == cnt && res > v {\n                res = v;\n                resCnt = cnt;\n            }\n        }\n        res\n    }\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-4---python",children:"\u9898\u89e3 4 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-05-18"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4015ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.7MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def maxDivScore(self, nums: List[int], divisors: List[int]) -> int:\n        res = 0\n        res_num = divisors[0]\n        arr = [sum(num % divisor == 0 for num in nums) for divisor in divisors]\n        for i in range(len(divisors)):\n            if arr[i] >= res:\n                if arr[i] > res or arr[i] == res and divisors[i] < res_num:\n                    res_num = divisors[i]\n                res = arr[i]\n        return res_num\n"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},31503:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>c});var i=s(30758);const r={},t=i.createContext(r);function l(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);