"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[3143],{53276:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=n(86070),r=n(25710);const i={},l="563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",o={id:"leetcode/501-600/\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",title:"563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",description:"\u94fe\u63a5\uff1a563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",source:"@site/docs/leetcode/501-600/563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6.md",sourceDirName:"leetcode/501-600",slug:"/leetcode/501-600/\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",permalink:"/web/site/docs/leetcode/501-600/\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:563,frontMatter:{},sidebar:"journal",previous:{title:"561.\u6570\u7ec4\u62c6\u5206",permalink:"/web/site/docs/leetcode/501-600/\u6570\u7ec4\u62c6\u5206"},next:{title:"564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",permalink:"/web/site/docs/leetcode/501-600/\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570"}},c={},d=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2}];function u(e){const t={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"563\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",children:"563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(t.a,{href:"https://leetcode.cn/problems/binary-tree-tilt",children:"563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6"}),(0,s.jsx)(t.br,{}),"\n","\u96be\u5ea6\uff1a\u7b80\u5355",(0,s.jsx)(t.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",(0,s.jsx)(t.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8ba1\u7b97 \u6574\u4e2a\u6811 \u7684\u5761\u5ea6 \u3002"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-11-18"}),"\n",(0,s.jsx)(t.li,{children:"\u6267\u884c\u7528\u65f6\uff1a112ms"}),"\n",(0,s.jsx)(t.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a44.3MB"}),"\n",(0,s.jsx)(t.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,s.jsxs)(t.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dfs\u3002"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"function findTilt(root: TreeNode | null): number {\n  return dfs(root).tilt;\n  function dfs(node: TreeNode | null): {\n    sum: number;\n    tilt: number;\n  } {\n    const ans = { sum: 0, tilt: 0, res: 0 };\n    if (node === null) return ans;\n    const left = dfs(node.left);\n    const right = dfs(node.right);\n    ans.tilt = Math.abs(left.sum - right.sum) + left.tilt + right.tilt;\n    ans.sum = node.val + left.sum + right.sum;\n    return ans;\n  }\n}\n"})})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},25710:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var s=n(30758);const r={},i=s.createContext(r);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);