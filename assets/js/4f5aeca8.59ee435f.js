"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[93800],{44141:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>o});var i=s(86070),t=s(25710);const l={},c="2570.\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",r={id:"leetcode/2501-2600/\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",title:"2570.\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",description:"\u94fe\u63a5\uff1a2570.\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",source:"@site/docs/leetcode/2501-2600/2570.\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5.md",sourceDirName:"leetcode/2501-2600",slug:"/leetcode/2501-2600/\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",permalink:"/docs/leetcode/2501-2600/\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2570,frontMatter:{},sidebar:"journal",previous:{title:"2565.\u6700\u5c11\u5f97\u5206\u5b50\u5e8f\u5217",permalink:"/docs/leetcode/2501-2600/\u6700\u5c11\u5f97\u5206\u5b50\u5e8f\u5217"},next:{title:"2571.\u5c06\u6574\u6570\u51cf\u5c11\u5230\u96f6\u9700\u8981\u7684\u6700\u5c11\u64cd\u4f5c\u6570",permalink:"/docs/leetcode/2501-2600/\u5c06\u6574\u6570\u51cf\u5c11\u5230\u96f6\u9700\u8981\u7684\u6700\u5c11\u64cd\u4f5c\u6570"}},u={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"2570\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5",children:"2570.\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/merge-two-2d-arrays-by-summing-values",children:"2570.\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4-\u6c42\u548c\u6cd5"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aEasy",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u53cc\u6307\u9488",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5408\u5e76\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-19"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a10.4MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n    public:\n        vector<vector<int>> mergeArrays(vector<vector<int>>& nums1, vector<vector<int>>& nums2) {\n            vector<vector<int>> ans;\n            int i1 = 0, i2 = 0;\n            int n1 = nums1.size(), n2 = nums2.size();\n            while (i1 < n1 || i2 < n2) {\n                if (i1 == n1) ans.push_back(nums2[i2++]);\n                else if (i2 == n2) ans.push_back(nums1[i1++]);\n                else {\n                    if (nums1[i1][0] == nums2[i2][0]) {\n                        vector<int> item(2, nums1[i1][0]);\n                        item[1] = nums1[i1++][1] + nums2[i2++][1];\n                        ans.push_back(item);\n                    } else if (nums1[i1][0] < nums2[i2][0]) {\n                        ans.push_back(nums1[i1++]);\n                    } else {\n                        ans.push_back(nums2[i2++]);\n                    }\n                }\n            }\n            return ans;\n        }\n    };\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-19"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a40ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.1MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def mergeArrays(self, nums1: List[List[int]], nums2: List[List[int]]) -> List[List[int]]:\n        ans = []\n        i1, i2, n1, n2 = 0, 0, len(nums1), len(nums2)\n        while i1 < n1 or i2 < n2:\n            if i1 == n1:\n                ans.append(nums2[i2])\n                i2 += 1\n            elif i2 == n2:\n                ans.append(nums1[i1])\n                i1 += 1\n            else:\n                if nums1[i1][0] == nums2[i2][0]:\n                    ans.append([\n                        nums1[i1][0],\n                        nums1[i1][1] + nums2[i2][1]\n                    ])\n                    i1 += 1\n                    i2 += 1\n                elif nums1[i1][0] < nums2[i2][0]:\n                    ans.append(nums1[i1])\n                    i1 += 1\n                else:\n                    ans.append(nums2[i2])\n                    i2 += 1\n        return ans\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-19"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn merge_arrays(nums1: Vec<Vec<i32>>, nums2: Vec<Vec<i32>>) -> Vec<Vec<i32>> {\n        let mut ans = vec![];\n        let (mut i1, mut i2, n1, n2) = (0, 0, nums1.len(), nums2.len());\n        while i1 < n1 || i2 < n2 {\n            if i1 == n1 {\n                ans.push(nums2[i2].clone());\n                i2 += 1\n            } else if i2 == n2 {\n                ans.push(nums1[i1].clone());\n                i1 += 1\n            } else {\n                if nums1[i1][0] == nums2[i2][0] {\n                    let mut item = vec![nums1[i1][0]; 2];\n                    item[1] = nums1[i1][1] + nums2[i2][1];\n                    ans.push(item);\n                    i1 += 1;\n                    i2 += 1;\n                } else if nums1[i1][0] < nums2[i2][0] {\n                    ans.push(nums1[i1].clone());\n                    i1 += 1;\n                } else {\n                    ans.push(nums2[i2].clone());\n                    i2 += 1;\n                }\n            }\n        }\n        ans\n    }\n}\n"})})]})}function m(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},25710:(n,e,s)=>{s.d(e,{R:()=>c,x:()=>r});var i=s(30758);const t={},l=i.createContext(t);function c(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);