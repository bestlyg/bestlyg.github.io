"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[11036],{78660:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var t=i(86070),r=i(31503);const l={},s="1803.\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",o={id:"leetcode/1801-1900/\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",title:"1803.\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",description:"\u94fe\u63a5\uff1a1803.\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",source:"@site/docs/leetcode/1801-1900/1803.\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11.md",sourceDirName:"leetcode/1801-1900",slug:"/leetcode/1801-1900/\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",permalink:"/docs/leetcode/1801-1900/\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1803,frontMatter:{},sidebar:"journal",previous:{title:"1802.\u6709\u754c\u6570\u7ec4\u4e2d\u6307\u5b9a\u4e0b\u6807\u5904\u7684\u6700\u5927\u503c",permalink:"/docs/leetcode/1801-1900/\u6709\u754c\u6570\u7ec4\u4e2d\u6307\u5b9a\u4e0b\u6807\u5904\u7684\u6700\u5927\u503c"},next:{title:"1805.\u5b57\u7b26\u4e32\u4e2d\u4e0d\u540c\u6574\u6570\u7684\u6570\u76ee",permalink:"/docs/leetcode/1801-1900/\u5b57\u7b26\u4e32\u4e2d\u4e0d\u540c\u6574\u6570\u7684\u6570\u76ee"}},c={},d=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"1803\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11",children:"1803.\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/count-pairs-with-xor-in-a-range",children:"1803.\u7edf\u8ba1\u5f02\u6216\u503c\u5728\u8303\u56f4\u5185\u7684\u6570\u5bf9\u6709\u591a\u5c11"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u4f4d\u8fd0\u7b97\u3001\u5b57\u5178\u6811\u3001\u6570\u7ec4",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff08\u4e0b\u6807 \u4ece 0 \u5f00\u59cb \u8ba1\u6570\uff09\u4ee5\u53ca\u4e24\u4e2a\u6574\u6570\uff1alow \u548c high \uff0c\u8bf7\u8fd4\u56de \u6f02\u4eae\u6570\u5bf9 \u7684\u6570\u76ee\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a7316ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a47.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u66b4\u529b\u6a21\u62df\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"function countPairs(nums: number[], low: number, high: number): number {\n  const n = nums.length;\n  let ans = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      const v = nums[i] ^ nums[j];\n      if (v >= low && v <= high) ans++;\n    }\n  }\n  return ans;\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a432ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a132.2MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5b57\u5178\u6811\uff0c\u6309\u4f4d\u904d\u5386\uff0c\u5bf9\u4e8e\u5f53\u524d\u70b9\u627e\u548c target \u524d\u7f00\u4e00\u6837\uff0c\u5f53\u524d\u4f4d\u5c0f\u7684\u6570\u91cf\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:'#include <vector>\n#include <numeric>\n#include <iostream>\n#include <unordered_map>\n// bestlyg\n#define X first\n#define Y second\n#define lb(x) ((x) & (-x))\n#define mem(a,b) memset(a,b,sizeof(a))\n#define debug freopen("input","r",stdin)\n#define PII pair<int,int>\n#ifdef DEBUG\n#define log(frm, args...) {    printf(frm, ##args);}\n#else\n#define log(frm, args...)\n#endif\ntypedef long long ll;\nusing namespace std;\nclass UnionFind {\npublic:\n    int n;\n    vector<int> data, cnt;\n    UnionFind(int n): n(n), data(vector<int>(n, 0)), cnt(vector<int>(n, 1)) {\n        iota(data.begin(), data.end(), 0);\n    }\n    int size(int v) { return cnt[find(v)]; }\n    int find(int v) {\n        if (data[v] == v) return v;\n        return data[v] = find(data[v]);\n    }\n    void uni(int v1, int v2) {\n        int p1 = find(v1), p2 = find(v2);\n        if (p1 != p2) {\n            cnt[p1] += cnt[p2];\n            data[p2] = p1;\n        }\n    }\n    bool same(int v1, int v2) { return find(v1) == find(v2); }\n};\nint pos2Idx(int x, int y, int size) { return x * size + y; }\nvoid idx2Pos(int idx, int size, int &x, int &y) { x = idx / size; y = idx % size; }\nvector<vector<int>> dirs = { {0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n// START\nconst int MAX = 14;\nstruct TrieNode {\n    int sum, val;\n    TrieNode *children[2];\n    TrieNode(int val): sum(0), val(val) { children[0] = children[1] = nullptr; }\n    ~TrieNode() {\n        delete children[0];\n        delete children[1];\n    }\n};\nstruct Trie {\n    TrieNode *root;\n    Trie(): root(new TrieNode(0)) {}\n    void add(int num) {\n        TrieNode *p = root;\n        for (int i = MAX; i >= 0; i--) {\n            int tag = (num >> i) & 1;\n            TrieNode *next = p->children[tag];\n            if (next == nullptr) next = p->children[tag] = new TrieNode(tag);\n            p = next;\n            p->sum += 1;\n        }\n    }\n    int get(int num, int x) {\n        TrieNode *p = root;\n        int sum = 0;\n        for (int i = MAX; i >= 0; i--) {\n            int tag = (num >> i) & 1;\n            if ((x >> i) & 1) {\n                if (p->children[tag] != nullptr) sum += p->children[tag]->sum;\n                if (p->children[tag ^ 1] == nullptr) return sum;\n                p = p->children[tag ^ 1];\n            } else {\n                if (p->children[tag] == nullptr) return sum;\n                p = p->children[tag];\n            }\n        }\n        sum += p->sum;\n        return sum;\n    }\n    ~Trie() {\n        log("~trie\n");\n        delete root;\n    }\n};\nclass Solution {\npublic:\n    int comp(vector<int> &nums, int num) {\n        Trie trie;\n        int ans = 0;\n        for (int i = 1; i < nums.size(); i++) {\n            trie.add(nums[i - 1]);\n            ans += trie.get(nums[i], num);\n        }\n        return ans;\n    }\n    int countPairs(vector<int>& nums, int low, int high) {\n        return comp(nums, high) - comp(nums, low - 1);\n    }\n};\n// END\n#ifdef LOCAL\nint main() {\n    Solution s;\n    // vector<int> nums = {1,4,2,7};\n    // int low = 2;\n    // int high = 6;\n    vector<int> nums = {9,8,4,2,1};\n    int low = 5;\n    int high = 14;\n    cout << s.countPairs(nums, low, high) << endl;\n    return 0;\n}\n#endif\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a132ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a4.6MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"pub use std::{cell::RefCell, rc::Rc};\nconst MAX: i32 = 14;\nstruct TrieNode {\n    sum: i32,\n    children: [Option<Rc<RefCell<TrieNode>>>; 2],\n}\nimpl TrieNode {\n    fn new() -> TrieNode {\n        TrieNode {\n            sum: 0,\n            children: [None, None],\n        }\n    }\n}\nstruct Trie {\n    root: Option<Rc<RefCell<TrieNode>>>,\n}\nimpl Trie {\n    fn new() -> Trie {\n        Trie {\n            root: Some(Rc::new(RefCell::new(TrieNode::new()))),\n        }\n    }\n    fn add(&self, num: i32) {\n        let mut p = self.root.clone().unwrap();\n        let mut i = MAX;\n        while i >= 0 {\n            let tag = ((num >> i) & 1) as usize;\n            let mut next: Option<Rc<RefCell<TrieNode>>> = None;\n            if p.as_ref().borrow().children[tag].is_none() {\n                let node = Rc::new(RefCell::new(TrieNode::new()));\n                p.borrow_mut().children[tag] = Some(node.clone());\n                next = Some(node.clone());\n            } else {\n                let node = p.as_ref().borrow().children[tag].clone();\n                next = node\n            }\n            p = next.unwrap();\n            p.borrow_mut().sum += 1;\n            i -= 1;\n        }\n    }\n    fn get(&self, num: i32, x: i32) -> i32 {\n        let mut p = self.root.clone().unwrap();\n        let mut sum = 0;\n        let mut i = MAX;\n        while i >= 0 {\n            let tag = ((num >> i) & 1) as usize;\n            if ((x >> i) & 1) == 1 {\n                if p.as_ref().borrow().children[tag].is_some() {\n                    let child = p.as_ref().borrow().children[tag].clone();\n                    sum += child.unwrap().as_ref().borrow().sum;\n                }\n                if p.as_ref().borrow().children[tag ^ 1].is_none() {\n                    return sum;\n                }\n                let next = p.as_ref().borrow().children[tag ^ 1].clone();\n                p = next.unwrap();\n            } else {\n                if p.as_ref().borrow().children[tag].is_none() {\n                    return sum;\n                }\n                let next = p.as_ref().borrow().children[tag].clone();\n                p = next.unwrap();\n            }\n            i -= 1;\n        }\n        sum += p.as_ref().borrow().sum;\n        sum\n    }\n}\nimpl Solution {\n    fn comp(nums: &Vec<i32>, num: i32) -> i32 {\n        let trie = Trie::new();\n        let mut ans = 0;\n        for i in 1..nums.len() {\n            trie.add(nums[i - 1]);\n            ans += trie.get(nums[i], num);\n        }\n        ans\n    }\n    pub fn count_pairs(nums: Vec<i32>, low: i32, high: i32) -> i32 {;\n        Solution::comp(&nums, high) - Solution::comp(&nums, low - 1)\n    }\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a436ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u66b4\u529b\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn count_pairs(nums: Vec<i32>, low: i32, high: i32) -> i32 {\n        let mut ans = 0;\n        for i in 0..nums.len() {\n            for j in i + 1..nums.len() {\n                let val = nums[i] ^ nums[j];\n                if val >= low && val <= high {\n                    ans += 1;\n                }\n            }\n        }\n        ans\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>o});var t=i(30758);const r={},l=t.createContext(r);function s(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);