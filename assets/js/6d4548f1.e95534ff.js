"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[60787],{61862:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>a,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var r=i(86070),s=i(25710);const l={},t="1186.\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",d={id:"leetcode/1101-1200/\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",title:"1186.\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",description:"\u94fe\u63a5\uff1a1186.\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",source:"@site/docs/leetcode/1101-1200/1186.\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c.md",sourceDirName:"leetcode/1101-1200",slug:"/leetcode/1101-1200/\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",permalink:"/web/site/docs/leetcode/1101-1200/\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1186,frontMatter:{},sidebar:"journal",previous:{title:"1185.\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929",permalink:"/web/site/docs/leetcode/1101-1200/\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929"},next:{title:"1187.\u4f7f\u6570\u7ec4\u4e25\u683c\u9012\u589e",permalink:"/web/site/docs/leetcode/1101-1200/\u4f7f\u6570\u7ec4\u4e25\u683c\u9012\u589e"}},c={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2},{value:"\u9898\u89e3 4 - python",id:"\u9898\u89e3-4---python",level:2}];function p(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"1186\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c",children:"1186.\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c"}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/maximum-subarray-sum-with-one-deletion/submissions/",children:"1186.\u5220\u9664\u4e00\u6b21\u5f97\u5230\u5b50\u6570\u7ec4\u6700\u5927\u548c"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u7b80\u5355",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5b83\u7684\u67d0\u4e2a\xa0\u975e\u7a7a \u5b50\u6570\u7ec4\uff08\u8fde\u7eed\u5143\u7d20\uff09\u5728\u6267\u884c\u4e00\u6b21\u53ef\u9009\u7684\u5220\u9664\u64cd\u4f5c\u540e\uff0c\u6240\u80fd\u5f97\u5230\u7684\u6700\u5927\u5143\u7d20\u603b\u548c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4f60\u53ef\u4ee5\u4ece\u539f\u6570\u7ec4\u4e2d\u9009\u51fa\u4e00\u4e2a\u5b50\u6570\u7ec4\uff0c\u5e76\u53ef\u4ee5\u51b3\u5b9a\u8981\u4e0d\u8981\u4ece\u4e2d\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff08\u53ea\u80fd\u5220\u4e00\u6b21\u54e6\uff09\uff0c\uff08\u5220\u9664\u540e\uff09\u5b50\u6570\u7ec4\u4e2d\u81f3\u5c11\u5e94\u5f53\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u8be5\u5b50\u6570\u7ec4\uff08\u5269\u4e0b\uff09\u7684\u5143\u7d20\u603b\u548c\u662f\u6240\u6709\u5b50\u6570\u7ec4\u4e4b\u4e2d\u6700\u5927\u7684\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-27"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a32ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a22.6MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dp[i]\u8868\u793a\u4ee5arr[i]\u4e3a\u7ed3\u5c3e\u7684\u52200\u4e2a\u548c1\u4e2a\u65f6\u7684\u6700\u5927\u503c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"#define MIN -0x3f3f3f3f\nclass Solution {\npublic:\n    int maximumSum(vector<int>& arr) {\n        int n = arr.size(), dp0 = MIN, dp1 = MIN, res = MIN;\n        for (int i = 0; i < n; i++) {\n            dp1 = max(dp0, dp1 + arr[i]);\n            dp0 = max(dp0, 0) + arr[i];\n            res = max(res, max(dp0, dp1));\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-27"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a104ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a24.2MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def maximumSum(self, arr: List[int]) -> int:\n        dp0 = dp1 = res = -inf\n        for num in arr:\n            dp1 = max(dp0, dp1 + num)\n            dp0 = max(dp0, 0) + num\n            res = max(res, max(dp0, dp1))\n        return res\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-27"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a3MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn maximum_sum(arr: Vec<i32>) -> i32 {\n        use std::cmp::max;\n        let (mut dp0, mut dp1, mut res) = (-0x3f3f3f3f, -0x3f3f3f3f, -0x3f3f3f3f);\n        for num in arr {\n            dp1 = max(dp0, dp1 + num);\n            dp0 = max(dp0, 0) + num;\n            res = max(res, max(dp0, dp1));\n        }\n        res\n    }\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-4---python",children:"\u9898\u89e3 4 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-07-21"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a110ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a40.88MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dp[i][j]\u8868\u793a\u4ee5i\u4e3a\u7ed3\u5c3e\u7684\u6570\u7ec4\uff0c\u5f53\u524d\u5df2\u7ecf\u5220\u9664\u4e86j\u4e2a\u5143\u7d20\u65f6\u7684\u6700\u5927\u548c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def maximumSum(self, arr: List[int]) -> int:\n        n = len(arr)\n        dp = [[0] * 2 for _ in range(n)]\n        dp[0][0] = arr[0]\n        dp[0][1] = 0\n        for i in range(1, n):\n            dp[i][0] = max(dp[i - 1][0], 0) + arr[i]\n            dp[i][1] = max(dp[i - 1][1] + arr[i], dp[i - 1][0])\n        return max([v for item in dp[1:] for v in item], default = arr[0])\n"})})]})}function a(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>d});var r=i(30758);const s={},l=r.createContext(s);function t(n){const e=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),r.createElement(l.Provider,{value:e},n.children)}}}]);