"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[84062],{19034:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var r=i(86070),s=i(31503);const t={},l="2761.\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",c={id:"leetcode/2701-2800/\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",title:"2761.\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",description:"\u94fe\u63a5\uff1a2761.\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",source:"@site/docs/leetcode/2701-2800/2761.\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9.md",sourceDirName:"leetcode/2701-2800",slug:"/leetcode/2701-2800/\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",permalink:"/docs/leetcode/2701-2800/\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2761,frontMatter:{},sidebar:"journal",previous:{title:"2760.\u6700\u957f\u5947\u5076\u5b50\u6570\u7ec4",permalink:"/docs/leetcode/2701-2800/\u6700\u957f\u5947\u5076\u5b50\u6570\u7ec4"},next:{title:"2762.\u4e0d\u95f4\u65ad\u5b50\u6570\u7ec4",permalink:"/docs/leetcode/2701-2800/\u4e0d\u95f4\u65ad\u5b50\u6570\u7ec4"}},p={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"2761\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9",children:"2761.\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/prime-pairs-with-target-sum",children:"2761.\u548c\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u8d28\u6570\u5bf9"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6570\u5b66\u3001\u679a\u4e3e\u3001\u6570\u8bba",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \u3002\u8bf7\u4f60\u4ee5\u4e8c\u7ef4\u6709\u5e8f\u5217\u8868\u7684\u5f62\u5f0f\u8fd4\u56de\u7b26\u5408\u9898\u76ee\u8981\u6c42\u7684\u6240\u6709 [xi, yi] \uff0c\u5217\u8868\u9700\u8981\u6309 xi \u7684 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5e8f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u8981\u6c42\u7684\u8d28\u6570\u5bf9\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a1256ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a110.4MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u7ebf\u6027\u7b5b\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"unordered_set<int> s;\nvector<int> get_primes(int n) {\n    vector<int> primes(n, 0);\n    for (int i = 2; i < n; i++) {\n        if (primes[i] == 0) {\n            primes[++primes[0]] = i;\n            s.insert(i);\n        }\n        for (int j = 1; j <= primes[0] && i * primes[j] < n; j++) {\n            primes[i * primes[j]] = 1;\n            if (i % primes[j] == 0) break;\n        }\n    }\n    return primes;\n}\nvector<int> primes = get_primes(10000000);\nclass Solution {\npublic:\n    vector<vector<int>> findPrimePairs(int n) {\n        vector<vector<int>> res;\n        if (s.count(n - 2)) res.push_back({2, n - 2});\n        for (int i = 3; i <= n / 2; i += 2) {\n            if (!s.count(i) || !s.count(n - i)) continue;\n            res.push_back({i,n-i});\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a364ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a32.4MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u57c3\u6c0f\u7b5b\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"vector<bool> get_primes2(int n) {\n    vector<bool> primes(n + 3, true);\n    primes[0] = primes[1] = false;\n    for (int i = 2; i < n; i++) {\n        if (!primes[i]) continue;\n        for (int j = 2; i * j < n; j++) {\n            primes[i * j] = false;\n        }\n    }\n    return primes;\n}\nclass Solution {\npublic:\n    vector<vector<int>> findPrimePairs(int n) {\n        auto primes = get_primes2(n);\n        vector<vector<int>> res;\n        if (n >= 2 && primes[n - 2]) res.push_back({ 2, n - 2 });\n        for (int i = 3; i <= n / 2; i += 2) {\n            if (primes[i] && primes[n - i]) {\n                res.push_back({ i, n - i });\n            }\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a744ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a27.6MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"def get_primes2(n: int) -> List[bool]:\n        n += 3\n        primes = [True for _ in range(n)]\n        primes[0] = primes[1] = False\n        for i in range(2, n):\n            if primes[i]:\n                j = 2\n                while i * j < n:\n                    primes[i*j] = False\n                    j += 1\n        return primes\n    \n    primes = get_primes2(1000000)\n    \n    class Solution:\n        def findPrimePairs(self, n: int) -> List[List[int]]:\n            res = []\n            if n >= 2 and primes[n-2]:\n                res.append([2, n-2])\n            for i in range(3, n//2 + 1, 2):\n                if primes[i] and primes[n-i]:\n                    res.append([i, n-i])\n            return res\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a224ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a3.6MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"pub fn get_primes2(mut n: usize) -> Vec<bool> {\n    n += 3;\n    let mut primes = vec![true; n];\n    primes[0] = false;\n    primes[1] = false;\n    for i in 2..n {\n        if primes[i] {\n            let mut j = 2;\n            while i * j < n {\n                primes[i * j] = false;\n                j += 1;\n            }\n        }\n    }\n    primes\n}\nimpl Solution {\n    pub fn find_prime_pairs(n: i32) -> Vec<Vec<i32>> {\n        let n = n as usize;\n        let primes = get_primes2(n);\n        let mut res = vec![];\n        if n >= 2 && primes[n - 2] {\n            res.push(vec![2, (n as i32) - 2]);\n        }\n        let mut i = 3;\n        while i <= n / 2 {\n            if primes[i] && primes[n - i] {\n                res.push(vec![i as i32, (n - i) as i32]);\n            }\n            i += 2;\n        }\n        res\n    }\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>c});var r=i(30758);const s={},t=r.createContext(s);function l(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);