"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[94599],{79050:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=r(86070),t=r(25710);const s={},o="2850.\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",l={id:"leetcode/2801-2900/\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",title:"2850.\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",description:"\u94fe\u63a5\uff1a2850.\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",source:"@site/docs/leetcode/2801-2900/2850.\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570.md",sourceDirName:"leetcode/2801-2900",slug:"/leetcode/2801-2900/\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",permalink:"/docs/leetcode/2801-2900/\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2850,frontMatter:{},sidebar:"journal",previous:{title:"2844.\u751f\u6210\u7279\u6b8a\u6570\u5b57\u7684\u6700\u5c11\u64cd\u4f5c",permalink:"/docs/leetcode/2801-2900/\u751f\u6210\u7279\u6b8a\u6570\u5b57\u7684\u6700\u5c11\u64cd\u4f5c"},next:{title:"2859.\u8ba1\u7b97K\u7f6e\u4f4d\u4e0b\u6807\u5bf9\u5e94\u5143\u7d20\u7684\u548c",permalink:"/docs/leetcode/2801-2900/\u8ba1\u7b97K\u7f6e\u4f4d\u4e0b\u6807\u5bf9\u5e94\u5143\u7d20\u7684\u548c"}},d={},c=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"2850\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",children:"2850.\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(n.a,{href:"https://leetcode.cn/problems/minimum-moves-to-spread-stones-over-grid",children:"2850.\u5c06\u77f3\u5934\u5206\u6563\u5230\u7f51\u683c\u56fe\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570"}),(0,i.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,i.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u77e9\u9635",(0,i.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8bf7\u4f60\u8fd4\u56de\u6bcf\u4e2a\u683c\u5b50\u6070\u597d\u6709\u4e00\u4e2a\u77f3\u5934\u7684 \u6700\u5c11\u79fb\u52a8\u6b21\u6570 \u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-07-21"}),"\n",(0,i.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a56ms"}),"\n",(0,i.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.36MB"}),"\n",(0,i.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u66b4\u529b\u679a\u4e3e\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def minimumMoves(self, grid: List[List[int]]) -> int:\n        arr1 = [(i, j, grid[i][j]) for i in range(3) for j in range(3) if grid[i][j] > 1]\n        arr0 = [(i, j) for i in range(3) for j in range(3) if grid[i][j] == 0]\n        self.res = inf\n        def dfs(i0: int, cur: int = 0) -> int:\n            if i0 == len(arr0): self.res = min(self.res, cur)\n            else:\n                for i1 in range(len(arr1)):\n                    old_item = arr1[i1]\n                    if old_item[2] > 1:\n                        arr1[i1] = (old_item[0], old_item[1], old_item[2] - 1)\n                        dfs(i0 + 1, cur + abs(old_item[0] - arr0[i0][0]) + abs(old_item[1] - arr0[i0][1]))\n                        arr1[i1] = old_item\n        dfs(0)\n        return self.res\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},25710:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var i=r(30758);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);