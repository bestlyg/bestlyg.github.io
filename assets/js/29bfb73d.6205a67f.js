"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[30104],{39220:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=i(86070),t=i(25710);const r={},l="1483.\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148",c={id:"leetcode/1401-1500/\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148",title:"1483.\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148",description:"\u94fe\u63a5\uff1a1483.\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148",source:"@site/docs/leetcode/1401-1500/1483.\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148.md",sourceDirName:"leetcode/1401-1500",slug:"/leetcode/1401-1500/\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148",permalink:"/web/site/docs/leetcode/1401-1500/\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1483,frontMatter:{},sidebar:"journal",previous:{title:"1482.\u5236\u4f5cm\u675f\u82b1\u6240\u9700\u7684\u6700\u5c11\u5929\u6570",permalink:"/web/site/docs/leetcode/1401-1500/\u5236\u4f5cm\u675f\u82b1\u6240\u9700\u7684\u6700\u5c11\u5929\u6570"},next:{title:"1486.\u6570\u7ec4\u5f02\u6216\u64cd\u4f5c",permalink:"/web/site/docs/leetcode/1401-1500/\u6570\u7ec4\u5f02\u6216\u64cd\u4f5c"}},o={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2},{value:"\u9898\u89e3 4 - cpp",id:"\u9898\u89e3-4---cpp",level:2},{value:"\u9898\u89e3 5 - python",id:"\u9898\u89e3-5---python",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"1483\u6811\u8282\u70b9\u7684\u7b2ck\u4e2a\u7956\u5148",children:"1483.\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/kth-ancestor-of-a-tree-node",children:"1483.\u6811\u8282\u70b9\u7684\u7b2cK\u4e2a\u7956\u5148"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u56f0\u96be",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u8bbe\u8ba1\u3001\u4e8c\u5206\u67e5\u627e\u3001\u52a8\u6001\u89c4\u5212",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6709 n \u4e2a\u8282\u70b9\uff0c\u6309\u4ece 0 \u5230 n-1 \u7f16\u53f7\u3002\u6811\u4ee5\u7236\u8282\u70b9\u6570\u7ec4\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u5176\u4e2d parent[i] \u662f\u8282\u70b9 i \u7684\u7236\u8282\u70b9\u3002\u6811\u7684\u6839\u8282\u70b9\u662f\u7f16\u53f7\u4e3a 0 \u7684\u8282\u70b9\u3002\u6811\u8282\u70b9\u7684\u7b2c k \u4e2a\u7956\u5148\u8282\u70b9\u662f\u4ece\u8be5\u8282\u70b9\u5230\u6839\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u7b2c k \u4e2a\u8282\u70b9\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-12"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a520ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a132.2MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u500d\u589e\u6cd5\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class TreeAncestor {\npublic:\n    vector<vector<int>> list;\n\n    TreeAncestor(int n, vector<int>& parent): list(vector<vector<int>>(n)) {\n        for (int i = 1; i < parent.size(); i++) {\n            list[i].push_back(parent[i]);\n            for (int j = 1, res = 1; res != -1; j++) {\n                res = getKthAncestor(i, pow(2, j));\n                if (res != -1) list[i].push_back(res);\n            }\n        }\n    }\n\n    int getKthAncestor(int node, int k) {\n        if (k == 0) return node;\n        int l = -1, r = list[node].size() - 1;\n        while (l < r) {\n            int m = (l + r + 1) / 2;\n            if (k >= pow(2, m)) l = m;\n            else r = m - 1;\n        }\n        if (l == -1) return l;\n        return getKthAncestor(list[node][l], k - pow(2, l));\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-12"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a7080ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a48.2MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class TreeAncestor:\n\n    def __init__(self, n: int, parent: List[int]):\n        self.list = [[] for _ in range(n)]\n        for i in range(1, len(parent)):\n            self.list[i].append(parent[i])\n            j = res = 1\n            while res != -1:\n                res = self.getKthAncestor(i, pow(2, j))\n                if res != -1:\n                    self.list[i].append(res)\n                j += 1\n\n    def getKthAncestor(self, node: int, k: int) -> int:\n        if k == 0:\n            return node\n        l = -1\n        r = len(self.list[node]) - 1\n        while l < r:\n            m = (l+r+1)//2\n            if k >= pow(2, m):\n                l = m\n            else:\n                r = m-1\n        if l == -1:\n            return l\n        return self.getKthAncestor(self.list[node][l], k-pow(2, l))\n\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-12"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a204ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a34.9MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"struct TreeAncestor {\n    list: Vec<Vec<usize>>,\n}\nimpl TreeAncestor {\n    fn new(n: i32, parent: Vec<i32>) -> Self {\n        let mut list = vec![vec![]; n as usize];\n        for i in 1..parent.len() {\n            list[i].push(parent[i] as usize);\n            let mut res = 1;\n            for j in 1.. {\n                res = TreeAncestor::_get_kth_ancestor(&list, i as i32, 2i32.pow(j as u32));\n                if res != -1 {\n                    list[i].push(res as usize);\n                } else {\n                    break;\n                }\n            }\n        }\n        Self { list }\n    }\n    fn _get_kth_ancestor(list: &Vec<Vec<usize>>, node: i32, k: i32) -> i32 {\n        if k == 0 {\n            node\n        } else {\n            let mut l = -1 as i32;\n            let mut r = (list[node as usize].len() - 1) as i32;\n            while l < r {\n                let m = (l + r + 1) / 2;\n                if k >= 2i32.pow(m as u32) {\n                    l = m;\n                } else {\n                    r = m - 1;\n                }\n            }\n            if l == -1 {\n                l\n            } else {\n                TreeAncestor::_get_kth_ancestor(list, list[node as usize][l as usize] as i32, k - (2i32.pow(l as u32)))\n            }\n        }\n    }\n    fn get_kth_ancestor(&self, node: i32, k: i32) -> i32 {\n        TreeAncestor::_get_kth_ancestor(&self.list, node, k)\n    }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-4---cpp",children:"\u9898\u89e3 4 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-12"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a392ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a132.1MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5f53\u524d\u8282\u70b9\u7684\u7b2cn\u9879\u7b49\u4e8e\u7b2cn-1\u4e2a\u7236\u8282\u70b9\u7684\u7b2cn-1\u9879\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class TreeAncestor {\npublic:\n    vector<vector<int>> list;\n\n    TreeAncestor(int n, vector<int>& parent): list(vector<vector<int>>(n)) {\n        for (int i = 1; i < parent.size(); i++) {\n            list[i].push_back(parent[i]);\n            for (int j = 1; ; j++) {\n                if (list[list[i].back()].size() > j - 1) list[i].push_back(list[list[i].back()][j - 1]);\n                else break;\n            }\n        }\n    }\n\n    int getKthAncestor(int node, int k) {\n        if (k == 0) return node;\n        int l = -1, r = list[node].size() - 1;\n        while (l < r) {\n            int m = (l + r + 1) / 2;\n            if (k >= pow(2, m)) l = m;\n            else r = m - 1;\n        }\n        if (l == -1) return l;\n        return getKthAncestor(list[node][l], k - pow(2, l));\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-5---python",children:"\u9898\u89e3 5 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-04-06"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a901ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a55.49MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u500d\u589e\u6cd5\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class TreeAncestor:\n    def __init__(self, n: int, parents: List[int]):\n        self.parents = [[] for _ in range(n + 1)]\n        children = [[] for _ in range(n + 1)]\n        for i in range(n):\n            self.parents[i].append(parents[i])\n            children[parents[i]].append(i)\n        q = deque([0])\n        while q:\n            node = q.popleft()\n            for child in children[node]:\n                q.append(child)\n            arr = self.parents[node]\n            i = 1\n            while node and len(self.parents[arr[i - 1]]) > i - 1:\n                arr.append(self.parents[arr[i - 1]][i - 1])\n                i += 1\n\n    def getKthAncestor(self, node: int, k: int) -> int:\n        idx = 0\n        while pow(2, idx + 1) <= k: idx += 1\n        if len(self.parents[node]) <= idx: return -1\n        if pow(2, idx) == k: return self.parents[node][idx]\n        return self.getKthAncestor(self.parents[node][idx], k - pow(2, idx))\n"})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>c});var s=i(30758);const t={},r=s.createContext(t);function l(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);