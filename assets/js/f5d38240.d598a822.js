"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[73021],{25176:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var i=s(86070),t=s(25710);const r={},l="2042.\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",c={id:"leetcode/2001-2100/\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",title:"2042.\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",description:"\u94fe\u63a5\uff1a2042.\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",source:"@site/docs/leetcode/2001-2100/2042.\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e.md",sourceDirName:"leetcode/2001-2100",slug:"/leetcode/2001-2100/\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",permalink:"/docs/leetcode/2001-2100/\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2042,frontMatter:{},sidebar:"journal",previous:{title:"2039.\u7f51\u7edc\u7a7a\u95f2\u7684\u65f6\u523b",permalink:"/docs/leetcode/2001-2100/\u7f51\u7edc\u7a7a\u95f2\u7684\u65f6\u523b"},next:{title:"2043.\u7b80\u6613\u94f6\u884c\u7cfb\u7edf",permalink:"/docs/leetcode/2001-2100/\u7b80\u6613\u94f6\u884c\u7cfb\u7edf"}},o={},u=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - rust",id:"\u9898\u89e3-2---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"2042\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e",children:"2042.\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/check-if-numbers-are-ascending-in-a-sentence",children:"2042.\u68c0\u67e5\u53e5\u5b50\u4e2d\u7684\u6570\u5b57\u662f\u5426\u9012\u589e"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aEasy",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u8868\u793a\u53e5\u5b50\u7684\u5b57\u7b26\u4e32 s \uff0c\u4f60\u9700\u8981\u68c0\u67e5 s \u4e2d\u7684 \u5168\u90e8 \u6570\u5b57\u662f\u5426\u4ece\u5de6\u5230\u53f3\u4e25\u683c\u9012\u589e\uff08\u5373\uff0c\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u6570\u5b57\uff0cs \u4e2d\u7684 \u6bcf\u4e2a \u6570\u5b57\u90fd\u4e25\u683c\u5c0f\u4e8e\u5b83 \u53f3\u4fa7 \u7684\u6570\u5b57\uff09\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-03"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.1MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool areNumbersAscending(string s) {\n        int prev = 0;\n        for (int i = 0; i < s.size(); i++) {\n            if (!isdigit(s[i])) continue;\n            int num = 0;\n            while (i < s.size() && isdigit(s[i])) num = num * 10 + s[i++] - '0';\n            if (prev >= num) return false;\n            prev = num;\n        }\n        return true;\n    }\n};\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-2---rust",children:"\u9898\u89e3 2 - rust"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-03"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn are_numbers_ascending(s: String) -> bool {\n        let s: Vec<char> = s.chars().collect();\n        let mut i = 0;\n        let mut prev = 0;\n        while i < s.len() {\n            if s[i].is_digit(10) {\n                let mut num = 0;\n                while i < s.len() && s[i].is_digit(10) {\n                    num = num * 10 + (s[i] as i32 - '0' as i32);\n                    i += 1;\n                }\n                if prev >= num {\n                    return false;\n                }\n                prev = num\n            }\n            i += 1;\n        }\n        true\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},25710:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>c});var i=s(30758);const t={},r=i.createContext(t);function l(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);