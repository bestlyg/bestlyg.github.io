"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[49817],{19729:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var s=t(86070),i=t(31503);const l={},r="2807.\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",o={id:"leetcode/2801-2900/\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",title:"2807.\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",description:"\u94fe\u63a5\uff1a2807.\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",source:"@site/docs/leetcode/2801-2900/2807.\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570.md",sourceDirName:"leetcode/2801-2900",slug:"/leetcode/2801-2900/\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",permalink:"/docs/leetcode/2801-2900/\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2807,frontMatter:{},sidebar:"journal",previous:{title:"2806.\u53d6\u6574\u8d2d\u4e70\u540e\u7684\u8d26\u6237\u4f59\u989d",permalink:"/docs/leetcode/2801-2900/\u53d6\u6574\u8d2d\u4e70\u540e\u7684\u8d26\u6237\u4f59\u989d"},next:{title:"2808.\u4f7f\u5faa\u73af\u6570\u7ec4\u6240\u6709\u5143\u7d20\u76f8\u7b49\u7684\u6700\u5c11\u79d2\u6570",permalink:"/docs/leetcode/2801-2900/\u4f7f\u5faa\u73af\u6570\u7ec4\u6240\u6709\u5143\u7d20\u76f8\u7b49\u7684\u6700\u5c11\u79d2\u6570"}},d={},c=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2},{value:"\u9898\u89e3 2 - rust",id:"\u9898\u89e3-2---rust",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"2807\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570",children:"2807.\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(n.a,{href:"https://leetcode.cn/problems/insert-greatest-common-divisors-in-linked-list",children:"2807.\u5728\u94fe\u8868\u4e2d\u63d2\u5165\u6700\u5927\u516c\u7ea6\u6570"}),(0,s.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u94fe\u8868\u3001\u6570\u5b66\u3001\u6570\u8bba",(0,s.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8bf7\u4f60\u8fd4\u56de\u63d2\u5165\u4e4b\u540e\u7684\u94fe\u8868\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-01-06"}),"\n",(0,s.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a72ms"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a19.92MB"}),"\n",(0,s.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def gcd(a: int, b: int) -> int:\n        return gcd(b, a % b) if b != 0 else a\n    class Solution:\n        def insertGreatestCommonDivisors(self, head: Optional[ListNode]) -> Optional[ListNode]:\n            p = head\n            while p.next:\n                p.next = ListNode(gcd(p.val, p.next.val), p.next)\n                p = p.next.next\n            return head\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3-2---rust",children:"\u9898\u89e3 2 - rust"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-01-06"}),"\n",(0,s.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.83MB"}),"\n",(0,s.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"fn gcd(a: i32, b: i32) -> i32 {\n    if a < b {\n        gcd(b, a)\n    } else if b == 0 {\n        a\n    } else {\n        gcd(b, a % b)\n    }\n}\nimpl Solution {\n    pub fn insert_greatest_common_divisors(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {\n        let mut head = head.unwrap();\n        let mut p = &mut head;\n        while let Some(mut next) = p.next.take() {\n            let mut new_next = Box::new(ListNode::new(gcd(p.val, next.val)));\n            new_next.next = Some(next);\n            p.next = Some(new_next);\n            p = p.next.as_mut().unwrap().next.as_mut().unwrap();\n        }\n        Some(head)\n    }\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},31503:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(30758);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);