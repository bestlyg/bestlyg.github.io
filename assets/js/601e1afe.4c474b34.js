"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[7866],{31872:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>t,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var s=i(86070),r=i(31503);const l={},t="2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",c={id:"leetcode/2601-2700/\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",title:"2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",description:"\u94fe\u63a5\uff1a2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",source:"@site/docs/leetcode/2601-2700/2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570.md",sourceDirName:"leetcode/2601-2700",slug:"/leetcode/2601-2700/\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",permalink:"/docs/leetcode/2601-2700/\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2614,frontMatter:{},sidebar:"journal",previous:{title:"2612.\u6700\u5c11\u7ffb\u8f6c\u64cd\u4f5c\u6570",permalink:"/docs/leetcode/2601-2700/\u6700\u5c11\u7ffb\u8f6c\u64cd\u4f5c\u6570"},next:{title:"2615.\u7b49\u503c\u8ddd\u79bb\u548c",permalink:"/docs/leetcode/2601-2700/\u7b49\u503c\u8ddd\u79bb\u548c"}},u={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"2614\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570",children:"2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/prime-in-diagonal",children:"2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aEasy",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6570\u5b66\u3001\u77e9\u9635\u3001\u6570\u8bba",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 nums \u3002\u8fd4\u56de\u4f4d\u4e8e nums \u81f3\u5c11\u4e00\u6761 \u5bf9\u89d2\u7ebf \u4e0a\u7684\u6700\u5927 \u8d28\u6570 \u3002\u5982\u679c\u4efb\u4e00\u5bf9\u89d2\u7ebf\u4e0a\u5747\u4e0d\u5b58\u5728\u8d28\u6570\uff0c\u8fd4\u56de 0 \u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a268ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a69.8MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u7ebf\u6027\u7b5b\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int diagonalPrime(vector<vector<int>>& nums) {\n        int n = nums.size(), res = 0, MAX = 0;\n        unordered_set<int> s;\n        for (int i = 0; i < n; i++) {\n            s.insert(nums[i][i]);\n            s.insert(nums[i][n - 1 - i]);\n            MAX = max(MAX, nums[i][i]);\n            MAX = max(MAX, nums[i][n - 1 - i]);\n        }\n        MAX++;\n        vector<int> primes(MAX, 0);\n        for (int i = 2; i < MAX; i++) {\n            if (primes[i] == 0) {\n                primes[++primes[0]] = i;\n                if (s.count(i)) res = max(res, i);\n            }\n            for (int j = 1; j <= primes[0] && i * primes[j] < MAX; j++) {\n                primes[i * primes[j]] = 1;\n                if (i % primes[j] == 0) break;\n            }\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a72ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a34.7MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u679a\u4e3e\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool check(int num) {\n        if (num == 1) return false;\n        for (int i = 2; i * i <= num; i++) {\n            if (num % i == 0) return false;\n        }\n        return true;\n    }\n    int diagonalPrime(vector<vector<int>>& nums) {\n        int n = nums.size(), res = 0;\n        for (int i = 0; i < n; i++) {\n            if (check(nums[i][i])) res = max(res, nums[i][i]);\n            if (check(nums[i][n - 1 - i])) res = max(res, nums[i][n - 1 - i]);\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a216ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a26.9MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def check(num: int):\n    if num == 1:\n        return False\n    i = 2\n    while i * i <= num:\n        if num % i == 0:\n            return False\n        i += 1\n    return True\nclass Solution:\n    def diagonalPrime(self, nums: List[List[int]]) -> int:\n        n = len(nums)\n        res = 0\n        for i in range(n):\n            if check(nums[i][i]):\n                res = max(res, nums[i][i])\n            if check(nums[i][n - 1 - i]):\n                res = max(res, nums[i][n - 1 - i])\n        return res\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a16ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a3.6MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn diagonal_prime(nums: Vec<Vec<i32>>) -> i32 {\n        use std::cmp::max;\n        let check = |num: i32| {\n            if num == 1 {\n                false\n            } else {\n                let mut i = 2;\n                while i * i <= num {\n                    if num % i == 0 {\n                        return false;\n                    }\n                    i += 1;\n                }\n                true\n            }\n        };\n        let n = nums.len();\n        let mut res = 0;\n        for i in 0..n {\n            if check(nums[i][i]) {\n                res = max(res, nums[i][i]);\n            }\n            if check(nums[i][n - 1 - i]) {\n                res = max(res, nums[i][n - 1 - i]);\n            }\n        }\n        res\n    }\n}\n"})})]})}function m(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>c});var s=i(30758);const r={},l=s.createContext(r);function t(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);