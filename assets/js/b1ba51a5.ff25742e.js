"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[56831],{28814:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var o=t(86070),i=t(25710);const s={},l="2641.\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II",r={id:"leetcode/2601-2700/\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II",title:"2641.\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II",description:"\u94fe\u63a5\uff1a2641.\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II",source:"@site/docs/leetcode/2601-2700/2641.\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II.md",sourceDirName:"leetcode/2601-2700",slug:"/leetcode/2601-2700/\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II",permalink:"/docs/leetcode/2601-2700/\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2641,frontMatter:{},sidebar:"journal",previous:{title:"2639.\u67e5\u8be2\u7f51\u683c\u56fe\u4e2d\u6bcf\u4e00\u5217\u7684\u5bbd\u5ea6",permalink:"/docs/leetcode/2601-2700/\u67e5\u8be2\u7f51\u683c\u56fe\u4e2d\u6bcf\u4e00\u5217\u7684\u5bbd\u5ea6"},next:{title:"2642.\u8bbe\u8ba1\u53ef\u4ee5\u6c42\u6700\u77ed\u8def\u5f84\u7684\u56fe\u7c7b",permalink:"/docs/leetcode/2601-2700/\u8bbe\u8ba1\u53ef\u4ee5\u6c42\u6700\u77ed\u8def\u5f84\u7684\u56fe\u7c7b"}},c={},d=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"2641\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9ii",children:"2641.\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,o.jsx)(n.a,{href:"https://leetcode.cn/problems/cousins-in-binary-tree-ii",children:"2641.\u4e8c\u53c9\u6811\u7684\u5802\u5144\u5f1f\u8282\u70b9II"}),(0,o.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,o.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u54c8\u5e0c\u8868\u3001\u4e8c\u53c9\u6811",(0,o.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839 root \uff0c\u8bf7\u4f60\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u66ff\u6362\u6210\u8be5\u8282\u70b9\u7684\u6240\u6709 \u5802\u5144\u5f1f\u8282\u70b9\u503c\u7684\u548c \u3002\u5982\u679c\u4e24\u4e2a\u8282\u70b9\u5728\u6811\u4e2d\u6709\u76f8\u540c\u7684\u6df1\u5ea6\u4e14\u5b83\u4eec\u7684\u7236\u8282\u70b9\u4e0d\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u4e92\u4e3a \u5802\u5144\u5f1f \u3002\u8bf7\u4f60\u8fd4\u56de\u4fee\u6539\u503c\u4e4b\u540e\uff0c\u6811\u7684\u6839 root \u3002"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-02-07"}),"\n",(0,o.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a41ms"}),"\n",(0,o.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.5MB"}),"\n",(0,o.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,o.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","bfs\u65f6\u5f53\u8bb0\u5f55\u5b8c\u4e00\u5c42\u7684\u8282\u70b9\u540e\u8fdb\u884c\u904d\u5386\u5904\u7406\u3002"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def replaceValueInTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        root.val = 0\n        map = {}\n        q = deque()\n        q.append(root)\n        size = 1\n        sum = 0\n        while q:\n            node = q.popleft()\n            if node.left:\n                map[node.left] = node\n                q.append(node.left)\n                sum += node.left.val\n            if node.right: \n                map[node.right] = node\n                q.append(node.right)\n                sum += node.right.val\n            size -= 1\n            if size == 0:\n                nums = []\n                for child in q:\n                    csum = 0\n                    if map[child].left: csum += map[child].left.val\n                    if map[child].right: csum += map[child].right.val\n                    nums.append(sum - csum)\n                for i in range(len(q)):\n                    q[i].val = nums[i]\n                sum = 0\n                size = len(q)\n        return root\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},25710:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(30758);const i={},s=o.createContext(i);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);