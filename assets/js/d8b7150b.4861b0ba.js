"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[92214],{25586:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"leetcode/1201-1300/\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668","title":"1267.\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668","description":"\u94fe\u63a5\uff1a1267.\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668","source":"@site/docs/leetcode/1201-1300/1267.\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668.md","sourceDirName":"leetcode/1201-1300","slug":"/leetcode/1201-1300/\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668","permalink":"/docs/leetcode/1201-1300/\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1267,"frontMatter":{},"sidebar":"journal","previous":{"title":"1263.\u63a8\u7bb1\u5b50","permalink":"/docs/leetcode/1201-1300/\u63a8\u7bb1\u5b50"},"next":{"title":"1268.\u641c\u7d22\u63a8\u8350\u7cfb\u7edf","permalink":"/docs/leetcode/1201-1300/\u641c\u7d22\u63a8\u8350\u7cfb\u7edf"}}');var s=r(86070),t=r(31503);const l={},c="1267.\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668",o={},p=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"1267\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668",children:"1267.\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/count-servers-that-communicate",children:"1267.\u7edf\u8ba1\u53c2\u4e0e\u901a\u4fe1\u7684\u670d\u52a1\u5668"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6\u3001\u6570\u7ec4\u3001\u8ba1\u6570\u3001\u77e9\u9635",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8bf7\u4f60\u7edf\u8ba1\u5e76\u8fd4\u56de\u80fd\u591f\u4e0e\u81f3\u5c11\u4e00\u53f0\u5176\u4ed6\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u7684\u670d\u52a1\u5668\u7684\u6570\u91cf\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-24"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a40ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a21.36MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u4e24\u6b21\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int countServers(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size(), mmap[250][250] = {0};\n        pair<int, int> prev = make_pair(-1, -1);\n        for (int i = 0; i < n; i++) {\n            prev = make_pair(-1, -1);\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j] == 1) {\n                    if (prev.first == -1) prev = make_pair(i, j);\n                    else {\n                        mmap[prev.first][prev.second] = true;\n                        mmap[i][j] = true;\n                    }\n                }\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            prev = make_pair(-1, -1);\n            for (int i = 0; i < n; i++) {\n                if (grid[i][j] == 1) {\n                    if (prev.first == -1) prev = make_pair(i, j);\n                    else {\n                        mmap[prev.first][prev.second] = true;\n                        mmap[i][j] = true;\n                    }\n                }\n            }\n        }\n        int res = 0;\n        for (int i = 0; i < n; i++)\n            for (int j = 0; j < m; j++)\n                if (mmap[i][j]) res += 1;\n        return res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-24"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a100ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a17.79MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def countServers(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        mmap = [[0 for _ in range(m)] for _ in range(n)]\n        prev = (-1, -1)\n        for i in range(n):\n            prev = (-1, -1)\n            for j in range(m):\n                if grid[i][j] == 1:\n                    if prev[0] == -1:\n                        prev = (i, j)\n                    else:\n                        mmap[prev[0]][prev[1]] = True\n                        mmap[i][j] = True\n        for j in range(m):\n            prev = (-1, -1)\n            for i in range(n):\n                if grid[i][j] == 1:\n                    if prev[0] == -1:\n                        prev = (i, j)\n                    else:\n                        mmap[prev[0]][prev[1]] = True\n                        mmap[i][j] = True\n        res = 0\n        for i in range(n):\n            for j in range(m):\n                if mmap[i][j]:\n                    res += 1\n        return res\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-24"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.26MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn count_servers(grid: Vec<Vec<i32>>) -> i32 {\n        let n = grid.len();\n        let m = grid[0].len();\n        let mut mmap = vec![vec![false; m]; n];\n        let mut prev = (usize::MAX, usize::MAX);\n        for i in 0..n {\n            prev = (usize::MAX, usize::MAX);\n            for j in 0..m {\n                if grid[i][j] == 1 {\n                    if prev.0 == usize::MAX {\n                        prev = (i, j);\n                    } else {\n                        mmap[prev.0][prev.1] = true;\n                        mmap[i][j] = true;\n                    }\n                }\n            }\n        }\n        for j in 0..m {\n            prev = (usize::MAX, usize::MAX);\n            for i in 0..n {\n                if grid[i][j] == 1 {\n                    if prev.0 == usize::MAX {\n                        prev = (i, j);\n                    } else {\n                        mmap[prev.0][prev.1] = true;\n                        mmap[i][j] = true;\n                    }\n                }\n            }\n        }\n        let mut res = 0;\n        for i in 0..n {\n            for j in 0..m {\n                if mmap[i][j] {\n                    res += 1;\n                }\n            }\n        }\n        res\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},31503:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>c});var i=r(30758);const s={},t=i.createContext(s);function l(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);