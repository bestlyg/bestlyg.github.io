"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[85164],{22644:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"leetcode/601-700/\u8f93\u51fa\u4e8c\u53c9\u6811","title":"655.\u8f93\u51fa\u4e8c\u53c9\u6811","description":"\u94fe\u63a5\uff1a655.\u8f93\u51fa\u4e8c\u53c9\u6811","source":"@site/docs/leetcode/601-700/655.\u8f93\u51fa\u4e8c\u53c9\u6811.md","sourceDirName":"leetcode/601-700","slug":"/leetcode/601-700/\u8f93\u51fa\u4e8c\u53c9\u6811","permalink":"/docs/leetcode/601-700/\u8f93\u51fa\u4e8c\u53c9\u6811","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":655,"frontMatter":{},"sidebar":"journal","previous":{"title":"654.\u6700\u5927\u4e8c\u53c9\u6811","permalink":"/docs/leetcode/601-700/\u6700\u5927\u4e8c\u53c9\u6811"},"next":{"title":"657.\u673a\u5668\u4eba\u80fd\u5426\u8fd4\u56de\u539f\u70b9","permalink":"/docs/leetcode/601-700/\u673a\u5668\u4eba\u80fd\u5426\u8fd4\u56de\u539f\u70b9"}}');var r=t(25105),s=t(8556);const i={},l="655.\u8f93\u51fa\u4e8c\u53c9\u6811",c={},d=[{value:"\u9898\u89e3 1 - rust",id:"\u9898\u89e3-1---rust",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"655\u8f93\u51fa\u4e8c\u53c9\u6811",children:"655.\u8f93\u51fa\u4e8c\u53c9\u6811"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(n.a,{href:"https://leetcode.cn/problems/print-binary-tree",children:"655.\u8f93\u51fa\u4e8c\u53c9\u6811"}),(0,r.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,r.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",(0,r.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u6784\u9020\u5f97\u5230\u7684\u77e9\u9635 res \u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u9898\u89e3-1---rust",children:"\u9898\u89e3 1 - rust"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-08-22"}),"\n",(0,r.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2MB"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dfs\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'use std::cell::RefCell;\nuse std::rc::Rc;\nimpl Solution {\n    pub fn print_tree(root: Option<Rc<RefCell<TreeNode>>>) -> Vec<Vec<String>> {\n        let height = Solution::get_height(root.as_ref()) - 1;\n        let n = 2_usize.pow(height as u32 + 1) - 1;\n        let mut ans = vec![vec![String::new(); n]; height + 1];\n        let root = root.unwrap();\n        Solution::dfs(root, &mut ans, height, 0, (n - 1) / 2);\n        ans\n    }\n    fn get_height(node: Option<&Rc<RefCell<TreeNode>>>) -> usize {\n        match node {\n            Some(node) => {\n                1 + Solution::get_height(node.borrow().left.as_ref())\n                    .max(Solution::get_height(node.borrow().right.as_ref()))\n            }\n            None => 0,\n        }\n    }\n    fn dfs(\n        node: Rc<RefCell<TreeNode>>,\n        data: &mut Vec<Vec<String>>,\n        height: usize,\n        r: usize,\n        c: usize,\n    ) {\n        data[r][c] = format!("{}", node.borrow().val);\n        if node.borrow().left.is_some() {\n            Solution::dfs(\n                node.borrow().left.clone().unwrap(),\n                data,\n                height,\n                r + 1,\n                c - 2_usize.pow((height - r - 1) as u32),\n            )\n        }\n        if node.borrow().right.is_some() {\n            Solution::dfs(\n                node.borrow().right.clone().unwrap(),\n                data,\n                height,\n                r + 1,\n                c + 2_usize.pow((height - r - 1) as u32),\n            )\n        }\n    }\n}\n'})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8556:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var o=t(58101);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);