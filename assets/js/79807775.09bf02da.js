"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[6553],{90562:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"leetcode/2301-2400/\u76f8\u7b49\u884c\u5217\u5bf9","title":"2352.\u76f8\u7b49\u884c\u5217\u5bf9","description":"\u94fe\u63a5\uff1a2352.\u76f8\u7b49\u884c\u5217\u5bf9","source":"@site/docs/leetcode/2301-2400/2352.\u76f8\u7b49\u884c\u5217\u5bf9.md","sourceDirName":"leetcode/2301-2400","slug":"/leetcode/2301-2400/\u76f8\u7b49\u884c\u5217\u5bf9","permalink":"/docs/leetcode/2301-2400/\u76f8\u7b49\u884c\u5217\u5bf9","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2352,"frontMatter":{},"sidebar":"journal","previous":{"title":"2351.\u7b2c\u4e00\u4e2a\u51fa\u73b0\u4e24\u6b21\u7684\u5b57\u6bcd","permalink":"/docs/leetcode/2301-2400/\u7b2c\u4e00\u4e2a\u51fa\u73b0\u4e24\u6b21\u7684\u5b57\u6bcd"},"next":{"title":"2357.\u4f7f\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u7b49\u4e8e\u96f6","permalink":"/docs/leetcode/2301-2400/\u4f7f\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u7b49\u4e8e\u96f6"}}');var s=r(86070),t=r(31503);const l={},o="2352.\u76f8\u7b49\u884c\u5217\u5bf9",c={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"2352\u76f8\u7b49\u884c\u5217\u5bf9",children:"2352.\u76f8\u7b49\u884c\u5217\u5bf9"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/equal-row-and-column-pairs",children:"2352.\u76f8\u7b49\u884c\u5217\u5bf9"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u77e9\u9635\u3001\u6a21\u62df",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u3001\u5927\u5c0f\u4e3a n x n \u7684\u6574\u6570\u77e9\u9635 grid \uff0c\u8fd4\u56de\u6ee1\u8db3 Ri \u884c\u548c Cj \u5217\u76f8\u7b49\u7684\u884c\u5217\u5bf9 (Ri, Cj) \u7684\u6570\u76ee\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-06"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a224ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a43MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u54c8\u5e0c\u5b58\u50a8\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:'class Solution {\npublic:\n    int equalPairs(vector<vector<int>>& grid) {\n        unordered_map<string, int> rows;\n        int res = 0, n = grid.size();\n        for (int i = 0; i < n; i++) {\n            string key = "";\n            for (int j = 0; j < n; j++) key += to_string(grid[i][j]) + ",";\n            rows[key]++;\n        }\n        for (int j = 0; j < n; j++) {\n            string key = "";\n            for (int i = 0; i < n; i++) key += to_string(grid[i][j]) + ",";\n            res += rows[key];\n        }\n        return res;\n    }\n};\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-06"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a212ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a20.6MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'class Solution:\n    def equalPairs(self, grid: List[List[int]]) -> int:\n        rows = Counter()\n        res = 0\n        n = len(grid)\n        for i in range(n):\n            key = ""\n            for j in range(n):\n                key += str(grid[i][j]) + ","\n            rows[key] += 1\n        for j in range(n):\n            key = ""\n            for i in range(n):\n                key += str(grid[i][j]) + ","\n            res += rows[key]\n        return res\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-06"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a44ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a3MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"impl Solution {\npub fn equal_pairs(grid: Vec<Vec<i32>>) -> i32 {\n    let mut rows = std::collections::HashMap::<String, i32>::new();\n    let mut res = 0;\n    let n = grid.len();\n    for i in 0..n {\n        let mut key = String::new();\n        for j in 0..n {\n            key.push_str(&format!(\"{}\", grid[i][j]));\n            key.push(',');\n        }\n        *rows.entry(key).or_insert(0) += 1;\n    }\n    for j in 0..n {\n        let mut key = String::new();\n        for i in 0..n {\n            key.push_str(&format!(\"{}\", grid[i][j]));\n            key.push(',');\n        }\n        res += *rows.entry(key).or_insert(0);\n    }\n    res\n}\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},31503:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>o});var i=r(30758);const s={},t=i.createContext(s);function l(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);