"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[79088],{79045:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"leetcode/901-1000/\u4e0d\u540c\u8def\u5f84III","title":"980.\u4e0d\u540c\u8def\u5f84III","description":"\u94fe\u63a5\uff1a980.\u4e0d\u540c\u8def\u5f84III","source":"@site/docs/leetcode/901-1000/980.\u4e0d\u540c\u8def\u5f84III.md","sourceDirName":"leetcode/901-1000","slug":"/leetcode/901-1000/\u4e0d\u540c\u8def\u5f84III","permalink":"/docs/leetcode/901-1000/\u4e0d\u540c\u8def\u5f84III","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":980,"frontMatter":{},"sidebar":"journal","previous":{"title":"979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01","permalink":"/docs/leetcode/901-1000/\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01"},"next":{"title":"981.\u57fa\u4e8e\u65f6\u95f4\u7684\u952e\u503c\u5b58\u50a8","permalink":"/docs/leetcode/901-1000/\u57fa\u4e8e\u65f6\u95f4\u7684\u952e\u503c\u5b58\u50a8"}}');var s=i(25105),t=i(8556);const d={},l="980.\u4e0d\u540c\u8def\u5f84III",c={},u=[{value:"\u9898\u89e3 1 - python",id:"\u9898\u89e3-1---python",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function o(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"980\u4e0d\u540c\u8def\u5f84iii",children:"980.\u4e0d\u540c\u8def\u5f84III"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/unique-paths-iii",children:"980.\u4e0d\u540c\u8def\u5f84III"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u4f4d\u8fd0\u7b97\u3001\u6570\u7ec4\u3001\u56de\u6eaf\u3001\u77e9\u9635",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u5728\u56db\u4e2a\u65b9\u5411\uff08\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\uff09\u4e0a\u884c\u8d70\u65f6\uff0c\u4ece\u8d77\u59cb\u65b9\u683c\u5230\u7ed3\u675f\u65b9\u683c\u7684\u4e0d\u540c\u8def\u5f84\u7684\u6570\u76ee\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---python",children:"\u9898\u89e3 1 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-04"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a68ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.83MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"dirs = [(0, 1), (1, 0), (0, -1), (-1, 0)]\nclass Solution:\n    def uniquePathsIII(self, grid: List[List[int]]) -> int:\n        res = 0\n        n = len(grid)\n        m = len(grid[0])\n        sum = n * m\n        start = end = (0, 0)\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] == 1:\n                    start = (i, j)\n                elif grid[i][j] == 2:\n                    end = (i, j)\n                elif grid[i][j] == -1:\n                    sum -= 1\n        used = [[False for _ in range(m)] for _ in range(n)]\n        used[start[0]][start[1]] = True\n        def dfs(cur: Tuple[int, int], cnt: int):\n            nonlocal res\n            if cur[0] == end[0] and cur[1] == end[1]:\n                if cnt == sum:\n                    res += 1\n                return\n            for dir in dirs:\n                nx = cur[0] + dir[0]\n                ny = cur[1] + dir[1]\n                if 0 <= nx < n and 0 <= ny < m and grid[nx][ny] != -1 and not used[nx][ny]:\n                    used[nx][ny] = True\n                    dfs((nx, ny), cnt + 1)\n                    used[nx][ny] = False\n        dfs(start, 1)\n        return res\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-04"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.77MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dfs\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"#define X first\n#define Y second\n#define pii pair<int, int>\nvector<vector<int>> dirs = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\nclass Solution {\npublic:\n    int uniquePathsIII(vector<vector<int>>& grid) {\n        int res = 0, n = grid.size(), m = grid[0].size(), sum = n * m;\n        pii start, end;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j] == 1) start = make_pair(i, j);\n                else if (grid[i][j] == 2) end = make_pair(i, j);\n                else if (grid[i][j] == -1) sum -= 1;\n            }\n        }\n        vector<vector<bool>> used(n, vector<bool>(m, false));\n        used[start.X][start.Y] = true;\n        function<void(pii, int)> dfs = [&](pii cur, int cnt) {\n            if (cur.X == end.X && cur.Y == end.Y) {\n                if (cnt == sum) res += 1;\n                return;\n            }\n            for (auto &dir : dirs) {\n                int nx = cur.X + dir[0], ny = cur.Y + dir[1];\n                if (0 <= nx && nx < n && 0 <= ny && ny < m && grid[nx][ny] != -1 && !used[nx][ny]) {\n                    used[nx][ny] = true;\n                    dfs(make_pair(nx, ny), cnt + 1);\n                    used[nx][ny] = false;\n                }\n            }\n        };\n        dfs(start, 1);\n        return res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-04"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a1.86MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"pub const DIRS: [[i32; 2]; 4] = [[0, 1], [0, -1], [1, 0], [-1, 0]];\nimpl Solution {\n    pub fn unique_paths_iii(grid: Vec<Vec<i32>>) -> i32 {\n        let mut res = 0;\n        let n = grid.len();\n        let m = grid[0].len();\n        let mut start = (0, 0);\n        let mut end = (0, 0);\n        let mut sum = n * m;\n        for i in 0..n {\n            for j in 0..m {\n                if grid[i][j] == 1 {\n                    start = (i, j);\n                } else if grid[i][j] == 2 {\n                    end = (i, j);\n                } else if grid[i][j] == -1 {\n                    sum -= 1;\n                }\n            }\n        }\n        let mut used: Vec<Vec<bool>> = vec![vec![false; m]; n];\n        used[start.0][start.1] = true;\n        fn dfs(\n            res: &mut i32,\n            sum: usize,\n            grid: &Vec<Vec<i32>>,\n            used: &mut Vec<Vec<bool>>,\n            cur: (usize, usize),\n            end: (usize, usize),\n            cnt: usize,\n        ) {\n            if cur.0 == end.0 && cur.1 == end.1 {\n                if cnt == sum {\n                    *res += 1;\n                }\n            } else {\n                for dir in DIRS {\n                    let nx = (cur.0 as i32 + dir[0]) as usize;\n                    let ny = (cur.1 as i32 + dir[1]) as usize;\n                    if 0 <= nx\n                        && nx < grid.len()\n                        && 0 <= ny\n                        && ny < grid[0].len()\n                        && grid[nx][ny] != -1\n                        && !used[nx][ny]\n                    {\n                        used[nx][ny] = true;\n                        dfs(res, sum, grid, used, (nx, ny), end, cnt + 1);\n                        used[nx][ny] = false;\n                    }\n                }\n            }\n        }\n        dfs(&mut res, sum, &grid, &mut used, start, end, 1);\n        res\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}},8556:(n,e,i)=>{i.d(e,{R:()=>d,x:()=>l});var r=i(58101);const s={},t=r.createContext(s);function d(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:d(n.components),r.createElement(t.Provider,{value:e},n.children)}}}]);