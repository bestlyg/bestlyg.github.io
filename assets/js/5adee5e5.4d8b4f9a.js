"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[37956],{68877:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var i=t(86070),s=t(31503);const c={},r="423.\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",l={id:"leetcode/401-500/\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",title:"423.\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",description:"\u94fe\u63a5\uff1a423.\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",source:"@site/docs/leetcode/401-500/423.\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57.md",sourceDirName:"leetcode/401-500",slug:"/leetcode/401-500/\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",permalink:"/docs/leetcode/401-500/\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:423,frontMatter:{},sidebar:"journal",previous:{title:"421.\u6570\u7ec4\u4e2d\u4e24\u4e2a\u6570\u7684\u6700\u5927\u5f02\u6216\u503c",permalink:"/docs/leetcode/401-500/\u6570\u7ec4\u4e2d\u4e24\u4e2a\u6570\u7684\u6700\u5927\u5f02\u6216\u503c"},next:{title:"424.\u66ff\u6362\u540e\u7684\u6700\u957f\u91cd\u590d\u5b57\u7b26",permalink:"/docs/leetcode/401-500/\u66ff\u6362\u540e\u7684\u6700\u957f\u91cd\u590d\u5b57\u7b26"}},o={},u=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - c",id:"\u9898\u89e3-2---c",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"423\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57",children:"423.\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/reconstruct-original-digits-from-english",children:"423.\u4ece\u82f1\u6587\u4e2d\u91cd\u5efa\u6570\u5b57"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u54c8\u5e0c\u8868\u3001\u6570\u5b66\u3001\u5b57\u7b26\u4e32",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5176\u4e2d\u5305\u542b\u5b57\u6bcd\u987a\u5e8f\u6253\u4e71\u7684\u7528\u82f1\u6587\u5355\u8bcd\u8868\u793a\u7684\u82e5\u5e72\u6570\u5b57\uff080-9\uff09\u3002\u6309 \u5347\u5e8f \u8fd4\u56de\u539f\u59cb\u7684\u6570\u5b57\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-11-24"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a124ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a41.3MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5bf9\u4e8e\u6570\u5b57\u4e00\u6b21\u6392\u5e8f\u5220\u51cf\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"const dict: Record<number, string[]> = {\n  1: 'one'.split(''),\n  2: 'two'.split(''), // w\n  3: 'three'.split(''), //t\n  4: 'four'.split(''), // u\n  5: 'five'.split(''), // f\n  6: 'six'.split(''), // x\n  7: 'seven'.split(''), // v\n  8: 'eight'.split(''), // g\n  9: 'nine'.split(''), // i\n  0: 'zero'.split(''), // z\n};\nconst checkList = [\n  { num: 2, key: 'w' },\n  { num: 6, key: 'x' },\n  { num: 0, key: 'z' },\n  { num: 8, key: 'g' },\n  { num: 3, key: 't' },\n  { num: 4, key: 'u' },\n  { num: 5, key: 'f' },\n  { num: 7, key: 'v' },\n  { num: 9, key: 'i' },\n  { num: 1, key: 'o' },\n];\nfunction originalDigits(s: string): string {\n  const map: Record<string, number> = {};\n  for (const c of s) map[c] = (map[c] ?? 0) + 1;\n  const list: number[] = new Array(10).fill(0);\n  for (const { num, key } of checkList) {\n    if (!map[key]) continue;\n    const cnt = map[key];\n    list[num] += cnt;\n    for (const ch of dict[num]) map[ch] -= cnt;\n  }\n  return list.reduce((ans, cnt, num) => ans + num.toString().repeat(cnt), '');\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-2---c",children:"\u9898\u89e3 2 - c"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-11-24"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a276ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.3MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1ac"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5bf9\u4e8e\u6570\u5b57\u4e00\u6b21\u6392\u5e8f\u5220\u51cf\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-c",children:"struct {\n    int num;\n    char key;\n} checkList[10] = {\n    {2, 'w'}, {6, 'x'}, {0, 'z'}, {8, 'g'}, {3, 't'},\n    {4, 'u'}, {5, 'f'}, {7, 'v'}, {9, 'i'}, {1, 'o'}\n};\nchar dict[10][6] = {\n    {\"zero\"}, {\"one\"}, {\"two\"},{\"three\"}, {\"four\"},\n    {\"five\"}, {\"six\"}, {\"seven\"}, {\"eight\"}, {\"nine\"}\n};\nchar * originalDigits(char * s){\n    int map[26] = {0}, list[10] = {0}, sum = 0;\n    for (int i = 0; i < strlen(s); i++) map[s[i] - 'a']++;\n    for (int i = 0; i < 10; i++) {\n        char key = checkList[i].key;\n        int num = checkList[i].num;\n        if (!map[key - 'a']) continue;\n        int cnt = map[key - 'a'];\n        list[num] += cnt;\n        sum += cnt;\n        for (int i = 0; i < strlen(dict[num]); i++) {\n            char ch = dict[num][i];\n            map[ch - 'a'] -=cnt;\n        }\n    }\n    int idx = 0;\n    char *ans = (char *)malloc(sizeof(char) * (sum + 1));\n    ans[sum] = '\\0';\n    for (int num = 0; num < 10; num++) {\n        int cnt = list[num];\n        if (!cnt) continue;\n        memset(ans + idx, num + '0', sizeof(char) * cnt);\n        idx += cnt;\n        // printf(\"sum = %d, num = %d, cnt = %d, ans = %s\\n\", sum, num, cnt, ans);\n    }\n    // printf(\"ans = %s\\n\", ans);\n    return ans;\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},31503:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var i=t(30758);const s={},c=i.createContext(s);function r(n){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);