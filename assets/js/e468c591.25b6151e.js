"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[14304],{68148:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"leetcode/401-500/\u8fde\u63a5\u8bcd","title":"472.\u8fde\u63a5\u8bcd","description":"\u94fe\u63a5\uff1a472.\u8fde\u63a5\u8bcd","source":"@site/docs/leetcode/401-500/472.\u8fde\u63a5\u8bcd.md","sourceDirName":"leetcode/401-500","slug":"/leetcode/401-500/\u8fde\u63a5\u8bcd","permalink":"/docs/leetcode/401-500/\u8fde\u63a5\u8bcd","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":472,"frontMatter":{},"sidebar":"journal","previous":{"title":"470.\u7528Rand7()\u5b9e\u73b0Rand10()","permalink":"/docs/leetcode/401-500/\u7528Rand7()\u5b9e\u73b0Rand10()"},"next":{"title":"473.\u706b\u67f4\u62fc\u6b63\u65b9\u5f62","permalink":"/docs/leetcode/401-500/\u706b\u67f4\u62fc\u6b63\u65b9\u5f62"}}');var i=r(25105),o=r(8556);const s={},d="472.\u8fde\u63a5\u8bcd",c={},l=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"472\u8fde\u63a5\u8bcd",children:"472.\u8fde\u63a5\u8bcd"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(n.a,{href:"https://leetcode.cn/problems/concatenated-words",children:"472.\u8fde\u63a5\u8bcd"}),(0,i.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,i.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5b57\u5178\u6811\u3001\u6570\u7ec4\u3001\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212",(0,i.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a \u4e0d\u542b\u91cd\u590d \u5355\u8bcd\u7684\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de words \u4e2d\u7684\u6240\u6709 \u8fde\u63a5\u8bcd \u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-12-28"}),"\n",(0,i.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4684ms"}),"\n",(0,i.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a72.9MB"}),"\n",(0,i.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,i.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","trie\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"class TrieNode {\n  end = false;\n  children: TrieNode[] = [];\n  constructor(public val: string) {}\n}\nclass Trie {\n  root = new TrieNode('');\n  insert(word: string): void {\n    let node = this.root;\n    for (const ch of word) {\n      const idx = this.getIdx(ch);\n      if (!node.children[idx]) node.children[idx] = new TrieNode(ch);\n      node = node.children[idx];\n    }\n    node.end = true;\n  }\n  findNode(word: string): TrieNode | null {\n    let node = this.root;\n    for (const ch of word) {\n      const idx = this.getIdx(ch);\n      if (!node.children[idx]) return null;\n      node = node.children[idx];\n    }\n    return node;\n  }\n  search(word: string): boolean {\n    return !!this.findNode(word)?.end;\n  }\n  startsWith(prefix: string): boolean {\n    return !!this.findNode(prefix);\n  }\n  getIdx(ch: string) {\n    return ch.codePointAt(0)! - 'a'.codePointAt(0)!;\n  }\n}\nfunction check(trie: Trie, word: string, init = true): boolean {\n  if (!init && trie.search(word)) return true;\n  for (let i = 0, n = word.length; i < n; i++) {\n    if (trie.search(word.substring(0, i)) && check(trie, word.substring(i), false)) return true;\n  }\n  return false;\n}\nfunction findAllConcatenatedWordsInADict(words: string[]): string[] {\n  const trie = new Trie();\n  return words\n    .sort((w1, w2) => w1.length - w2.length)\n    .filter(word => {\n      if (!word) return false;\n      if (check(trie, word)) return true;\n      trie.insert(word);\n      return false;\n    });\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8556:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var t=r(58101);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);