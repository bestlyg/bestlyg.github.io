"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[78147],{50383:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var t=i(86070),s=i(31503);const r={},c="1599.\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",o={id:"leetcode/1501-1600/\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",title:"1599.\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",description:"\u94fe\u63a5\uff1a1599.\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",source:"@site/docs/leetcode/1501-1600/1599.\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6.md",sourceDirName:"leetcode/1501-1600",slug:"/leetcode/1501-1600/\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",permalink:"/docs/leetcode/1501-1600/\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1599,frontMatter:{},sidebar:"journal",previous:{title:"1598.\u6587\u4ef6\u5939\u64cd\u4f5c\u65e5\u5fd7\u641c\u96c6\u5668",permalink:"/docs/leetcode/1501-1600/\u6587\u4ef6\u5939\u64cd\u4f5c\u65e5\u5fd7\u641c\u96c6\u5668"},next:{title:"1600.\u738b\u4f4d\u7ee7\u627f\u987a\u5e8f",permalink:"/docs/leetcode/1501-1600/\u738b\u4f4d\u7ee7\u627f\u987a\u5e8f"}},l={},a=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2},{value:"\u9898\u89e3 4 - python",id:"\u9898\u89e3-4---python",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"1599\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6",children:"1599.\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/maximum-profit-of-operating-a-centennial-wheel",children:"1599.\u7ecf\u8425\u6469\u5929\u8f6e\u7684\u6700\u5927\u5229\u6da6"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6a21\u62df",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u6700\u5927\u5316\u5229\u6da6\u6240\u9700\u6267\u884c\u7684 \u6700\u5c0f\u8f6e\u8f6c\u6b21\u6570 \u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-03-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a100ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a79.5MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6a21\u62df\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int minOperationsMaxProfit(vector<int>& customers, int boardingCost, int runningCost) {\n        int resMax = 0, resCnt = -1, wait = 0, cur = 0, i = 0;\n        while (wait != 0 || i < customers.size()) {\n            if (i < customers.size()) wait += customers[i];\n            cur += min(wait, 4) * boardingCost - runningCost;\n            wait = max(wait - 4, 0);\n            if (cur > resMax) resMax = cur, resCnt = i + 1;\n            i += 1;\n        }\n        return resCnt;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-03-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a1656ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a19.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n        def minOperationsMaxProfit(self, customers: List[int], boardingCost: int, runningCost: int) -> int:\n            resMax, resCnt = 0, -1\n            wait, cur, i = 0, 0, 0\n            while wait != 0 or i < len(customers):\n                if i < len(customers):\n                    wait += customers[i]\n                cur += min(wait, 4) * boardingCost - runningCost\n                wait = max(wait - 4, 0)\n                if cur > resMax:\n                    resMax = cur\n                    resCnt = i + 1\n                i += 1\n            return resCnt\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-03-05"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a24ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.8MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn min_operations_max_profit(\n        customers: Vec<i32>,\n        boarding_cost: i32,\n        running_cost: i32,\n    ) -> i32 {\n        let (mut resMax, mut resCnt, mut wait, mut cur, mut i) = (0, -1, 0, 0, 0);\n        while wait != 0 || i < customers.len() {\n            if i < customers.len() {\n                wait += customers[i];\n            }\n            cur += wait.min(4) * boarding_cost - running_cost;\n            wait = 0.max(wait - 4);\n            if cur > resMax {\n                resMax = cur;\n                resCnt = i as i32 + 1;\n            }\n            i += 1;\n        }\n        resCnt\n    }\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-4---python",children:"\u9898\u89e3 4 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-01-01"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a1200ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a20.89MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6a21\u62df\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def minOperationsMaxProfit(self, customers: List[int], boardingCost: int, runningCost: int) -> int:\n        costCnt = costSum = resSum =0\n        resCnt = -1\n        mask = 0b0000\n        wait = 0\n        \n        def walk():\n            nonlocal costCnt, costSum, resSum, resCnt, mask, wait\n            cnt = min(wait, 4)\n            costSum += cnt * boardingCost - runningCost\n            wait -= cnt\n            costCnt += 1\n            mask = ((mask << 1) | 0b0001) & 0b1111\n            if costSum > resSum:\n                resCnt, resSum = costCnt, costSum\n        for v in customers:\n            wait += v\n            walk()\n        while wait: walk()\n        return resCnt\n"})})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>o});var t=i(30758);const s={},r=t.createContext(s);function c(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);