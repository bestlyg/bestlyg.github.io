"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[36901],{88659:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=i(86070),l=i(25710);const s={},r="670.\u6700\u5927\u4ea4\u6362",c={id:"leetcode/601-700/\u6700\u5927\u4ea4\u6362",title:"670.\u6700\u5927\u4ea4\u6362",description:"\u94fe\u63a5\uff1a670.\u6700\u5927\u4ea4\u6362",source:"@site/docs/leetcode/601-700/670.\u6700\u5927\u4ea4\u6362.md",sourceDirName:"leetcode/601-700",slug:"/leetcode/601-700/\u6700\u5927\u4ea4\u6362",permalink:"/web/site/docs/leetcode/601-700/\u6700\u5927\u4ea4\u6362",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:670,frontMatter:{},sidebar:"journal",previous:{title:"669.\u4fee\u526a\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/web/site/docs/leetcode/601-700/\u4fee\u526a\u4e8c\u53c9\u641c\u7d22\u6811"},next:{title:"673.\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570",permalink:"/web/site/docs/leetcode/601-700/\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217\u7684\u4e2a\u6570"}},o={},a=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"670\u6700\u5927\u4ea4\u6362",children:"670.\u6700\u5927\u4ea4\u6362"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/maximum-swap",children:"670.\u6700\u5927\u4ea4\u6362"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u5b66",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4f60\u81f3\u591a\u53ef\u4ee5\u4ea4\u6362\u4e00\u6b21\u6570\u5b57\u4e2d\u7684\u4efb\u610f\u4e24\u4f4d\u3002\u8fd4\u56de\u4f60\u80fd\u5f97\u5230\u7684\u6700\u5927\u503c\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-09-13"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a5.7MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5bfb\u627e\u662f\u5426\u5b58\u5728\u6bd4\u5f53\u524d\u503c\u5927\u7684\u4f4e\u4f4d\u6570\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int maximumSwap(int num) {\n        int list[10] = {0}, list_len = 0;\n        for (; num; num /= 10) list[list_len++] = num % 10;\n        for (int i = list_len - 1; i > 0; i--) {\n            int max_idx = i - 1;\n            for (int j = i - 1; j >= 0; j--) max_idx = list[max_idx] > list[j] ? max_idx : j;\n            if (list[max_idx] > list[i]) {\n                swap(list[max_idx], list[i]);\n                break;\n            }\n        }\n        int ans = 0;\n        for (int i = list_len - 1; i >= 0; i--) ans = ans * 10 + list[i];\n        return ans;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-01-22"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a42ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.49MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u8d2a\u5fc3\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def maximumSwap(self, num: int) -> int:\n        arr = [[] for _ in range(10)]\n        lnum = list(int(c) for c in str(num))\n        for i in range(len(lnum)): arr[lnum[i]].append(i)\n        swap = False\n        for i in range(len(lnum)):\n            for num in range(9, -1, -1):\n                if lnum[i] >= num: break\n                while arr[num] and arr[num][-1] < i: arr[num].pop()\n                if arr[num]:\n                    lnum[i], lnum[arr[num][-1]] = lnum[arr[num][-1]], lnum[i]\n                    swap = True\n            if swap: break\n        return reduce(lambda sum, num: sum * 10 + num, lnum, 0)\n"})})]})}function d(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var t=i(30758);const l={},s=t.createContext(l);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:r(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);