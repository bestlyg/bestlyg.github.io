"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[99727],{70869:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var s=i(86070),t=i(25710);const o={},l="564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",r={id:"leetcode/501-600/\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",title:"564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",description:"\u94fe\u63a5\uff1a564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",source:"@site/docs/leetcode/501-600/564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570.md",sourceDirName:"leetcode/501-600",slug:"/leetcode/501-600/\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",permalink:"/docs/leetcode/501-600/\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:564,frontMatter:{},sidebar:"journal",previous:{title:"563.\u4e8c\u53c9\u6811\u7684\u5761\u5ea6",permalink:"/docs/leetcode/501-600/\u4e8c\u53c9\u6811\u7684\u5761\u5ea6"},next:{title:"565.\u6570\u7ec4\u5d4c\u5957",permalink:"/docs/leetcode/501-600/\u6570\u7ec4\u5d4c\u5957"}},u={},c=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2}];function g(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"564\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570",children:"564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/find-the-closest-palindrome",children:"564.\u5bfb\u627e\u6700\u8fd1\u7684\u56de\u6587\u6570"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u56f0\u96be",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u5b66\u3001\u5b57\u7b26\u4e32",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u6574\u6570\u7684\u5b57\u7b26\u4e32 n \uff0c\u8fd4\u56de\u4e0e\u5b83\u6700\u8fd1\u7684\u56de\u6587\u6574\u6570\uff08\u4e0d\u5305\u62ec\u81ea\u8eab\uff09\u3002\u5982\u679c\u4e0d\u6b62\u4e00\u4e2a\uff0c\u8fd4\u56de\u8f83\u5c0f\u7684\u90a3\u4e2a\u3002 \u201c\u6700\u8fd1\u7684\u201d\u5b9a\u4e49\u4e3a\u4e24\u4e2a\u6574\u6570\u5dee\u7684\u7edd\u5bf9\u503c\u6700\u5c0f\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-03-02"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.3MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u68c0\u6d4b\u8fdb\u4f4d\u548c\u9000\u4f4d\u7684\u95ee\u9898\u540e\uff0c\u7ffb\u8f6c\u524d\u534a\u90e8\u4efd\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n   public:\n    string nearestPalindromic(string n) {\n        // \u68c0\u6d4b\u4e00\u4f4d\u6570\n        if (n.size() == 1) {\n            n[0] -= 1;\n            return n;\n        }\n        // \u68c0\u6d4b10000\n        if (n[0] == '1') {\n            int i = 1;\n            while (i < n.size() && n[i] == '0') i++;\n            if (i == n.size() || i == n.size() - 1 && n[i] == '1') {\n                string ans = \"\";\n                for (int i = 1; i < n.size(); i++) ans += '9';\n                return ans;\n            }\n        }\n        // \u68c0\u6d4b99999\n        if (n[0] == '9') {\n            int i = 1;\n            while (i < n.size() && n[i] == '9') i++;\n            if (i == n.size()) {\n                string ans = \"1\";\n                for (int i = 1; i < n.size(); i++) ans += \"0\";\n                ans += \"1\";\n                return ans;\n            }\n        }\n        // \u68c0\u6d4b\u5176\u5b83\n        return common(n);\n    }\n    string common(const string &n) {\n        long long num = stoll(n);\n        vector<long long> list = getlist(n);\n        long long ans = -1, minus_num = INT_MAX;\n        for (int i = 0; i < list.size(); i++) {\n            int minus = abs(list[i] - num);\n            if (minus == 0) continue;\n            if (minus < minus_num || minus == minus_num && list[i] < ans) {\n                ans = list[i];\n                minus_num = minus;\n            }\n        }\n        return to_string(ans);\n    }\n    vector<long long> getlist(const string &n) {\n        if (n.size() & 1)\n            return getlist_odd(n);\n        else\n            return getlist_even(n);\n    }\n    vector<long long> getlist_odd(const string &n) {\n        vector<long long> ans;\n        long long high_num = 0;\n        for (int i = 0; i <= n.size() / 2; i++) {\n            high_num = high_num * 10 + n[i] - '0';\n        }\n        ans.push_back(getnum(high_num / 10, getlow(high_num / 10), n.size() / 2,\n                             high_num % 10));\n        ans.push_back(getnum((high_num + 1) / 10, getlow((high_num + 1) / 10),\n                             n.size() / 2, (high_num + 1) % 10));\n        ans.push_back(getnum((high_num - 1) / 10, getlow((high_num - 1) / 10),\n                             n.size() / 2, (high_num - 1) % 10));\n        return ans;\n    }\n    vector<long long> getlist_even(const string &n) {\n        vector<long long> ans;\n        long long high_num = 0;\n        for (int i = 0; i < n.size() / 2; i++) {\n            high_num = high_num * 10 + n[i] - '0';\n        }\n        ans.push_back(getnum(high_num, getlow(high_num), n.size() / 2, -1));\n        ans.push_back(\n            getnum(high_num + 1, getlow(high_num + 1), n.size() / 2, -1));\n        ans.push_back(\n            getnum(high_num - 1, getlow(high_num - 1), n.size() / 2, -1));\n        return ans;\n    }\n    long long getnum(const long long &high, const long long &low,\n                     const int size, const int mid) {\n        long long num = high;\n        num *= pow(10, size);\n        if (mid != -1) {\n            num *= 10;\n            num += mid * pow(10, size);\n        }\n        num += low;\n        return num;\n    }\n    long long getlow(const long long &num) {\n        string ans = to_string(num);\n        reverse(ans.begin(), ans.end());\n        return stoll(ans);\n    }\n};\n"})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(g,{...n})}):g(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>r});var s=i(30758);const t={},o=s.createContext(t);function l(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);