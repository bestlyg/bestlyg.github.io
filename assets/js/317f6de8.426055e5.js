"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[31417],{4422:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var i=s(86070),t=s(25710);const l={},c="2609.\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",r={id:"leetcode/2601-2700/\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",title:"2609.\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",description:"\u94fe\u63a5\uff1a2609.\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",source:"@site/docs/leetcode/2601-2700/2609.\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32.md",sourceDirName:"leetcode/2601-2700",slug:"/leetcode/2601-2700/\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",permalink:"/docs/leetcode/2601-2700/\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2609,frontMatter:{},sidebar:"journal",previous:{title:"2605.\u4ece\u4e24\u4e2a\u6570\u5b57\u6570\u7ec4\u91cc\u751f\u6210\u6700\u5c0f\u6570\u5b57",permalink:"/docs/leetcode/2601-2700/\u4ece\u4e24\u4e2a\u6570\u5b57\u6570\u7ec4\u91cc\u751f\u6210\u6700\u5c0f\u6570\u5b57"},next:{title:"2610.\u8f6c\u6362\u4e8c\u7ef4\u6570\u7ec4",permalink:"/docs/leetcode/2601-2700/\u8f6c\u6362\u4e8c\u7ef4\u6570\u7ec4"}},o={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2},{value:"\u9898\u89e3 4 - python",id:"\u9898\u89e3-4---python",level:2}];function h(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"2609\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32",children:"2609.\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/find-the-longest-balanced-substring-of-a-binary-string",children:"2609.\u6700\u957f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u7b80\u5355",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u4ec5\u7531 0 \u548c 1 \u7ec4\u6210\u7684\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 s \u3002\xa0\u5982\u679c\u5b50\u5b57\u7b26\u4e32\u4e2d \u6240\u6709\u7684 0 \u90fd\u5728 1 \u4e4b\u524d \u4e14\u5176\u4e2d 0 \u7684\u6570\u91cf\u7b49\u4e8e 1 \u7684\u6570\u91cf\uff0c\u5219\u8ba4\u4e3a s \u7684\u8fd9\u4e2a\u5b50\u5b57\u7b26\u4e32\u662f\u5e73\u8861\u5b50\u5b57\u7b26\u4e32\u3002\u8bf7\u6ce8\u610f\uff0c\u7a7a\u5b50\u5b57\u7b26\u4e32\u4e5f\u89c6\u4f5c\u5e73\u8861\u5b50\u5b57\u7b26\u4e32\u3002\xa0\u8fd4\u56de\xa0 s \u4e2d\u6700\u957f\u7684\u5e73\u8861\u5b50\u5b57\u7b26\u4e32\u957f\u5ea6\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-02"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n   public:\n    int findTheLongestBalancedSubstring(string s) {\n        int cnt0 = 0, cnt1 = 0, res = 0;\n        for (int i = 0; i < s.size(); i++) {\n            if (s[i] == '0') {\n                cnt0++;\n            } else {\n                cnt1++;\n                if (cnt0 >= cnt1) {\n                    res = max(res, cnt1 * 2);\n                }\n                if (i + 1 == s.size() || s[i + 1] == '0') {\n                    cnt0 = cnt1 = 0;\n                }\n            }\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-02"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a36ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def findTheLongestBalancedSubstring(self, s: str) -> int:\n        cnt0 = cnt1 = res = 0\n        for i in range(len(s)):\n            c = s[i]\n            if c == '0':\n                cnt0 += 1\n            else:\n                cnt1 += 1\n                if cnt0 >= cnt1:\n                    res = max(res, cnt1*2)\n                if i + 1 == len(s) or s[i+1] == '0':\n                    cnt0 = cnt1 = 0\n        return res\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-02"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn find_the_longest_balanced_substring(s: String) -> i32 {\n        let s = s.chars().collect::<Vec<char>>();\n        let (mut cnt0, mut cnt1, mut res) = (0, 0, 0);\n        for i in 0..s.len() {\n            if s[i] == '0' {\n                cnt0 += 1\n            } else {\n                cnt1 += 1;\n                if cnt0 >= cnt1 {\n                    res = res.max(cnt1 * 2)\n                }\n                if i + 1 == s.len() || s[i + 1] == '0' {\n                    cnt0 = 0;\n                    cnt1 = 0;\n                }\n            }\n        }\n        res\n    }\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-4---python",children:"\u9898\u89e3 4 - python"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-11-08"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a44ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.48MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u4e00\u6b21\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def findTheLongestBalancedSubstring(self, s: str) -> int:\n        n = len(s)\n        i = ans = 0\n        while i < n and s[i] == '1': i += 1\n        while i < n:\n            cur = i\n            while i < n and s[i] == '0': i += 1\n            cnt0 = i - cur\n            while i < n and s[i] == '1': i += 1\n            cnt1 = i - cur - cnt0\n            ans = max(ans, min(cnt0, cnt1) * 2)\n        return ans\n"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}},25710:(n,e,s)=>{s.d(e,{R:()=>c,x:()=>r});var i=s(30758);const t={},l=i.createContext(t);function c(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:c(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);