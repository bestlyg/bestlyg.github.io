"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[50292],{2550:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"leetcode/2301-2400/\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32","title":"2337.\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32","description":"\u94fe\u63a5\uff1a2337.\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32","source":"@site/docs/leetcode/2301-2400/2337.\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32.md","sourceDirName":"leetcode/2301-2400","slug":"/leetcode/2301-2400/\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32","permalink":"/docs/leetcode/2301-2400/\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2337,"frontMatter":{},"sidebar":"journal","previous":{"title":"2336.\u65e0\u9650\u96c6\u4e2d\u7684\u6700\u5c0f\u6570\u5b57","permalink":"/docs/leetcode/2301-2400/\u65e0\u9650\u96c6\u4e2d\u7684\u6700\u5c0f\u6570\u5b57"},"next":{"title":"2341.\u6570\u7ec4\u80fd\u5f62\u6210\u591a\u5c11\u6570\u5bf9","permalink":"/docs/leetcode/2301-2400/\u6570\u7ec4\u80fd\u5f62\u6210\u591a\u5c11\u6570\u5bf9"}}');var r=t(86070),s=t(31503);const l={},a="2337.\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32",c={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"2337\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32",children:"2337.\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/move-pieces-to-obtain-a-string",children:"2337.\u79fb\u52a8\u7247\u6bb5\u5f97\u5230\u5b57\u7b26\u4e32"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5982\u679c\u5728\u79fb\u52a8\u5b57\u7b26\u4e32 start \u4e2d\u7684\u7247\u6bb5\u4efb\u610f\u6b21\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u4e32 target \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-21"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a56ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a18.6MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5224\u65adstart\u7684L\u90fd\u5728target\u53f3\u4fa7\uff0cR\u90fd\u5728target\u5de6\u4fa7\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool canChange(string start, string target) {\n        int n = start.size(), i1 = 0, i2 = 0;\n        while (i1 < n && start[i1] == '_') i1 += 1;\n        while (i2 < n && target[i2] == '_') i2 += 1;\n        while (i1 < n && i2 < n) {\n            if (start[i1] != target[i2]) return false;\n            if (start[i1] == 'L' && i1 < i2) return false;\n            if (start[i1] == 'R' && i1 > i2) return false;\n            i1 += 1;\n            i2 += 1;\n            while (i1 < n && start[i1] == '_') i1 += 1;\n            while (i2 < n && target[i2] == '_') i2 += 1;\n        }\n        return i1 == n && i2 == n;\n    }\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-21"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a240ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.43MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def canChange(self, start: str, target: str) -> bool:\n        n = len(start)\n        i1 = i2 = 0\n        while i1 < n and start[i1] == '_':\n            i1 += 1\n        while i2 < n and target[i2] == '_':\n            i2 += 1\n        while i1 < n and i2 < n:\n            if start[i1] != target[i2]:\n                return False\n            if start[i1] == 'L' and i1 < i2:\n                return False\n            if start[i1] == 'R' and i1 > i2:\n                return False\n            i1 += 1\n            i2 += 1\n            while i1 < n and start[i1] == '_':\n                i1 += 1\n            while i2 < n and target[i2] == '_':\n                i2 += 1\n        return i1 == n and i2 == n\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-21"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a12ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a3.1MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"pub fn str_to_vec(s: &String) -> Vec<char> {\n    s.chars().collect()\n}\nimpl Solution {\n    pub fn can_change(start: String, target: String) -> bool {\n        let start = str_to_vec(&start);\n        let target = str_to_vec(&target);\n        let n = start.len();\n        let (mut i1, mut i2) = (0, 0);\n        while i1 < n && start[i1] == '_' {\n            i1 += 1;\n        }\n        while i2 < n && target[i2] == '_' {\n            i2 += 1;\n        }\n        while (i1 < n && i2 < n) {\n            if start[i1] != target[i2] {\n                return false;\n            }\n            if start[i1] == 'L' && i1 < i2 {\n                return false;\n            }\n            if start[i1] == 'R' && i1 > i2 {\n                return false;\n            }\n            i1 += 1;\n            i2 += 1;\n            while i1 < n && start[i1] == '_' {\n                i1 += 1;\n            }\n            while i2 < n && target[i2] == '_' {\n                i2 += 1;\n            }\n        }\n        i1 == n && i2 == n\n    }\n}\n"})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},31503:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>a});var i=t(30758);const r={},s=i.createContext(r);function l(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);