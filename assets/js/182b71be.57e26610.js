"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[63823],{54602:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>a,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var l=i(86070),t=i(25710);const s={},r="2598.\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX",c={id:"leetcode/2501-2600/\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX",title:"2598.\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX",description:"\u94fe\u63a5\uff1a2598.\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX",source:"@site/docs/leetcode/2501-2600/2598.\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX.md",sourceDirName:"leetcode/2501-2600",slug:"/leetcode/2501-2600/\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX",permalink:"/web/site/docs/leetcode/2501-2600/\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2598,frontMatter:{},sidebar:"journal",previous:{title:"2597.\u7f8e\u4e3d\u5b50\u96c6\u7684\u6570\u76ee",permalink:"/web/site/docs/leetcode/2501-2600/\u7f8e\u4e3d\u5b50\u96c6\u7684\u6570\u76ee"},next:{title:"2600.K\u4ef6\u7269\u54c1\u7684\u6700\u5927\u548c",permalink:"/web/site/docs/leetcode/2501-2600/K\u4ef6\u7269\u54c1\u7684\u6700\u5927\u548c"}},o={},u=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{id:"2598\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927mex",children:"2598.\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX"}),"\n",(0,l.jsxs)(e.blockquote,{children:["\n",(0,l.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,l.jsx)(e.a,{href:"https://leetcode.cn/problems/smallest-missing-non-negative-integer-after-operations",children:"2598.\u6267\u884c\u64cd\u4f5c\u540e\u7684\u6700\u5927MEX"}),(0,l.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,l.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u6570\u5b66",(0,l.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u5728\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c \u4efb\u610f\u6b21 \u540e\uff0cnums \u7684\u6700\u5927 MEX \u3002"]}),"\n"]}),"\n",(0,l.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-03-19"}),"\n",(0,l.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a224ms"}),"\n",(0,l.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a117.9MB"}),"\n",(0,l.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,l.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5148\u5bf9\u6240\u6709\u6570\u5b57\u8fdb\u884c\u53d6\u6a21\u5f52\u5e76\uff0c\u518d\u4f9d\u6b21\u5bfb\u627e\u3002"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int findSmallestInteger(vector<int>& nums, int value) {\n        unordered_map<int,int> m;\n        for (auto &num: nums) m[(num % value + value) % value]++;\n        for (int i = 0; ;i++) {\n            if (m[i%value]) m[i%value]--;\n            else return i;\n        }\n        return 0;\n\n    }\n};\n"})}),"\n",(0,l.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-03-19"}),"\n",(0,l.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a356ms"}),"\n",(0,l.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a35.3MB"}),"\n",(0,l.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,l.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def findSmallestInteger(self, nums: List[int], value: int) -> int:\n        m = Counter()\n        for num in nums:\n            m[(num % value + value) % value] += 1\n        i = 0\n        while True:\n            if m[i % value]:\n                m[i % value] -= 1\n            else:\n                return i\n            i += 1\n"})}),"\n",(0,l.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-03-19"}),"\n",(0,l.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a56ms"}),"\n",(0,l.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.6MB"}),"\n",(0,l.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,l.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn find_smallest_integer(nums: Vec<i32>, value: i32) -> i32 {\n        let mut m = std::collections::HashMap::<i32, usize>::new();\n        for num in nums {\n            *m.entry((num % value + value) % value).or_insert(0) += 1;\n        }\n        let mut i = 0;\n        loop {\n            let item = m.get_mut(&(i % value));\n            if let Some(v) = item {\n                if *v == 0 {\n                    return i;\n                } else {\n                    *v -= 1;\n                }\n            } else {\n                return i as i32;\n            }\n            i += 1;\n        }\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(d,{...n})}):d(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var l=i(30758);const t={},s=l.createContext(t);function r(n){const e=l.useContext(s);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),l.createElement(s.Provider,{value:e},n.children)}}}]);