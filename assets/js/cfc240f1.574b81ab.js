"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[85044],{54851:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>a});var i=t(86070),s=t(31503);const l={},r="1129.\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",c={id:"leetcode/1101-1200/\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",title:"1129.\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",description:"\u94fe\u63a5\uff1a1129.\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",source:"@site/docs/leetcode/1101-1200/1129.\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84.md",sourceDirName:"leetcode/1101-1200",slug:"/leetcode/1101-1200/\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",permalink:"/docs/leetcode/1101-1200/\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1129,frontMatter:{},sidebar:"journal",previous:{title:"1128.\u7b49\u4ef7\u591a\u7c73\u8bfa\u9aa8\u724c\u5bf9\u7684\u6570\u91cf",permalink:"/docs/leetcode/1101-1200/\u7b49\u4ef7\u591a\u7c73\u8bfa\u9aa8\u724c\u5bf9\u7684\u6570\u91cf"},next:{title:"1130.\u53f6\u503c\u7684\u6700\u5c0f\u4ee3\u4ef7\u751f\u6210\u6811",permalink:"/docs/leetcode/1101-1200/\u53f6\u503c\u7684\u6700\u5c0f\u4ee3\u4ef7\u751f\u6210\u6811"}},o={},a=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"1129\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84",children:"1129.\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/shortest-path-with-alternating-colors",children:"1129.\u989c\u8272\u4ea4\u66ff\u7684\u6700\u77ed\u8def\u5f84"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u56fe",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 answer\uff0c\u5176\u4e2d answer[X] \u662f\u4ece\u8282\u70b9 0 \u5230\u8282\u70b9 X \u7684\u7ea2\u8272\u8fb9\u548c\u84dd\u8272\u8fb9\u4ea4\u66ff\u51fa\u73b0\u7684\u6700\u77ed\u8def\u5f84\u7684\u957f\u5ea6\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-02"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a24ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a14.2MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","bfs\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:"struct Node {\n    vector<int> next[2];\n};\ntypedef pair<int, int> pii;\nclass Solution {\npublic:\n    vector<int> shortestAlternatingPaths(int n, vector<vector<int>>& redEdges, vector<vector<int>>& blueEdges) {\n        vector<int> ans(n, -1);\n        ans[0] = 0;\n        vector<vector<bool>> cache(2, vector<bool>(n, false));\n        vector<Node> list(n);\n        for (auto &item : redEdges) list[item[0]].next[0].push_back(item[1]);\n        for (auto &item : blueEdges) list[item[0]].next[1].push_back(item[1]);\n        queue<pii> q;\n        q.push(make_pair(0, -1));\n        int l = 0, size = 1;\n        while (q.size()) {\n            pii cur = q.front();\n            q.pop();\n            for (int i = 0; i < 2; i++) {\n                if (cur.second == i) continue;\n                for (auto &next : list[cur.first].next[i]) {\n                    if (cache[i][next]) continue;\n                    cache[i][next] = true;\n                    if (ans[next] == -1) ans[next] = l + 1;\n                    q.push(make_pair(next, i));\n                }\n            }\n            if (--size == 0) size = q.size(), l++;\n        }\n        return ans;\n    }\n};\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-02"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a52ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.2MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"from queue import Queue\nclass Node:\n    def __init__(self) -> None:\n        self.next = [[] for _ in range(2)]\nclass Solution:\n    def shortestAlternatingPaths(self, n: int, redEdges: List[List[int]], blueEdges: List[List[int]]) -> List[int]:\n        ans = [-1] * n\n        ans[0] = 0\n        cache = [[False] * n for _ in range(2)]\n        list = [Node() for _ in range(n)]\n        for [v1, v2] in redEdges:\n            list[v1].next[0].append(v2)\n        for [v1, v2] in blueEdges:\n            list[v1].next[1].append(v2)\n        q = Queue()\n        q.put((0, -1))\n        l, size = 0, 1\n        while not q.empty():\n            (node, color) = q.get()\n            size -= 1\n            for i in range(2):\n                if color == i:\n                    continue\n                for val in list[node].next[i]:\n                    if cache[i][val]:\n                        continue\n                    cache[i][val] = True\n                    if ans[val] == -1:\n                        ans[val] = l + 1\n                    q.put((val, i))\n            if size == 0:\n                size = q.qsize()\n                l += 1\n        return ans\n"})}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-02"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.3MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"#[derive(Clone)]\nstruct Node {\n    next: Vec<Vec<i32>>,\n}\nimpl Node {\n    fn new() -> Self {\n        Self {\n            next: vec![vec![]; 2],\n        }\n    }\n}\nimpl Solution {\n    pub fn shortest_alternating_paths(\n        n: i32,\n        red_edges: Vec<Vec<i32>>,\n        blue_edges: Vec<Vec<i32>>,\n    ) -> Vec<i32> {\n        let n = n as usize;\n        let mut ans = vec![-1; n];\n        ans[0] = 0;\n        let mut cache = vec![vec![false; n]; 2];\n        let mut list = vec![Node::new(); n];\n        for item in red_edges {\n            list[item[0] as usize].next[0].push(item[1]);\n        }\n        for item in blue_edges {\n            list[item[0] as usize].next[1].push(item[1]);\n        }\n        use std::collections::VecDeque;\n        let mut q = VecDeque::<(usize, usize)>::new();\n        q.push_back((0, 2));\n        let (mut l, mut size) = (0, 1);\n        while !q.is_empty() {\n            let (node, color) = q.pop_front().unwrap();\n            for i in 0..2 {\n                if color == i {\n                    continue;\n                }\n                for next in list[node].next[i].iter() {\n                    let next = *next as usize;\n                    if cache[i][next] {\n                        continue;\n                    }\n                    cache[i][next] = true;\n                    if ans[next] == -1 {\n                        ans[next] = l + 1;\n                    }\n                    q.push_back((next, i));\n                }\n            }\n            size -= 1;\n            if size == 0 {\n                size = q.len();\n                l += 1\n            }\n        }\n        ans\n    }\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},31503:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var i=t(30758);const s={},l=i.createContext(s);function r(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);