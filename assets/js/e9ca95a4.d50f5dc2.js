"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[50860],{58196:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>a,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var t=s(86070),r=s(25710);const o={},i="979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",l={id:"leetcode/901-1000/\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",title:"979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",description:"\u94fe\u63a5\uff1a979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",source:"@site/docs/leetcode/901-1000/979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01.md",sourceDirName:"leetcode/901-1000",slug:"/leetcode/901-1000/\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",permalink:"/docs/leetcode/901-1000/\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:979,frontMatter:{},sidebar:"journal",previous:{title:"978.\u6700\u957f\u6e4d\u6d41\u5b50\u6570\u7ec4",permalink:"/docs/leetcode/901-1000/\u6700\u957f\u6e4d\u6d41\u5b50\u6570\u7ec4"},next:{title:"980.\u4e0d\u540c\u8def\u5f84III",permalink:"/docs/leetcode/901-1000/\u4e0d\u540c\u8def\u5f84III"}},d={},u=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"979\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01",children:"979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/distribute-coins-in-binary-tree",children:"979.\u5728\u4e8c\u53c9\u6811\u4e2d\u5206\u914d\u786c\u5e01"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u5b9a\u4e00\u4e2a\u6709 N \u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9 root\uff0c\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u90fd\u5bf9\u5e94\u6709 node.val \u679a\u786c\u5e01\uff0c\u5e76\u4e14\u603b\u5171\u6709 N \u679a\u786c\u5e01\u3002\u8fd4\u56de\u4f7f\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u53ea\u6709\u4e00\u679a\u786c\u5e01\u6240\u9700\u7684\u79fb\u52a8\u6b21\u6570\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-07-25"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a76ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a41.7MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5206\u522b\u7edf\u8ba1\u6bcf\u4e2a\u5b50\u8282\u70b9\u8fdb\u884c\u9012\u5f52\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"function distributeCoins(root: TreeNode | null): number {\n  return get()[0];\n  function get(node = root): [number, number, number] {\n    if (node === null) return [0, 0, 0];\n    let ans = 0;\n    let nodeCount = 1;\n    let coinCount = node.val;\n    let [subAns, subNodeCount, subCoinCount] = get(node.left);\n    ans += subAns + Math.abs(subNodeCount - subCoinCount);\n    nodeCount += subNodeCount;\n    coinCount += subCoinCount;\n    [subAns, subNodeCount, subCoinCount] = get(node.right);\n    ans += subAns + Math.abs(subNodeCount - subCoinCount);\n    nodeCount += subNodeCount;\n    coinCount += subCoinCount;\n    return [ans, nodeCount, coinCount];\n  }\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-14"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a13.5MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dfs\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"#define X first\n#define Y second\n#define pii pair<int, int>\nclass Solution {\npublic:\n    int distributeCoins(TreeNode* root) {\n        int res = 0;\n        function<pii(TreeNode*)> dfs = [&](TreeNode *node) {\n            if (!node) return make_pair(0, 0);\n            auto l = dfs(node->left), r = dfs(node->right);\n            int nsum = l.X + r.X + 1, csum = l.Y + r.Y + node->val;\n            res += abs(nsum - csum);\n            return make_pair(nsum, csum);\n        };\n        dfs(root);\n        return res;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-14"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a52ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def distributeCoins(self, root: Optional[TreeNode]) -> int:\n        res = 0\n\n        def dfs(node: Optional[TreeNode]) -> Tuple[int, int]:\n            nonlocal res\n            if not node:\n                return (0, 0)\n            l = dfs(node.left)\n            r = dfs(node.right)\n            nsum = l[0] + r[0] + 1\n            csum = l[1] + r[1] + node.val\n            res += abs(nsum-csum)\n            return (nsum, csum)\n\n        dfs(root)\n        return res\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-14"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"use std::cell::RefCell;\nuse std::rc::Rc;\nimpl Solution {\n    pub fn distribute_coins(root: Option<Rc<RefCell<TreeNode>>>) -> i32 {\n        let mut res = 0;\n        fn dfs(res: &mut i32, node: &Option<Rc<RefCell<TreeNode>>>) -> (i32, i32) {\n            match node {\n                None => (0, 0),\n                Some(node) => {\n                    let node_ref = node.as_ref().borrow();\n                    let l = dfs(res, &node_ref.left);\n                    let r = dfs(res, &node_ref.right);\n                    let nsum = l.0 + r.0 + 1;\n                    let csum = l.1 + r.1 + node_ref.val;\n                    *res += (nsum - csum).abs();\n                    (nsum, csum)\n                }\n            }\n        }\n        dfs(&mut res, &root);\n        return res;\n    }\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},25710:(n,e,s)=>{s.d(e,{R:()=>i,x:()=>l});var t=s(30758);const r={},o=t.createContext(r);function i(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);