"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[94886],{39371:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=i(86070),t=i(31503);const r={},l="1572.\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",c={id:"leetcode/1501-1600/\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",title:"1572.\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",description:"\u94fe\u63a5\uff1a1572.\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",source:"@site/docs/leetcode/1501-1600/1572.\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c.md",sourceDirName:"leetcode/1501-1600",slug:"/leetcode/1501-1600/\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",permalink:"/docs/leetcode/1501-1600/\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1572,frontMatter:{},sidebar:"journal",previous:{title:"1553.\u5403\u6389N\u4e2a\u6a58\u5b50\u7684\u6700\u5c11\u5929\u6570",permalink:"/docs/leetcode/1501-1600/\u5403\u6389N\u4e2a\u6a58\u5b50\u7684\u6700\u5c11\u5929\u6570"},next:{title:"1574.\u5220\u9664\u6700\u77ed\u7684\u5b50\u6570\u7ec4\u4f7f\u5269\u4f59\u6570\u7ec4\u6709\u5e8f",permalink:"/docs/leetcode/1501-1600/\u5220\u9664\u6700\u77ed\u7684\u5b50\u6570\u7ec4\u4f7f\u5269\u4f59\u6570\u7ec4\u6709\u5e8f"}},o={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"1572\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c",children:"1572.\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/matrix-diagonal-sum",children:"1572.\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aEasy",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u77e9\u9635",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u6b63\u65b9\u5f62\u77e9\u9635 mat\uff0c\u8bf7\u4f60\u8fd4\u56de\u77e9\u9635\u5bf9\u89d2\u7ebf\u5143\u7d20\u7684\u548c\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-11"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a12ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a10.8MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\uff0c\u53ea\u8bb0\u5f55\u6700\u5c0f\u503c\u548c\u7b2c\u4e8c\u5c0f\u503c\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int diagonalSum(vector<vector<int>>& mat) {\n        int n = mat.size(), res = 0;\n        for (int i = 0; i < n; i++) {\n            res += mat[i][i] + mat[i][n - i - 1];\n            if (i == n - i - 1) res -= mat[i][i];\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-11"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a44ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.88MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def diagonalSum(self, mat: List[List[int]]) -> int:\n        n = len(mat)\n        res = 0\n        for i in range(n):\n            res += mat[i][i] + mat[i][n - i - 1]\n            if i == n - i - 1:\n                res -= mat[i][i]\n        return res\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-11"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.13MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn diagonal_sum(mat: Vec<Vec<i32>>) -> i32 {\n        mat.into_iter().enumerate().fold(0, |mut sum, (i, row)| {\n            sum += row[i] + row[row.len() - 1 - i];\n            if i == row.len() - 1 - i {\n                sum -= row[i];\n            }\n            sum\n        })\n    }\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>c});var s=i(30758);const t={},r=s.createContext(t);function l(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);