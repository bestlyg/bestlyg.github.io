"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[49349],{70580:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var t=i(86070),s=i(25710);const r={},c="547.\u7701\u4efd\u6570\u91cf",l={id:"leetcode/501-600/\u7701\u4efd\u6570\u91cf",title:"547.\u7701\u4efd\u6570\u91cf",description:"\u94fe\u63a5\uff1a547.\u7701\u4efd\u6570\u91cf",source:"@site/docs/leetcode/501-600/547.\u7701\u4efd\u6570\u91cf.md",sourceDirName:"leetcode/501-600",slug:"/leetcode/501-600/\u7701\u4efd\u6570\u91cf",permalink:"/web/site/docs/leetcode/501-600/\u7701\u4efd\u6570\u91cf",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:547,frontMatter:{},sidebar:"journal",previous:{title:"543.\u4e8c\u53c9\u6811\u7684\u76f4\u5f84",permalink:"/web/site/docs/leetcode/501-600/\u4e8c\u53c9\u6811\u7684\u76f4\u5f84"},next:{title:"551.\u5b66\u751f\u51fa\u52e4\u8bb0\u5f55I",permalink:"/web/site/docs/leetcode/501-600/\u5b66\u751f\u51fa\u52e4\u8bb0\u5f55I"}},d={},o=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - typescript",id:"\u9898\u89e3-2---typescript",level:2},{value:"\u9898\u89e3 3 - javascript",id:"\u9898\u89e3-3---javascript",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"547\u7701\u4efd\u6570\u91cf",children:"547.\u7701\u4efd\u6570\u91cf"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/number-of-provinces",children:"547.\u7701\u4efd\u6570\u91cf"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e76\u67e5\u96c6\u3001\u56fe",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5728\u4e00\u4e2a\u7531\u5c0f\u5199\u5b57\u6bcd\u6784\u6210\u7684\u5b57\u7b26\u4e32 s \u4e2d\uff0c\u5305\u542b\u7531\u4e00\u4e9b\u8fde\u7eed\u7684\u76f8\u540c\u5b57\u7b26\u6240\u6784\u6210\u7684\u5206\u7ec4\u3002\u627e\u5230\u6bcf\u4e00\u4e2a \u8f83\u5927\u5206\u7ec4 \u7684\u533a\u95f4\uff0c\u6309\u8d77\u59cb\u4f4d\u7f6e\u4e0b\u6807\u9012\u589e\u987a\u5e8f\u6392\u5e8f\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u3002\u6709 n \u4e2a\u57ce\u5e02\uff0c\u5176\u4e2d\u4e00\u4e9b\u5f7c\u6b64\u76f8\u8fde\uff0c\u53e6\u4e00\u4e9b\u6ca1\u6709\u76f8\u8fde\u3002\u5982\u679c\u57ce\u5e02 a \u4e0e\u57ce\u5e02 b \u76f4\u63a5\u76f8\u8fde\uff0c\u4e14\u57ce\u5e02 b \u4e0e\u57ce\u5e02 c \u76f4\u63a5\u76f8\u8fde\uff0c\u90a3\u4e48\u57ce\u5e02 a \u4e0e\u57ce\u5e02 c \u95f4\u63a5\u76f8\u8fde\u3002\u8fd4\u56de\u77e9\u9635\u4e2d \u7701\u4efd \u7684\u6570\u91cf\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-01-07"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a92ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a41.1MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"function findCircleNum(isConnected: number[][]): number {\n  const set = new Set<number>();\n  let ans = 0;\n  const len = isConnected.length;\n  const find = (index: number): void => {\n    for (let i = 0; i < len; i++) {\n      if (isConnected[i][index] === 1 && !set.has(i)) {\n        set.add(i);\n        find(i);\n      }\n    }\n  };\n  for (let i = 0; i < len; i++) {\n    if (!set.has(i)) {\n      ans++;\n      find(i);\n    }\n  }\n  return ans;\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---typescript",children:"\u9898\u89e3 2 - typescript"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-04-30"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a92ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a40.7MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5e76\u67e5\u96c6\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"class UnionFind {\n  elements: number[];\n  constructor(public size: number) {\n    this.elements = new Array(size).fill(0).map((_, i) => i);\n  }\n  same(v1: number, v2: number): boolean {\n    return this.find(v1) === this.find(v2);\n  }\n  find(v: number): number {\n    return v === this.elements[v] ? v : (this.elements[v] = this.find(this.elements[v]));\n  }\n  union(v1: number, v2: number): void {\n    const e1 = this.find(v1);\n    const e2 = this.find(v2);\n    if (e1 !== e2) {\n      this.elements[e1] = e2;\n      this.size--;\n    }\n  }\n}\n\nfunction findCircleNum(isConnected: number[][]): number {\n  const len = isConnected.length;\n  const uf = new UnionFind(len);\n  for (let i = 0; i < len; i++) {\n    const connect = isConnected[i];\n    for (let j = 0; j < len; j++) {\n      connect[j] === 1 && uf.union(i, j);\n    }\n  }\n  return uf.size;\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---javascript",children:"\u9898\u89e3 3 - javascript"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-12-04"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a36ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.9MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5e76\u67e5\u96c6\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"typedef struct unionfind\n{\n    int *father, len, size;\n} UnionFind;\nUnionFind *unionfind_create(int len)\n{\n    UnionFind *uf = (UnionFind *)malloc(sizeof(UnionFind));\n    uf->size = uf->len = len;\n    uf->father = (int *)malloc(sizeof(int) * len);\n    for (int i = 0; i < len; i++)\n        uf->father[i] = i;\n    return uf;\n}\nvoid unionfind_free(UnionFind *uf)\n{\n    free(uf->father);\n    free(uf);\n}\nint unionfind_find(UnionFind *uf, int data)\n{\n    return uf->father[data] = uf->father[data] == data ? data : unionfind_find(uf, uf->father[data]);\n}\nvoid unionfind_union(UnionFind *uf, int data1, int data2)\n{\n    int p1 = unionfind_find(uf, data1), p2 = unionfind_find(uf, data2);\n    if (p1 == p2) return ;\n    uf->size--;\n    uf->father[p1] = p2;\n}\nint findCircleNum(int** isConnected, int isConnectedSize, int* isConnectedColSize){\n    UnionFind *uf = unionfind_create(isConnectedSize);\n    for (int i = 0; i < isConnectedSize; i++) {\n        for (int j = 0; j < isConnectedSize; j++) {\n            if (isConnected[i][j]) unionfind_union(uf, i, j);\n        }\n    }\n    return uf->size;\n}\n"})})]})}function a(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>c,x:()=>l});var t=i(30758);const s={},r=t.createContext(s);function c(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);