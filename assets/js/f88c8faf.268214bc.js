"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[85713],{26780:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>t,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=r(86070),a=r(31503);const i={},d="1073.\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",l={id:"leetcode/1001-1100/\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",title:"1073.\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",description:"\u94fe\u63a5\uff1a1073.\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",source:"@site/docs/leetcode/1001-1100/1073.\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0.md",sourceDirName:"leetcode/1001-1100",slug:"/leetcode/1001-1100/\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",permalink:"/docs/leetcode/1001-1100/\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1073,frontMatter:{},sidebar:"journal",previous:{title:"1072.\u6309\u5217\u7ffb\u8f6c\u5f97\u5230\u6700\u5927\u503c\u7b49\u884c\u6570",permalink:"/docs/leetcode/1001-1100/\u6309\u5217\u7ffb\u8f6c\u5f97\u5230\u6700\u5927\u503c\u7b49\u884c\u6570"},next:{title:"1074.\u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf",permalink:"/docs/leetcode/1001-1100/\u5143\u7d20\u548c\u4e3a\u76ee\u6807\u503c\u7684\u5b50\u77e9\u9635\u6570\u91cf"}},t={},c=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function p(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"1073\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0",children:"1073.\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/adding-two-negabinary-numbers",children:"1073.\u8d1f\u4e8c\u8fdb\u5236\u6570\u76f8\u52a0"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u6570\u5b66",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u51fa\u57fa\u6570\u4e3a -2 \u7684\u4e24\u4e2a\u6570 arr1 \u548c arr2\uff0c\u8fd4\u56de\u4e24\u6570\u76f8\u52a0\u7684\u7ed3\u679c\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-18"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a8ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a19.1MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u7edf\u4e00\u4e24\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u90fd1\uff0c\u90a3\u53ef\u4ee5\u62b5\u6d88\u4e0b\u4e00\u4f4d\u76841\uff0c\u5982\u679c\u8be5\u4f4d\u9700\u8981\u589e\u52a01\uff0c\u53ef\u4ee5\u5728\u8be5\u4f4d\u52a01\uff0c\u4e14\u4e0b\u4e00\u4f4d\u52a01\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<int> addNegabinary(vector<int>& arr1, vector<int>& arr2) {\n        reverse(arr1.begin(), arr1.end());\n        reverse(arr2.begin(), arr2.end());\n        for (int i = 0; i < max(arr1.size(), arr2.size()); i++) {\n            if (i == arr1.size()) arr1.push_back(0);\n            if (i == arr2.size()) arr2.push_back(0);\n        }\n        vector<int> res;\n        for (int i = 0, add = 0; i < arr1.size(); i++) {\n            switch (arr1[i] + arr2[i] + add) {\n                case -1: res.push_back(1); add = 1; break;\n                case 0: res.push_back(0); add = 0; break;\n                case 1: res.push_back(1); add = 0; break;\n                case 2: res.push_back(0); add = -1; break;\n                case 3: res.push_back(1); add = -1; break;\n            }\n            if (i == arr1.size() - 1 && add != 0) arr1.push_back(0), arr2.push_back(0);\n        }\n        while (res.size() > 1 && res.back() == 0) res.pop_back();\n        reverse(res.begin(), res.end());\n        return res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-18"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a48ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.3MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def addNegabinary(self, arr1: List[int], arr2: List[int]) -> List[int]:\n        arr1.reverse()\n        arr2.reverse()\n        print(arr1, arr2)\n        for i in range(max(len(arr1), len(arr2))):\n            if i == len(arr1):\n                arr1.append(0)\n            if i == len(arr2):\n                arr2.append(0)\n        res = []\n        i = add = 0\n        while i < len(arr1):\n            match arr1[i] + arr2[i] + add:\n                case -1:\n                    res.append(1)\n                    add = 1\n                case 0:\n                    res.append(0)\n                    add = 0\n                case 1:\n                    res.append(1)\n                    add = 0\n                case 2:\n                    res.append(0)\n                    add = -1\n                case 3:\n                    res.append(1)\n                    add = -1\n            if i == len(arr1) - 1 and add != 0:\n                arr1.append(0)\n                arr2.append(0)\n            i += 1\n        while len(res) > 1 and res[-1] == 0:\n            res.pop()\n        res.reverse()\n        return res\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-18"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn add_negabinary(mut arr1: Vec<i32>, mut arr2: Vec<i32>) -> Vec<i32> {\n        arr1.reverse();\n        arr2.reverse();\n        for i in 0..arr1.len().max(arr2.len()) {\n            if i == arr1.len() {\n                arr1.push(0);\n            }\n            if i == arr2.len() {\n                arr2.push(0);\n            }\n        }\n        let mut res = vec![];\n        let (mut i, mut add) = (0, 0);\n        while i < arr1.len() {\n            match arr1[i] + arr2[i] + add {\n                -1 => {\n                    res.push(1);\n                    add = 1;\n                }\n                0 => {\n                    res.push(0);\n                    add = 0;\n                }\n                1 => {\n                    res.push(1);\n                    add = 0;\n                }\n                2 => {\n                    res.push(0);\n                    add = -1;\n                }\n                3 => {\n                    res.push(1);\n                    add = -1;\n                }\n                _ => {}\n            }\n            if i == arr1.len() - 1 && add != 0 {\n                arr1.push(0);\n                arr2.push(0);\n            }\n            i += 1;\n        }\n        while res.len() > 1 && *res.last().unwrap() == 0 {\n            res.pop();\n        }\n        res.reverse();\n        res\n    }\n}\n"})})]})}function o(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},31503:(n,e,r)=>{r.d(e,{R:()=>d,x:()=>l});var s=r(30758);const a={},i=s.createContext(a);function d(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:d(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);