"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[44625],{22341:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>j,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var c=i(86070),t=i(25710);const r={},l="1139.\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",s={id:"leetcode/1101-1200/\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",title:"1139.\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",description:"\u94fe\u63a5\uff1a1139.\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",source:"@site/docs/leetcode/1101-1200/1139.\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62.md",sourceDirName:"leetcode/1101-1200",slug:"/leetcode/1101-1200/\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",permalink:"/docs/leetcode/1101-1200/\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1139,frontMatter:{},sidebar:"journal",previous:{title:"1138.\u5b57\u6bcd\u677f\u4e0a\u7684\u8def\u5f84",permalink:"/docs/leetcode/1101-1200/\u5b57\u6bcd\u677f\u4e0a\u7684\u8def\u5f84"},next:{title:"1140.\u77f3\u5b50\u6e38\u620fII",permalink:"/docs/leetcode/1101-1200/\u77f3\u5b50\u6e38\u620fII"}},o={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"1139\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62",children:"1139.\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62"})}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,c.jsx)(e.a,{href:"https://leetcode.cn/problems/largest-1-bordered-square",children:"1139.\u6700\u5927\u7684\u4ee51\u4e3a\u8fb9\u754c\u7684\u6b63\u65b9\u5f62"}),(0,c.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,c.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u77e9\u9635",(0,c.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u7531\u82e5\u5e72 0 \u548c 1 \u7ec4\u6210\u7684\u4e8c\u7ef4\u7f51\u683c grid\uff0c\u8bf7\u4f60\u627e\u51fa\u8fb9\u754c\u5168\u90e8\u7531 1 \u7ec4\u6210\u7684\u6700\u5927 \u6b63\u65b9\u5f62 \u5b50\u7f51\u683c\uff0c\u5e76\u8fd4\u56de\u8be5\u5b50\u7f51\u683c\u4e2d\u7684\u5143\u7d20\u6570\u91cf\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de 0\u3002"]}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-17"}),"\n",(0,c.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a12ms"}),"\n",(0,c.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a10.6MB"}),"\n",(0,c.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,c.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u7684\u6700\u5927\u5ef6\u957f\u540e\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-cpp",children:"#define MAX 105\nclass Solution {\npublic:\n    int largest1BorderedSquare(vector<vector<int>>& grid) {\n        int n = grid.size(), m = grid[0].size();\n        // 0: l, 1: r, 2 : t, 3: b\n        int cache[MAX][MAX][4] = {0}, cnt;\n        for (int i = 0; i < n; i++) {\n            cnt = 0;\n            for (int j = 0; j < m; j++) {\n                cache[i][j][0] = cnt;\n                cnt = grid[i][j] == 1 ? cnt + 1 : 0;\n            }\n            cnt = 0;\n            for (int j = m - 1; j >= 0; j--) {\n                cache[i][j][1] = cnt;\n                cnt = grid[i][j] == 1 ? cnt + 1 : 0;\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            cnt = 0;\n            for (int i = 0; i < n; i++) {\n                cache[i][j][2] = cnt;\n                cnt = grid[i][j] == 1 ? cnt + 1 : 0;\n            }\n            cnt = 0;\n            for (int i = n - 1; i >= 0; i--) {\n                cache[i][j][3] = cnt;\n                cnt = grid[i][j] == 1 ? cnt + 1 : 0;\n            }\n        }\n\n        cnt = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (grid[i][j] == 0) continue;\n                cnt = max(cnt, 1);\n                for (int k = 1; k <= min(cache[i][j][1], cache[i][j][3]); k++) {\n                    if (cache[i + k][j][1] >= k && cache[i][j + k][3] >= k) cnt = max(cnt, (int)pow(k + 1, 2));\n                }\n            }\n        }\n\n        return cnt;\n    }\n};\n"})}),"\n",(0,c.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-17"}),"\n",(0,c.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a272ms"}),"\n",(0,c.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.3MB"}),"\n",(0,c.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,c.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def largest1BorderedSquare(self, grid: List[List[int]]) -> int:\n        n, m, cnt = len(grid), len(grid[0]), 0\n        MAX = 105\n        cache = [[[0] * 4 for _ in range(MAX)] for _ in range(MAX)]\n        for i in range(n):\n            cnt = 0\n            for j in range(m):\n                cache[i][j][0] = cnt\n                cnt = cnt + 1 if grid[i][j] == 1 else 0\n            cnt = 0\n            for j in range(m - 1, -1, -1):\n                cache[i][j][1] = cnt\n                cnt = cnt + 1 if grid[i][j] == 1 else 0\n        for j in range(m):\n            cnt = 0\n            for i in range(n):\n                cache[i][j][2] = cnt\n                cnt = cnt + 1 if grid[i][j] == 1 else 0\n            cnt = 0\n            for i in range(n - 1, -1, -1):\n                cache[i][j][3] = cnt\n                cnt = cnt + 1 if grid[i][j] == 1 else 0\n        cnt = 0\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] == 0:\n                    continue\n                cnt = max(cnt, 1)\n                for k in range(1, min(cache[i][j][1], cache[i][j][3]) + 1):\n                    if cache[i + k][j][1] >= k and cache[i][j + k][3] >= k:\n                        cnt = max(cnt, pow(k + 1, 2))\n        return cnt\n"})}),"\n",(0,c.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-02-17"}),"\n",(0,c.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,c.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.5MB"}),"\n",(0,c.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,c.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn largest1_bordered_square(grid: Vec<Vec<i32>>) -> i32 {\n        const MAX: usize = 105;\n        let n = grid.len();\n        let m = grid[0].len();\n        let mut cnt = 0;\n        let mut cache = [[[0; 4]; MAX]; MAX];\n        for i in 0..n {\n            cnt = 0;\n            for j in 0..m {\n                cache[i][j][0] = cnt;\n                cnt = if grid[i][j] == 1 { cnt + 1 } else { 0 };\n            }\n            cnt = 0;\n            for j in (0..m).rev() {\n                cache[i][j][1] = cnt;\n                cnt = if grid[i][j] == 1 { cnt + 1 } else { 0 };\n            }\n        }\n        for j in 0..m {\n            cnt = 0;\n            for i in 0..n {\n                cache[i][j][2] = cnt;\n                cnt = if grid[i][j] == 1 { cnt + 1 } else { 0 };\n            }\n            cnt = 0;\n            for i in (0..n).rev() {\n                cache[i][j][3] = cnt;\n                cnt = if grid[i][j] == 1 { cnt + 1 } else { 0 };\n            }\n        }\n        cnt = 0;\n        for i in 0..n {\n            for j in 0..m {\n                if grid[i][j] == 0 {\n                    continue;\n                }\n                cnt = cnt.max(1);\n                for k in 1..=cache[i][j][1].min(cache[i][j][3]) {\n                    if cache[i + k][j][1] >= k && cache[i][j + k][3] >= k {\n                        cnt = cnt.max((k + 1).pow(2));\n                    }\n                }\n            }\n        }\n        cnt as i32\n    }\n}\n"})})]})}function j(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(a,{...n})}):a(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>s});var c=i(30758);const t={},r=c.createContext(t);function l(n){const e=c.useContext(r);return c.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),c.createElement(r.Provider,{value:e},n.children)}}}]);