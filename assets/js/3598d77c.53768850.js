"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[52141],{65086:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var t=s(86070),i=s(25710);const r={},l="2546.\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",c={id:"leetcode/2501-2600/\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",title:"2546.\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",description:"\u94fe\u63a5\uff1a2546.\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",source:"@site/docs/leetcode/2501-2600/2546.\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49.md",sourceDirName:"leetcode/2501-2600",slug:"/leetcode/2501-2600/\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",permalink:"/docs/leetcode/2501-2600/\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2546,frontMatter:{},sidebar:"journal",previous:{title:"2545.\u6839\u636e\u7b2cK\u573a\u8003\u8bd5\u7684\u5206\u6570\u6392\u5e8f",permalink:"/docs/leetcode/2501-2600/\u6839\u636e\u7b2cK\u573a\u8003\u8bd5\u7684\u5206\u6570\u6392\u5e8f"},next:{title:"2547.\u62c6\u5206\u6570\u7ec4\u7684\u6700\u5c0f\u4ee3\u4ef7",permalink:"/docs/leetcode/2501-2600/\u62c6\u5206\u6570\u7ec4\u7684\u6700\u5c0f\u4ee3\u4ef7"}},o={},a=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"2546\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49",children:"2546.\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/apply-bitwise-operations-to-make-strings-equal",children:"2546.\u6267\u884c\u9010\u4f4d\u8fd0\u7b97\u4f7f\u5b57\u7b26\u4e32\u76f8\u7b49"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u4f4d\u8fd0\u7b97\u3001\u5b57\u7b26\u4e32",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5982\u679c\u53ef\u4ee5\u4f7f s \u7b49\u4e8e target \uff0c\u8fd4\u56de true \uff0c\u5426\u5219\uff0c\u8fd4\u56de false \u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-22"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a16ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a12.8MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5224\u65ad\u662f\u5426\u5b58\u572811\uff0c10\u548c01\u7684\u60c5\u51b5\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool makeStringsEqual(string s, string target) {\n        if (s == target) return true;\n        int n = s.size();\n        int s_has1 = 0, t_has1 = 0, has11 = 0, has01 = 0, has10 = 0;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '1' && target[i] == '1') return true;\n            if (s[i] == '0' && target[i] == '1') {\n                 has01++;\n                 if (has10) return true;\n            }\n            if (s[i] == '1' && target[i] == '0') {\n                has10++;\n                if (has01) return true;\n            }\n        }\n        return false;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-22"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a24ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a12.8MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u90fd\u5b58\u57281\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool makeStringsEqual(string s, string target) {\n        int n = s.size();\n        bool s1 = false, t1 = false;\n        for (int i = 0; i < n; i++) {\n            if (s[i] == '1') s1 = true;\n            if (target[i] == '1') t1 = true;\n            if (s1 && t1) return true;\n        }\n        return s == target;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-22"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a36ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.7MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def makeStringsEqual(self, s: str, target: str) -> bool:\n        return ('1' in s) and ('1' in target) or s == target\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-01-22"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.6MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn make_strings_equal(s: String, target: String) -> bool {\n        s.contains('1') && target.contains('1') || s == target\n    }\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},25710:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>c});var t=s(30758);const i={},r=t.createContext(i);function l(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);