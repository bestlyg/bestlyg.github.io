"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[73987],{78145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>x,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var r=t(86070),s=t(25710);const c={},o="391.\u5b8c\u7f8e\u77e9\u5f62",a={id:"leetcode/301-400/\u5b8c\u7f8e\u77e9\u5f62",title:"391.\u5b8c\u7f8e\u77e9\u5f62",description:"\u94fe\u63a5\uff1a391.\u5b8c\u7f8e\u77e9\u5f62",source:"@site/docs/leetcode/301-400/391.\u5b8c\u7f8e\u77e9\u5f62.md",sourceDirName:"leetcode/301-400",slug:"/leetcode/301-400/\u5b8c\u7f8e\u77e9\u5f62",permalink:"/docs/leetcode/301-400/\u5b8c\u7f8e\u77e9\u5f62",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:391,frontMatter:{},sidebar:"journal",previous:{title:"390.\u6d88\u9664\u6e38\u620f",permalink:"/docs/leetcode/301-400/\u6d88\u9664\u6e38\u620f"},next:{title:"392.\u5224\u65ad\u5b50\u5e8f\u5217",permalink:"/docs/leetcode/301-400/\u5224\u65ad\u5b50\u5e8f\u5217"}},i={},l=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"391\u5b8c\u7f8e\u77e9\u5f62",children:"391.\u5b8c\u7f8e\u77e9\u5f62"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(n.a,{href:"https://leetcode.cn/problems/perfect-rectangle",children:"391.\u5b8c\u7f8e\u77e9\u5f62"}),(0,r.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,r.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u626b\u63cf\u7ebf",(0,r.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5982\u679c\u6240\u6709\u77e9\u5f62\u4e00\u8d77\u7cbe\u786e\u8986\u76d6\u4e86\u67d0\u4e2a\u77e9\u5f62\u533a\u57df\uff0c\u5219\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-11-16"}),"\n",(0,r.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a272ms"}),"\n",(0,r.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a62.8MB"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,r.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u8ba1\u6570\u5224\u65ad\u9762\u79ef\u548c\u9876\u70b9\u91cd\u5408\u6b21\u6570\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function isRectangleCover(rectangles: number[][]): boolean {\n  /**\n           \u5b8c\u7f8e\u77e9\u5f62\u8981\u6ee1\u8db3:\n           1. \u6700\u5de6\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0a\u3001\u53f3\u4e0b\u56db\u4e2a\u9876\u70b9\u53ea\u51fa\u73b01\u6b21;\n           2. \u91cd\u5408\u9876\u70b9\u91cd\u5408\u6b21\u6570\u5fc5\u987b\u4e3a2\u30014\uff0c\u4e0d\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\n           3. \u5927\u77e9\u5f62\u9762\u79ef\u7b49\u4e8e\u5c0f\u77e9\u5f62\u9762\u79ef\u4e4b\u548c\u3002\n           */\n  type Data = { cnt: number; point: number[] };\n  const set = new Set<string>();\n  const map: Record<string, Data> = {};\n  const format = (x: number, y: number) => `${x}:${y}`;\n  const map_add = (x: number, y: number) => {\n    const formatStr = format(x, y);\n    let data = map[formatStr];\n    if (!data) map[formatStr] = data = { cnt: 0, point: [x, y] };\n    data.cnt++;\n  };\n  let sum = 0;\n  const vertex: number[] = [];\n  const is_vertex = (x: number, y: number) =>\n    (x === vertex[0] && y === vertex[1]) ||\n    (x === vertex[2] && y === vertex[3]) ||\n    (x === vertex[0] && y === vertex[3]) ||\n    (x === vertex[2] && y === vertex[1]);\n  for (const [x, y, a, b] of rectangles) {\n    const formatStr = format(x, y) + ':' + format(a, b);\n    if (set.has(formatStr)) return false;\n    set.add(formatStr);\n    if (vertex[0] === undefined || vertex[0] > x || vertex[1] > y) {\n      vertex[0] = x;\n      vertex[1] = y;\n    }\n    if (vertex[2] === undefined || vertex[2] < a || vertex[3] < b) {\n      vertex[2] = a;\n      vertex[3] = b;\n    }\n    sum += (a - x) * (b - y);\n    map_add(x, y);\n    map_add(a, b);\n    map_add(x, b);\n    map_add(a, y);\n  }\n  if ((vertex[2] - vertex[0]) * (vertex[3] - vertex[1]) !== sum) return false;\n  for (const {\n    cnt,\n    point: [x, y],\n  } of Object.values(map)) {\n    if ((cnt === 1 && !is_vertex(x, y)) || (cnt !== 1 && cnt !== 2 && cnt !== 4)) {\n      return false;\n    }\n  }\n  return true;\n}\n"})})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},25710:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(30758);const s={},c=r.createContext(s);function o(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);