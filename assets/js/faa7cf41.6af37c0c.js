"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[70454],{83592:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>a});var t=i(86070),s=i(25710);const l={},r="1090.\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",c={id:"leetcode/1001-1100/\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",title:"1090.\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",description:"\u94fe\u63a5\uff1a1090.\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",source:"@site/docs/leetcode/1001-1100/1090.\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c.md",sourceDirName:"leetcode/1001-1100",slug:"/leetcode/1001-1100/\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",permalink:"/docs/leetcode/1001-1100/\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1090,frontMatter:{},sidebar:"journal",previous:{title:"1089.\u590d\u5199\u96f6",permalink:"/docs/leetcode/1001-1100/\u590d\u5199\u96f6"},next:{title:"1091.\u4e8c\u8fdb\u5236\u77e9\u9635\u4e2d\u7684\u6700\u77ed\u8def\u5f84",permalink:"/docs/leetcode/1001-1100/\u4e8c\u8fdb\u5236\u77e9\u9635\u4e2d\u7684\u6700\u77ed\u8def\u5f84"}},o={},a=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function u(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"1090\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c",children:"1090.\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/largest-values-from-labels",children:"1090.\u53d7\u6807\u7b7e\u5f71\u54cd\u7684\u6700\u5927\u503c"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u8ba1\u6570\u3001\u6392\u5e8f",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u5b50\u96c6 s \u7684\u6700\u5927 \u5206\u6570 \u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-23"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a44ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a22.2MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5229\u7528\u5806\u627e\u51fa\u6700\u5927\u7684\u503c\u8d2a\u5fc3\u585e\u5165\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int largestValsFromLabels(vector<int>& values, vector<int>& labels, int numWanted, int useLimit) {\n        unordered_map<int, vector<int>> m;\n        unordered_map<int, int> mcnt;\n        int n = values.size();\n        for (int i = 0; i < n; i++) m[labels[i]].push_back(values[i]);\n        for (auto &item : m) sort(item.second.begin(), item.second.end());\n        auto cmp = [&](int x, int y) -> bool { return m[x].back() < m[y].back(); };\n        priority_queue<int, vector<int>, decltype(cmp)> q(cmp);\n        for (auto &item : m) q.push(item.first);\n        int res = 0;\n        for (int i = 0; i < numWanted && q.size(); i++) {\n            int idx = q.top();\n            q.pop();\n            res += m[idx].back();\n            m[idx].pop_back();\n            if (++mcnt[idx] < useLimit && m[idx].size()) q.push(idx);\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-23"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a52ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a19.3MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6392\u5e8f\u540e\u4ece\u540e\u5f80\u524d\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int largestValsFromLabels(vector<int>& values, vector<int>& labels, int numWanted, int useLimit) {\n        int n = values.size();\n        vector<int> list;\n        for (int i = 0; i < n; i++) list.push_back(i);\n        sort(list.begin(), list.end(), [&](auto &i1, auto &i2) {\n            return values[i1] < values[i2];\n        });\n        unordered_map<int, int> m;\n        int res = 0;\n        for (int i = n - 1, cnt = 0; i >= 0 && cnt < numWanted; i--) {\n            if (m[labels[list[i]]] == useLimit) continue;\n            m[labels[list[i]]] += 1;\n            res += values[list[i]];\n            cnt += 1;\n        }\n        return res;\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-23"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a60ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a19.8MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def largestValsFromLabels(self, values: List[int], labels: List[int], numWanted: int, useLimit: int) -> int:\n        n = len(values)\n        list = [i for i in range(n)]\n        list.sort(key=lambda i: values[i])\n        m = Counter()\n        res = 0\n        cnt = 0\n        for i in range(n-1, -1, -1):\n            if cnt >= numWanted:\n                break\n            if m[labels[list[i]]] == useLimit:\n                continue\n            m[labels[list[i]]] += 1\n            res += values[list[i]]\n            cnt += 1\n        return res\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-23"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.6MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"impl Solution {\npub fn largest_vals_from_labels(\n    values: Vec<i32>,\n    labels: Vec<i32>,\n    num_wanted: i32,\n    use_limit: i32,\n) -> i32 {\n    let n = values.len();\n    let mut list = vec![];\n    for i in 0..n {\n        list.push(i);\n    }\n    list.sort_by_key(|i| values[*i]);\n    let mut m = std::collections::HashMap::<i32, i32>::new();\n    let mut res = 0;\n    let mut cnt = 0;\n    for i in (0..n).rev() {\n        if cnt >= num_wanted {\n            break;\n        }\n        let item = m.entry(labels[list[i]]).or_insert(0);\n        if *item < use_limit {\n            *item += 1;\n            res += values[list[i]];\n            cnt += 1;\n        }\n    }\n    res\n}\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>c});var t=i(30758);const s={},l=t.createContext(s);function r(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);