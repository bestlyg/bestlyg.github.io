"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[45268],{56989:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=n(86070),s=n(25710);const o={},c="1008.\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",i={id:"leetcode/1001-1100/\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",title:"1008.\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",description:"\u94fe\u63a5\uff1a1008.\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",source:"@site/docs/leetcode/1001-1100/1008.\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811.md",sourceDirName:"leetcode/1001-1100",slug:"/leetcode/1001-1100/\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/docs/leetcode/1001-1100/\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1008,frontMatter:{},sidebar:"journal",previous:{title:"1006.\u7b28\u9636\u4e58",permalink:"/docs/leetcode/1001-1100/\u7b28\u9636\u4e58"},next:{title:"1009.\u5341\u8fdb\u5236\u6574\u6570\u7684\u53cd\u7801",permalink:"/docs/leetcode/1001-1100/\u5341\u8fdb\u5236\u6574\u6570\u7684\u53cd\u7801"}},l={},d=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2}];function p(e){const r={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"1008\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811",children:"1008.\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/construct-binary-search-tree-from-preorder-traversal",children:"1008.\u524d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u641c\u7d22\u6811"}),(0,t.jsx)(r.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,t.jsx)(r.br,{}),"\n","\u6807\u7b7e\uff1a\u6808\u3001\u6811\u3001\u4e8c\u53c9\u641c\u7d22\u6811\u3001\u6570\u7ec4\u3001\u4e8c\u53c9\u6811\u3001\u5355\u8c03\u6808",(0,t.jsx)(r.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u4e0e\u7ed9\u5b9a\u524d\u5e8f\u904d\u5386 preorder \u76f8\u5339\u914d\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary search tree\uff09\u7684\u6839\u7ed3\u70b9\u3002"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-08-07"}),"\n",(0,t.jsx)(r.li,{children:"\u6267\u884c\u7528\u65f6\uff1a72ms"}),"\n",(0,t.jsx)(r.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a39.6MB"}),"\n",(0,t.jsx)(r.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(r.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u83b7\u53d6\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5206\u522b\u6784\u9020\u3002"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"function bstFromPreorder(preorder: number[]): TreeNode | null {\n  const n = preorder.length;\n  if (n === 0) return null;\n  const mid = preorder[0];\n  let i = 1;\n  while (i < n && preorder[i] < mid) i++;\n  return new TreeNode(\n    mid,\n    bstFromPreorder(preorder.slice(1, i)),\n    bstFromPreorder(preorder.slice(i))\n  );\n}\n"})})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},25710:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>i});var t=n(30758);const s={},o=t.createContext(s);function c(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);