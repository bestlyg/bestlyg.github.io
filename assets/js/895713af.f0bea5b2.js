"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[91167],{50286:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var s=i(86070),r=i(31503);const t={},o="1761.\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",d={id:"leetcode/1701-1800/\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",title:"1761.\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",description:"\u94fe\u63a5\uff1a1761.\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",source:"@site/docs/leetcode/1701-1800/1761.\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570.md",sourceDirName:"leetcode/1701-1800",slug:"/leetcode/1701-1800/\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",permalink:"/docs/leetcode/1701-1800/\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1761,frontMatter:{},sidebar:"journal",previous:{title:"1760.\u888b\u5b50\u91cc\u6700\u5c11\u6570\u76ee\u7684\u7403",permalink:"/docs/leetcode/1701-1800/\u888b\u5b50\u91cc\u6700\u5c11\u6570\u76ee\u7684\u7403"},next:{title:"1763.\u6700\u957f\u7684\u7f8e\u597d\u5b50\u5b57\u7b26\u4e32",permalink:"/docs/leetcode/1701-1800/\u6700\u957f\u7684\u7f8e\u597d\u5b50\u5b57\u7b26\u4e32"}},l={},c=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"1761\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570",children:"1761.\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/minimum-degree-of-a-connected-trio-in-a-graph",children:"1761.\u4e00\u4e2a\u56fe\u4e2d\u8fde\u901a\u4e09\u5143\u7ec4\u7684\u6700\u5c0f\u5ea6\u6570"}),(0,s.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,s.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u56fe",(0,s.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8bf7\u4f60\u8fd4\u56de\u6240\u6709\u8fde\u901a\u4e09\u5143\u7ec4\u4e2d\u5ea6\u6570\u7684 \u6700\u5c0f\u503c \uff0c\u5982\u679c\u56fe\u4e2d\u6ca1\u6709\u8fde\u901a\u4e09\u5143\u7ec4\uff0c\u90a3\u4e48\u8fd4\u56de -1 \u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-31"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a1896ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a53.2MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u679a\u4e3e\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int minTrioDegree(int n, vector<vector<int>>& edges) {\n        vector<unordered_set<int>> nodes(n);\n        for (auto &edge : edges) {\n            nodes[edge[0] - 1].insert(edge[1] - 1);\n            nodes[edge[1] - 1].insert(edge[0] - 1);\n        }\n        int res = INT_MAX;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (!nodes[i].count(j)) continue;\n                for (int k = j + 1; k < n; k++) {\n                    if (!nodes[i].count(k) || !nodes[j].count(k)) continue;\n                    res = min(res, (int)nodes[i].size() + (int)nodes[j].size() + (int)nodes[k].size() - 6);\n                }\n            }\n        }\n        return res == INT_MAX ? -1 : res;\n    }\n};\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-31"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4360ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a40.23MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def minTrioDegree(self, n: int, edges: List[List[int]]) -> int:\n        nodes = [set() for _ in range(n)]\n        for [n0, n1] in edges:\n            nodes[n0-1].add(n1-1)\n            nodes[n1-1].add(n0-1)\n        res = inf\n        for i in range(n):\n            for j in range(i + 1, n):\n                if not j in nodes[i]:\n                    continue\n                for k in range(j + 1, n):\n                    if not k in nodes[i] or not k in nodes[j]:\n                        continue\n                    res = min(res, len(nodes[i]) +\n                              len(nodes[j]) + len(nodes[k]) - 6)\n        return res if res != inf else -1\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-31"}),"\n",(0,s.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a12ms"}),"\n",(0,s.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.24MB"}),"\n",(0,s.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,s.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn min_trio_degree(n: i32, edges: Vec<Vec<i32>>) -> i32 {\n        let n = n as usize;\n        let mut nodes = vec![std::collections::HashSet::new(); n];\n        for edge in edges {\n            let (n0, n1) = (edge[0] as usize - 1, edge[1] as usize - 1);\n            nodes[n0].insert(n1);\n            nodes[n1].insert(n0);\n        }\n        let mut res = i32::MAX;\n        for i in 0..n {\n            for j in i + 1..n {\n                if nodes[i].contains(&j) {\n                    for k in j + 1..n {\n                        if nodes[i].contains(&k) && nodes[j].contains(&k) {\n                            res = res\n                                .min((nodes[i].len() + nodes[j].len() + nodes[k].len() - 6) as i32)\n                        }\n                    }\n                }\n            }\n        }\n        if res == i32::MAX {\n            -1\n        } else {\n            res\n        }\n    }\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>d});var s=i(30758);const r={},t=s.createContext(r);function o(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);