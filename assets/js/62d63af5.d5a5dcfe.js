"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[61538],{96864:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=i(86070),s=i(25710);const r={},l="1054.\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",o={id:"leetcode/1001-1100/\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",title:"1054.\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",description:"\u94fe\u63a5\uff1a1054.\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",source:"@site/docs/leetcode/1001-1100/1054.\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801.md",sourceDirName:"leetcode/1001-1100",slug:"/leetcode/1001-1100/\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",permalink:"/docs/leetcode/1001-1100/\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1054,frontMatter:{},sidebar:"journal",previous:{title:"1053.\u4ea4\u6362\u4e00\u6b21\u7684\u5148\u524d\u6392\u5217",permalink:"/docs/leetcode/1001-1100/\u4ea4\u6362\u4e00\u6b21\u7684\u5148\u524d\u6392\u5217"},next:{title:"1071.\u5b57\u7b26\u4e32\u7684\u6700\u5927\u516c\u56e0\u5b50",permalink:"/docs/leetcode/1001-1100/\u5b57\u7b26\u4e32\u7684\u6700\u5927\u516c\u56e0\u5b50"}},c={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function p(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"1054\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801",children:"1054.\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(n.a,{href:"https://leetcode.cn/problems/distant-barcodes",children:"1054.\u8ddd\u79bb\u76f8\u7b49\u7684\u6761\u5f62\u7801"}),(0,t.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u8ba1\u6570\u3001\u6392\u5e8f\u3001\u5806\uff08\u4f18\u5148\u961f\u5217\uff09",(0,t.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u5728\u4e00\u4e2a\u4ed3\u5e93\u91cc\uff0c\u6709\u4e00\u6392\u6761\u5f62\u7801\uff0c\u5176\u4e2d\u7b2c i \u4e2a\u6761\u5f62\u7801\u4e3a\xa0barcodes[i]\u3002\u8bf7\u4f60\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u6761\u5f62\u7801\uff0c\u4f7f\u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u6761\u5f62\u7801\u4e0d\u80fd\u76f8\u7b49\u3002 \u4f60\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u6ee1\u8db3\u8be5\u8981\u6c42\u7684\u7b54\u6848\uff0c\u6b64\u9898\u4fdd\u8bc1\u5b58\u5728\u7b54\u6848\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-14"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a76ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a42.9MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5806\u5b58\u50a8\u6240\u6709\u7684\u503c\uff0c\u6bcf\u6b21\u62ff\u51fa\u5269\u4f59\u6b21\u6570\u6700\u591a\u7684\u4e24\u4e2a\u503c\u585e\u5165\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"#define X first\n#define Y second\nclass Solution {\npublic:\n    typedef pair<int, int> pii;\n    vector<int> rearrangeBarcodes(vector<int>& barcodes) {\n        unordered_map<int, int> m;\n        for (auto &num : barcodes) m[num]++;\n        auto cmp = [&](pii x, pii y) -> bool { return x.second < y.second; };\n        priority_queue<pii, vector<pii>, decltype(cmp)> q(cmp);\n        for (auto &item : m) q.push(item);\n        vector<int> res;\n        while (q.size() >= 2) {\n            auto item1 = q.top(); q.pop();\n            auto item2 = q.top(); q.pop();\n            if (--item1.second > 0) q.push(item1);\n            if (--item2.second > 0) q.push(item2);\n            res.push_back(item1.first);\n            res.push_back(item2.first);\n        }\n        if (q.size()) res.push_back(q.top().first);\n        return res;\n    }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-14"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a260ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a18.9MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Node:\n    def __init__(self, k: int, v: int):\n        self.k = k\n        self.v = v\n\n    def __lt__(self, o: 'Node') -> bool:\n        return self.v > o.v\n\n\nclass Solution:\n    def rearrangeBarcodes(self, barcodes: List[int]) -> List[int]:\n        q = []\n        m = Counter()\n        for num in barcodes:\n            m[num] += 1\n        for k, v in m.items():\n            heappush(q, Node(k, v))\n        res = []\n        while len(q) >= 2:\n            item1 = heappop(q)\n            item2 = heappop(q)\n            item1.v -= 1\n            if item1.v > 0:\n                heappush(q, item1)\n            item2.v -= 1\n            if item2.v > 0:\n                heappush(q, item2)\n            res.append(item1.k)\n            res.append(item2.k)\n        if len(q):\n            res.append(q[0].k)\n        return res\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-05-14"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a24ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.2MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"#[derive(Clone, PartialEq, Eq, Ord)]\nstruct Node(i32, i32);\nimpl Node {\n    fn new(k: i32, v: i32) -> Self {\n        Node(k, v)\n    }\n}\nimpl PartialOrd for Node {\n    fn partial_cmp(&self, o: &Self) -> Option<std::cmp::Ordering> {\n        self.1.partial_cmp(&o.1)\n    }\n}\nimpl Solution {\n    pub fn rearrange_barcodes(barcodes: Vec<i32>) -> Vec<i32> {\n        let mut q = std::collections::BinaryHeap::<Node>::new();\n        let mut m = std::collections::HashMap::<i32, i32>::new();\n        for num in barcodes {\n            *m.entry(num).or_insert(0) += 1;\n        }\n        for (k, v) in m {\n            q.push(Node::new(k, v));\n        }\n        let mut res = vec![];\n        while q.len() >= 2 {\n            let mut item1 = q.pop().unwrap();\n            let mut item2 = q.pop().unwrap();\n            res.push(item1.0);\n            res.push(item2.0);\n            item1.1 -= 1;\n            item2.1 -= 1;\n            if item1.1 > 0 {\n                q.push(item1);\n            }\n            if item2.1 > 0 {\n                q.push(item2);\n            }\n        }\n        if !q.is_empty() {\n            res.push(q.peek().unwrap().0);\n        }\n        res\n    }\n}\n"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},25710:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(30758);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);