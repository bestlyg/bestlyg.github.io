"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[33518],{29233:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var t=o(86070),l=o(25710);const r={},s="133.\u514b\u9686\u56fe",i={id:"leetcode/101-200/\u514b\u9686\u56fe",title:"133.\u514b\u9686\u56fe",description:"\u94fe\u63a5\uff1a133.\u514b\u9686\u56fe",source:"@site/docs/leetcode/101-200/133.\u514b\u9686\u56fe.md",sourceDirName:"leetcode/101-200",slug:"/leetcode/101-200/\u514b\u9686\u56fe",permalink:"/web/site/docs/leetcode/101-200/\u514b\u9686\u56fe",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:133,frontMatter:{},sidebar:"journal",previous:{title:"132.\u5206\u5272\u56de\u6587\u4e32II",permalink:"/web/site/docs/leetcode/101-200/\u5206\u5272\u56de\u6587\u4e32II"},next:{title:"134.\u52a0\u6cb9\u7ad9",permalink:"/web/site/docs/leetcode/101-200/\u52a0\u6cb9\u7ad9"}},c={},d=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - typescript",id:"\u9898\u89e3-2---typescript",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"133\u514b\u9686\u56fe",children:"133.\u514b\u9686\u56fe"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(n.a,{href:"https://leetcode.cn/problems/clone-graph",children:"133.\u514b\u9686\u56fe"}),(0,t.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,t.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u56fe\u3001\u54c8\u5e0c\u8868",(0,t.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u65e0\u5411 \u8fde\u901a \u56fe\u4e2d\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528\uff0c\u8bf7\u4f60\u8fd4\u56de\u8be5\u56fe\u7684 \u6df1\u62f7\u8d1d\uff08\u514b\u9686\uff09\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2020-08-12"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a104ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a40.1MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6df1\u5ea6\u514b\u9686\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"/**\n * // Definition for a Node.\n * function Node(val, neighbors) {\n *    this.val = val === undefined ? 0 : val;\n *    this.neighbors = neighbors === undefined ? [] : neighbors;\n * };\n */\n/**\n * @param {Node} node\n * @return {Node}\n */\nvar cloneGraph = function (node) {\n  if (node === null) return null;\n  const cloned = new Map();\n  return clone(node);\n  function clone(node) {\n    const val = node.val;\n    if (cloned.has(val)) return cloned.get(val);\n    const newNode = new Node(val);\n    cloned.set(val, newNode);\n    newNode.neighbors = node.neighbors.map(v => clone(v));\n    return newNode;\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-2---typescript",children:"\u9898\u89e3 2 - typescript"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-10-25"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a80ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a39.9MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dfs\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"function cloneGraph(node: Node | null): Node | null {\n  if (node === null) return null;\n  const map = new Map<number, Node>();\n  dfs(node);\n  return map.get(node.val)!;\n  function dfs(node: Node | null): void {\n    if (node === null || map.has(node.val)) return;\n    const cloneNode = new Node(node.val);\n    map.set(node.val, cloneNode);\n    node.neighbors.forEach(neighbor => {\n      dfs(neighbor);\n      cloneNode.neighbors.push(map.get(neighbor.val)!);\n    });\n  }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},25710:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>i});var t=o(30758);const l={},r=t.createContext(l);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);