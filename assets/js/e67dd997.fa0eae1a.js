"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[55094],{80655:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"leetcode/1-100/\u4e24\u6570\u76f8\u52a0","title":"2.\u4e24\u6570\u76f8\u52a0","description":"\u94fe\u63a5\uff1a2.\u4e24\u6570\u76f8\u52a0","source":"@site/docs/leetcode/1-100/2.\u4e24\u6570\u76f8\u52a0.md","sourceDirName":"leetcode/1-100","slug":"/leetcode/1-100/\u4e24\u6570\u76f8\u52a0","permalink":"/docs/leetcode/1-100/\u4e24\u6570\u76f8\u52a0","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"journal","previous":{"title":"1.\u4e24\u6570\u4e4b\u548c","permalink":"/docs/leetcode/1-100/\u4e24\u6570\u4e4b\u548c"},"next":{"title":"3.\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","permalink":"/docs/leetcode/1-100/\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"}}');var d=l(25105),s=l(8556);const i={},o="2.\u4e24\u6570\u76f8\u52a0",r={},a=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - rust",id:"\u9898\u89e3-2---rust",level:2},{value:"\u9898\u89e3 3 - javascript",id:"\u9898\u89e3-3---javascript",level:2},{value:"\u9898\u89e3 4 - cpp",id:"\u9898\u89e3-4---cpp",level:2},{value:"\u9898\u89e3 5 - python",id:"\u9898\u89e3-5---python",level:2},{value:"\u9898\u89e3 6 - javascript",id:"\u9898\u89e3-6---javascript",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.header,{children:(0,d.jsx)(e.h1,{id:"2\u4e24\u6570\u76f8\u52a0",children:"2.\u4e24\u6570\u76f8\u52a0"})}),"\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,d.jsx)(e.a,{href:"https://leetcode.cn/problems/add-two-numbers",children:"2.\u4e24\u6570\u76f8\u52a0"}),(0,d.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,d.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u9012\u5f52\u3001\u94fe\u8868\u3001\u6570\u5b66",(0,d.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u51fa\u4e24\u4e2a\u975e\u7a7a\u7684\u94fe\u8868\u7528\u6765\u8868\u793a\u4e24\u4e2a\u975e\u8d1f\u7684\u6574\u6570\u3002\u5176\u4e2d\uff0c\u5b83\u4eec\u5404\u81ea\u7684\u4f4d\u6570\u662f\u6309\u7167 \xa0 \u9006\u5e8f \xa0 \u7684\u65b9\u5f0f\u5b58\u50a8\u7684\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8 \xa0 \u4e00\u4f4d \xa0 \u6570\u5b57\u3002\u5982\u679c\uff0c\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u8d77\u6765\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u6765\u8868\u793a\u5b83\u4eec\u7684\u548c\u3002\u60a8\u53ef\u4ee5\u5047\u8bbe\u9664\u4e86\u6570\u5b57 0 \u4e4b\u5916\uff0c\u8fd9\u4e24\u4e2a\u6570\u90fd\u4e0d\u4f1a\u4ee5 0\xa0 \u5f00\u5934\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2020-10-04"}),"\n",(0,d.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a144ms"}),"\n",(0,d.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a43.6MB"}),"\n",(0,d.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,d.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u6240\u6709\u8282\u70b9\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-typescript",children:"function addTwoNumbers(l1: ListNode | null, l2: ListNode | null): ListNode | null {\n  const list = new ListNode(0);\n  let temp = list;\n  let add = 0;\n  while (l1 !== null || l2 !== null) {\n    let sum = (l1?.val ?? 0) + (l2?.val ?? 0) + add;\n    add = 0;\n    if (sum >= 10) {\n      sum -= 10;\n      add++;\n    }\n    temp.next = new ListNode(sum);\n    temp = temp.next;\n    l1 = l1 === null ? null : l1.next;\n    l2 = l2 === null ? null : l2.next;\n  }\n  if (add !== 0) temp.next = new ListNode(add);\n  return list.next;\n}\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u9898\u89e3-2---rust",children:"\u9898\u89e3 2 - rust"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,d.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2MB"}),"\n",(0,d.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,d.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn add_two_numbers(\n        mut l1: Option<Box<ListNode>>,\n        mut l2: Option<Box<ListNode>>,\n    ) -> Option<Box<ListNode>> {\n        let mut head = Box::new(ListNode::new(0));\n        let mut p = &mut head;\n        let mut p1 = &mut l1;\n        let mut p2 = &mut l2;\n        let mut add = 0;\n        while p1.is_some() || p2.is_some() {\n            let mut val = match p1 {\n                Some(ref mut node) => {\n                    p1 = &mut node.next;\n                    node.val\n                }\n                None => 0,\n            } + match p2 {\n                Some(ref mut node) => {\n                    p2 = &mut node.next;\n                    node.val\n                }\n                None => 0,\n            } + add;\n            if val >= 10 {\n                val -= 10;\n                add = 1;\n            } else {\n                add = 0;\n            }\n            p.next = Some(Box::new(ListNode::new(val)));\n            p = p.next.as_mut().unwrap();\n        }\n        if add != 0 {\n            p.next = Some(Box::new(ListNode::new(1)));\n        }\n        head.next\n    }\n}\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u9898\u89e3-3---javascript",children:"\u9898\u89e3 3 - javascript"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2019-09-20"}),"\n",(0,d.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a248ms"}),"\n",(0,d.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a46.2MB"}),"\n",(0,d.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"}),"\n",(0,d.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u521b\u5efa\u5f85\u8fd4\u56de\u94fe\u8868 node3\uff0c\u521b\u5efa\u8fdb\u4f4d\u53c2\u6570 carry\uff0c\u904d\u5386 l1 \u548c l2\uff0c\u5982\u679c\u8282\u70b9 1+\u8282\u70b9 2+carry \u6ca1\u6709\u5927\u4e8e 10 \u5219\u76f4\u63a5\u50a8\u5b58\uff0c\u82e5\u76f8\u52a0\u5927\u4e8e 10 \u5219\u5b58\u5165 carry\uff0c\u4f59\u6570\u90e8\u5206\u76f4\u63a5\u50a8\u5b58\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:"var addTwoNumbers = function (l1, l2) {\n  let tempNode = new ListNode(0);\n  let node3 = tempNode;\n  let carry = 0;\n  while (l1 !== null || l2 !== null) {\n    let x = l1 === null ? 0 : l1.val;\n    let y = l2 === null ? 0 : l2.val;\n    let sum = x + y + carry;\n    carry = Math.floor(sum / 10);\n    sum = Math.floor(sum % 10);\n    console.log(carry, sum);\n    tempNode.next = new ListNode(sum);\n    tempNode = tempNode.next;\n    if (l1 !== null) {\n      l1 = l1.next;\n    }\n    if (l2 !== null) {\n      l2 = l2.next;\n    }\n  }\n  if (carry === 1) {\n    tempNode.next = new ListNode(1);\n  }\n  return node3.next;\n};\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u9898\u89e3-4---cpp",children:"\u9898\u89e3 4 - cpp"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,d.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a20ms"}),"\n",(0,d.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a69.8MB"}),"\n",(0,d.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,d.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode *head = new ListNode(), *p = head;\n        int add = 0;\n        while (l1 || l2) {\n            int val = (l1 ? l1->val : 0) + \n                      (l2 ? l2->val : 0) +\n                      add;\n            if (val >= 10) val -= 10, add = 1;\n            else add = 0;\n            p->next = new ListNode(val);\n            p = p->next;\n            if (l1) l1 = l1->next;\n            if (l2) l2 = l2->next;\n        }\n        if (add) p->next = new ListNode(1);\n        return head->next;\n    }\n};\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u9898\u89e3-5---python",children:"\u9898\u89e3 5 - python"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-02"}),"\n",(0,d.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a68ms"}),"\n",(0,d.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a16.2MB"}),"\n",(0,d.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,d.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n        head = ListNode()\n        p = head\n        add = 0\n        while l1 or l2:\n            val = (l1.val if l1 else 0) + (l2.val if l2 else 0) + add\n            if val >= 10:\n                val -= 10\n                add = 1\n            else:\n                add = 0\n            p.next = ListNode(val)\n            p = p.next\n            if l1:\n                l1 = l1.next\n            if l2:\n                l2 = l2.next\n        if add:\n            p.next = ListNode(1)\n        return head.next\n"})}),"\n",(0,d.jsx)(e.h2,{id:"\u9898\u89e3-6---javascript",children:"\u9898\u89e3 6 - javascript"}),"\n",(0,d.jsxs)(e.ul,{children:["\n",(0,d.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2019-09-20"}),"\n",(0,d.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a144ms"}),"\n",(0,d.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a38.4MB"}),"\n",(0,d.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"}),"\n",(0,d.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u521b\u5efa\u7b2c\u4e09\u4e2a\u94fe\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u503c\u4e3a\u524d\u4e24\u4e2a\u94fe\u8868\u76f8\u52a0\uff0c\u7136\u540e\u518d\u6b21\u5faa\u73af\u5224\u65ad\u662f\u5426\u6709\u4e00\u4e2a\u8282\u70b9\u503c\u5927\u4e8e\u7b49\u4e8e 10\uff0c\u82e5\u5b58\u5728\u5219-10 \u4e14\u4e0b\u4e00\u4e2a\u8282\u70b9\u503c+1\u3002"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-javascript",children:"var addTwoNumbers = function (l1, l2) {\n  let node1 = l1,\n    node2 = l2;\n  let tempNode = new ListNode(node1.val + node2.val);\n  let node3 = tempNode;\n  while (node1.next !== null && node2.next !== null) {\n    node1 = node1.next;\n    node2 = node2.next;\n    tempNode.next = new ListNode(node1.val + node2.val);\n    tempNode = tempNode.next;\n  }\n  if (node1.next !== null) {\n    tempNode.next = node1.next;\n  }\n  if (node2.next !== null) {\n    tempNode.next = node2.next;\n  }\n  tempNode = node3;\n  while (tempNode !== null) {\n    if (tempNode.val >= 10) {\n      tempNode.val -= 10;\n      if (tempNode.next !== null) {\n        tempNode.next.val += 1;\n      } else {\n        tempNode.next = new ListNode(1);\n      }\n    }\n    tempNode = tempNode.next;\n  }\n  return node3;\n};\n"})})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(c,{...n})}):c(n)}},8556:(n,e,l)=>{l.d(e,{R:()=>i,x:()=>o});var t=l(58101);const d={},s=t.createContext(d);function i(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(d):n.components||d:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);