"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[39043],{87794:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(86070),r=t(25710);const s={},o="648.\u5355\u8bcd\u66ff\u6362",c={id:"leetcode/601-700/\u5355\u8bcd\u66ff\u6362",title:"648.\u5355\u8bcd\u66ff\u6362",description:"\u94fe\u63a5\uff1a648.\u5355\u8bcd\u66ff\u6362",source:"@site/docs/leetcode/601-700/648.\u5355\u8bcd\u66ff\u6362.md",sourceDirName:"leetcode/601-700",slug:"/leetcode/601-700/\u5355\u8bcd\u66ff\u6362",permalink:"/docs/leetcode/601-700/\u5355\u8bcd\u66ff\u6362",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:648,frontMatter:{},sidebar:"journal",previous:{title:"647.\u56de\u6587\u5b50\u4e32",permalink:"/docs/leetcode/601-700/\u56de\u6587\u5b50\u4e32"},next:{title:"649.Dota2\u53c2\u8bae\u9662",permalink:"/docs/leetcode/601-700/Dota2\u53c2\u8bae\u9662"}},d={},l=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"648\u5355\u8bcd\u66ff\u6362",children:"648.\u5355\u8bcd\u66ff\u6362"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/replace-words",children:"648.\u5355\u8bcd\u66ff\u6362"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1a\u4e2d\u7b49",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u5b57\u5178\u6811\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u73b0\u5728\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u7531\u8bb8\u591a\u8bcd\u6839\u7ec4\u6210\u7684\u8bcd\u5178 dictionary \u548c\u4e00\u4e2a\u7528\u7a7a\u683c\u5206\u9694\u5355\u8bcd\u5f62\u6210\u7684\u53e5\u5b50 sentence\u3002\u4f60\u9700\u8981\u5c06\u53e5\u5b50\u4e2d\u7684\u6240\u6709\u7ee7\u627f\u8bcd\u7528\u8bcd\u6839\u66ff\u6362\u6389\u3002\u5982\u679c\u7ee7\u627f\u8bcd\u6709\u8bb8\u591a\u53ef\u4ee5\u5f62\u6210\u5b83\u7684\u8bcd\u6839\uff0c\u5219\u7528\u6700\u77ed\u7684\u8bcd\u6839\u66ff\u6362\u5b83\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-07-07"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a68ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a54.5MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5b57\u5178\u6811\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-cpp",children:'class TrieNode {\n   public:\n    TrieNode **children;\n    bool end;\n    TrieNode() {\n        children = (TrieNode **)malloc(sizeof(TrieNode *) * 26);\n        for (int i = 0; i < 26; i++) children[i] = nullptr;\n        end = false;\n    }\n    void insert(string str) {\n        TrieNode *node = this;\n        for (int i = 0; i < str.size(); i++) {\n            int idx = str[i] - \'a\';\n            if (!node->children[idx]) node->children[idx] = new TrieNode();\n            node = node->children[idx];\n            if (i == str.size() - 1) node->end = true;\n        }\n    }\n    string find(string str) {\n        TrieNode *node = this;\n        string ans = "", tmp = "";\n        for (int i = 0; i < str.size(); i++) {\n            int idx = str[i] - \'a\';\n            tmp += str[i];\n            if (!node->children[idx]) return ans;\n            node = node->children[idx];\n            if (node->end) return tmp;\n        }\n        return ans;\n    }\n};\nclass Solution {\n   public:\n    TrieNode *root = new TrieNode();\n    string replaceWords(vector<string> &dictionary, string sentence) {\n        vector<string> list;\n        string ans = "";\n        for (auto &str : dictionary) root->insert(str);\n        for (auto &str : split(sentence)) {\n            string res = root->find(str);\n            if (res == "")\n                list.push_back(str);\n            else\n                list.push_back(res);\n        }\n        for (int i = 0; i < list.size(); i++) {\n            if (i != 0) ans += " ";\n            ans += list[i];\n        }\n        return ans;\n    }\n    vector<string> split(string &str) {\n        vector<string> ans;\n        string tmp = "";\n        for (auto &ch : str) {\n            if (ch == \' \') {\n                ans.push_back(tmp);\n                tmp = "";\n            } else\n                tmp += ch;\n        }\n        ans.push_back(tmp);\n        return ans;\n    }\n};\n'})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(a,{...n})}):a(n)}},25710:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>c});var i=t(30758);const r={},s=i.createContext(r);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);