"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[73136],{2462:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"leetcode/2601-2700/\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743","title":"2699.\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743","description":"\u94fe\u63a5\uff1a2699.\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743","source":"@site/docs/leetcode/2601-2700/2699.\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743.md","sourceDirName":"leetcode/2601-2700","slug":"/leetcode/2601-2700/\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743","permalink":"/docs/leetcode/2601-2700/\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2699,"frontMatter":{},"sidebar":"journal","previous":{"title":"2698.\u6c42\u4e00\u4e2a\u6574\u6570\u7684\u60e9\u7f5a\u6570","permalink":"/docs/leetcode/2601-2700/\u6c42\u4e00\u4e2a\u6574\u6570\u7684\u60e9\u7f5a\u6570"},"next":{"title":"2700.\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u5dee\u5f02","permalink":"/docs/leetcode/2601-2700/\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u7684\u5dee\u5f02"}}');var s=t(86070),o=t(31503);const r={},c="2699.\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743",d={},u=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"2699\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743",children:"2699.\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,s.jsx)(n.a,{href:"https://leetcode.cn/problems/modify-graph-edge-weights",children:"2699.\u4fee\u6539\u56fe\u4e2d\u7684\u8fb9\u6743"}),(0,s.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,s.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u56fe\u3001\u6700\u77ed\u8def\u3001\u5806\uff08\u4f18\u5148\u961f\u5217\uff09",(0,s.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a n\xa0\u4e2a\u8282\u70b9\u7684 \u65e0\u5411\u5e26\u6743\u8fde\u901a\xa0\u56fe\uff0c\u8282\u70b9\u7f16\u53f7\u4e3a\xa00\xa0\u5230\xa0n - 1\xa0\uff0c\u518d\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\xa0edges\xa0\uff0c\u5176\u4e2d\xa0edges[i] = [ai, bi, wi]\xa0\u8868\u793a\u8282\u70b9\xa0ai \u548c\xa0bi\xa0\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u6743\u4e3a\xa0wi\xa0\u7684\u8fb9\u3002\u90e8\u5206\u8fb9\u7684\u8fb9\u6743\u4e3a\xa0-1\uff08wi = -1\uff09\uff0c\u5176\u4ed6\u8fb9\u7684\u8fb9\u6743\u90fd\u4e3a \u6b63\xa0\u6570\uff08wi > 0\uff09\u3002\u4f60\u9700\u8981\u5c06\u6240\u6709\u8fb9\u6743\u4e3a -1\xa0\u7684\u8fb9\u90fd\u4fee\u6539\u4e3a\u8303\u56f4\xa0[1, 2 * 109]\xa0\u4e2d\u7684 \u6b63\u6574\u6570\xa0\uff0c\u4f7f\u5f97\u4ece\u8282\u70b9\xa0source\xa0\u5230\u8282\u70b9\xa0destination\xa0\u7684 \u6700\u77ed\u8ddd\u79bb\xa0\u4e3a\u6574\u6570\xa0target\xa0\u3002\u5982\u679c\u6709 \u591a\u79cd\xa0\u4fee\u6539\u65b9\u6848\u53ef\u4ee5\u4f7f\xa0source \u548c\xa0destination\xa0\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u7b49\u4e8e\xa0target\xa0\uff0c\u4f60\u53ef\u4ee5\u8fd4\u56de\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u3002\u5982\u679c\u5b58\u5728\u4f7f source\xa0\u5230 destination\xa0\u6700\u77ed\u8ddd\u79bb\u4e3a target\xa0\u7684\u65b9\u6848\uff0c\u8bf7\u4f60\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u5305\u542b\u6240\u6709\u8fb9\u7684\u6570\u7ec4\uff08\u5305\u62ec\u672a\u4fee\u6539\u8fb9\u6743\u7684\u8fb9\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u65b9\u6848\uff0c\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a \u7a7a\u6570\u7ec4\xa0\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-06-09"}),"\n",(0,s.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a792ms"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a255.6MB"}),"\n",(0,s.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,s.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dijkstra\u5bf9\u4e8e\u6240\u6709\u6b63\u6570\u8fb9\u6c42\u89e3\uff0c\u5982\u679cd\u5c0f\u4e8etarget\u5219\u65e0\u89e3\uff0c\u5426\u5219\u6bcf\u6b21\u589e\u52a0\u4e00\u6761\u8d1f\u6570\u8fb9\u5224\u65ad\u662f\u5426\u6709\u89e3\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#define X first\n#define Y second\n#define pii pair<int, int>\nstruct QNode {\n    int cur, sum;\n    QNode(int cur, int sum = 0): cur(cur), sum(sum) {}\n};\nclass Solution {\npublic:\n    vector<vector<int>> modifiedGraphEdges(int n, vector<vector<int>>& edges, int source, int destination, int target) {\n        vector<vector<int>> nodes(n, vector<int>(n, 0));\n        for (auto &e : edges) {\n            nodes[e[0]][e[1]] = e[2];\n            nodes[e[1]][e[0]] = e[2];\n        }\n        int d = dijkstra(n, nodes, source, destination);\n        vector<vector<int>> res;\n        if (d < target) return res;\n        bool success = d == target;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (nodes[i][j] > 0) res.push_back(vector<int>{ i, j, nodes[i][j] });\n                else if (nodes[i][j] == 0) continue;\n                else if (success) res.push_back(vector<int>{ i, j, (int)2e9 });\n                else {\n                    nodes[i][j] = 1;\n                    nodes[j][i] = 1;\n                    int d = dijkstra(n, nodes, source, destination);\n                    if (d > target) {\n                        res.push_back(vector<int>{ i, j, 1 });\n                    } else {\n                        res.push_back(vector<int>{ i, j, target - d + 1 });\n                        success = true;\n                    }\n                }\n            }\n        }\n        return success ? res : vector<vector<int>>{};\n    }\n    int dijkstra(int n, vector<vector<int>>& nodes, int from, int to) {\n        int res = 0;\n        auto cmp = [&](QNode &v1, QNode &v2) { return v2.sum < v1.sum; };\n        priority_queue<QNode, vector<QNode>, decltype(cmp)> q(cmp);\n        q.push(QNode(from, 0));\n        vector<vector<bool>> used(n, vector<bool>(n, false));\n        while (q.size()) {\n            auto node = q.top();\n            if (node.cur == to) return node.sum;\n            q.pop();\n            for (int i = 0; i < n; i++) {\n                if (nodes[node.cur][i] > 0 && !used[node.cur][i]) {\n                    QNode next = node;\n                    next.cur = i;\n                    next.sum = node.sum + nodes[node.cur][i];\n                    used[node.cur][i] = true;\n                    q.push(move(next));\n                }\n            }\n        }\n        return INT_MAX;\n    }\n};\n"})})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},31503:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(30758);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);