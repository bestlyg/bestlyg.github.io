"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[5348],{70236:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>p});var t=i(86070),r=i(25710);const s={},a="2034.\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",d={id:"leetcode/2001-2100/\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",title:"2034.\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",description:"\u94fe\u63a5\uff1a2034.\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",source:"@site/docs/leetcode/2001-2100/2034.\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8.md",sourceDirName:"leetcode/2001-2100",slug:"/leetcode/2001-2100/\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",permalink:"/docs/leetcode/2001-2100/\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2034,frontMatter:{},sidebar:"journal",previous:{title:"2032.\u81f3\u5c11\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u503c",permalink:"/docs/leetcode/2001-2100/\u81f3\u5c11\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u503c"},next:{title:"2037.\u4f7f\u6bcf\u4f4d\u5b66\u751f\u90fd\u6709\u5ea7\u4f4d\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570",permalink:"/docs/leetcode/2001-2100/\u4f7f\u6bcf\u4f4d\u5b66\u751f\u90fd\u6709\u5ea7\u4f4d\u7684\u6700\u5c11\u79fb\u52a8\u6b21\u6570"}},c={},p=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function m(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"2034\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8",children:"2034.\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(n.a,{href:"https://leetcode.cn/problems/stock-price-fluctuation",children:"2034.\u80a1\u7968\u4ef7\u683c\u6ce2\u52a8"}),(0,t.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u8bbe\u8ba1\u3001\u54c8\u5e0c\u8868\u3001\u6570\u636e\u6d41\u3001\u6709\u5e8f\u96c6\u5408\u3001\u5806\uff08\u4f18\u5148\u961f\u5217\uff09",(0,t.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5b9e\u73b0\uff1a\u66f4\u65b0 \u80a1\u7968\u5728\u67d0\u4e00\u65f6\u95f4\u6233\u7684\u80a1\u7968\u4ef7\u683c\uff0c\u5982\u679c\u6709\u4e4b\u524d\u540c\u4e00\u65f6\u95f4\u6233\u7684\u4ef7\u683c\uff0c\u8fd9\u4e00\u64cd\u4f5c\u5c06 \xa0 \u66f4\u6b63 \xa0 \u4e4b\u524d\u7684\u9519\u8bef\u4ef7\u683c\u3002\u627e\u5230\u5f53\u524d\u8bb0\u5f55\u91cc \u6700\u65b0\u80a1\u7968\u4ef7\u683c \xa0\u3002\u6700\u65b0\u80a1\u7968\u4ef7\u683c \xa0 \u5b9a\u4e49\u4e3a\u65f6\u95f4\u6233\u6700\u665a\u7684\u80a1\u7968\u4ef7\u683c\u3002\u627e\u5230\u5f53\u524d\u8bb0\u5f55\u91cc\u80a1\u7968\u7684 \u6700\u9ad8\u4ef7\u683c \xa0\u3002\u627e\u5230\u5f53\u524d\u8bb0\u5f55\u91cc\u80a1\u7968\u7684 \u6700\u4f4e\u4ef7\u683c \xa0\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-01-23"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a692ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a79.2MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u7ef4\u62a4\u5806\u5185\u4e0b\u6807\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class Node {\n  constructor(\n    public timestamp: number,\n    public price: number,\n    public imax: number,\n    public imin: number\n  ) {}\n}\nclass Heap<Node> {\n  private arr: Node[] = [];\n  get isEmpty() {\n    return this.size === 0;\n  }\n  get size() {\n    return this.arr.length;\n  }\n  get top() {\n    return this.arr[0];\n  }\n  constructor(private compare: (t1: Node, t2: Node) => number, private idx_field: string) {}\n  add(num: Node): void {\n    this.arr.push(num);\n    this.shiftUp(this.size - 1);\n  }\n  remove(): Node {\n    const num = this.arr.shift()!;\n    if (this.size) {\n      this.arr.unshift(this.arr.pop()!);\n      this.shiftDown(0);\n    }\n    return num;\n  }\n  shiftUp(index: number): void {\n    if (index === 0) return;\n    const parentIndex = (index - 1) >> 1;\n    if (this.compare(this.arr[index], this.arr[parentIndex]) > 0) {\n      this.arr[index][this.idx_field] = parentIndex;\n      this.arr[parentIndex][this.idx_field] = index;\n      [this.arr[index], this.arr[parentIndex]] = [this.arr[parentIndex], this.arr[index]];\n      this.shiftUp(parentIndex);\n    }\n  }\n  shiftDown(index: number): void {\n    let childrenIndex = index * 2 + 1;\n    if (childrenIndex > this.size - 1) return;\n    if (\n      childrenIndex + 1 <= this.size - 1 &&\n      this.compare(this.arr[childrenIndex + 1], this.arr[childrenIndex]) > 0\n    ) {\n      childrenIndex++;\n    }\n    if (this.compare(this.arr[childrenIndex], this.arr[index]) > 0) {\n      this.arr[index][this.idx_field] = childrenIndex;\n      this.arr[childrenIndex][this.idx_field] = index;\n      [this.arr[childrenIndex], this.arr[index]] = [this.arr[index], this.arr[childrenIndex]];\n      this.shiftDown(childrenIndex);\n    }\n  }\n  *[Symbol.iterator](): IterableIterator<Node> {\n    for (const t of this.arr) {\n      yield t;\n    }\n  }\n}\n\nclass StockPrice {\n  heap_max = new Heap<Node>((t1, t2) => t1.price - t2.price, 'imax');\n  heap_min = new Heap<Node>((t1, t2) => t2.price - t1.price, 'imin');\n  map = new Map<number, Node>();\n  time_max = -1;\n  update(timestamp: number, price: number): void {\n    this.time_max = Math.max(this.time_max, timestamp);\n    const cnt = this.map.size;\n    let node = this.map.get(timestamp);\n    if (node) {\n      node.price = price;\n      this.heap_max.shiftUp(node.imax);\n      this.heap_max.shiftDown(node.imax);\n      this.heap_min.shiftUp(node.imin);\n      this.heap_min.shiftDown(node.imin);\n    } else {\n      this.map.set(timestamp, (node = new Node(timestamp, price, cnt, cnt)));\n      this.heap_max.add(node);\n      this.heap_min.add(node);\n    }\n  }\n  current(): number {\n    return this.map.get(this.time_max)!.price;\n  }\n  maximum(): number {\n    return this.heap_max.top.price;\n  }\n  minimum(): number {\n    return this.heap_min.top.price;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-10-08"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a1140ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a57.04MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6709\u5e8f\u96c6\u5408\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from sortedcontainers import SortedDict\nclass StockPrice:\n\n    def __init__(self):\n        self.cur_time = -1\n        self.cur_price = 0\n        self.time_map = SortedDict()\n        self.max_map = SortedDict()\n        self.min_map = SortedDict()\n\n    def update_map(self, map, key, d):\n        if key not in map: map[key] = 0\n        map[key] += d\n        if map[key] == 0: del map[key]\n\n    def update(self, timestamp: int, price: int) -> None:\n        if timestamp in self.time_map: \n            cur_price = self.time_map[timestamp]\n            self.update_map(self.max_map, cur_price, -1)\n            self.update_map(self.min_map, cur_price, -1)\n        self.update_map(self.max_map, price, 1)\n        self.update_map(self.min_map, price, 1)\n        self.time_map[timestamp] = price\n        if self.cur_time <= timestamp:\n            self.cur_time = timestamp\n            self.cur_price = price\n\n    def current(self) -> int:\n        return self.cur_price\n\n    def maximum(self) -> int:\n        return self.max_map.keys()[-1]\n\n    def minimum(self) -> int:\n        return self.min_map.keys()[0]\n\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},25710:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var t=i(30758);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);