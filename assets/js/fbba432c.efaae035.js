"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[43190],{72403:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"leetcode/2401-2500/\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2","title":"2476.\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2","description":"\u94fe\u63a5\uff1a2476.\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2","source":"@site/docs/leetcode/2401-2500/2476.\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2.md","sourceDirName":"leetcode/2401-2500","slug":"/leetcode/2401-2500/\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2","permalink":"/docs/leetcode/2401-2500/\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2476,"frontMatter":{},"sidebar":"journal","previous":{"title":"2475.\u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee","permalink":"/docs/leetcode/2401-2500/\u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee"},"next":{"title":"2477.\u5230\u8fbe\u9996\u90fd\u7684\u6700\u5c11\u6cb9\u8017","permalink":"/docs/leetcode/2401-2500/\u5230\u8fbe\u9996\u90fd\u7684\u6700\u5c11\u6cb9\u8017"}}');var t=r(86070),s=r(31503);const l={},o="2476.\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2",d={},c=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"2476\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2",children:"2476.\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(n.a,{href:"https://leetcode.cn/problems/closest-nodes-queries-in-a-binary-search-tree",children:"2476.\u4e8c\u53c9\u641c\u7d22\u6811\u6700\u8fd1\u8282\u70b9\u67e5\u8be2"}),(0,t.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u641c\u7d22\u6811\u3001\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u4e8c\u53c9\u6811",(0,t.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a \u4e8c\u53c9\u641c\u7d22\u6811 \u7684\u6839\u8282\u70b9 root \uff0c\u548c\u4e00\u4e2a\u7531\u6b63\u6574\u6570\u7ec4\u6210\u3001\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 queries \u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-11-20"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a308ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a150.5MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","bs\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:'// bestlyg\n# define X first\n# define Y second\n# define lb(x) ((x) & (-x))\n# define mem(a,b) memset(a,b,sizeof(a))\n# define debug freopen("r.txt","r",stdin)\n# define pi pair<int,int>\n#ifdef DEBUG\n#define log(frm, args...) {    printf(frm, ##args);}\n#else\n#define log(frm, args...)\n#endif\ntypedef long long ll;\nusing namespace std;\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> list;\n    vector<vector<int>> ans;\n    vector<vector<int>> closestNodes(TreeNode* root, vector<int>& queries) {\n        dfs(root);\n        for (auto &q : queries) {\n            vector<int> item(2);\n            item[0] = find1(q);\n            item[1] = find2(q);\n            ans.push_back(item);\n        }\n        return ans;\n    }\n    void dfs(TreeNode *node) {\n        if (!node) return;\n        dfs(node->left);\n        list.push_back(node->val);\n        dfs(node->right);\n    }\n    int find1(int q) {\n        int l = -1, r = list.size() - 1, m;\n        while (l < r) {\n            m = (l + r + 1) / 2;\n            if (list[m] > q) r = m - 1;\n            else l = m;\n        }\n        if (l == -1) return l;\n        return list[l];\n    }\n    int find2(int q) {\n        int l = 0, r = list.size(), m;\n        while (l < r) {\n            m = (l + r) / 2;\n            if (list[m] >= q) r = m;\n            else l = m + 1;\n        }\n        if (l == list.size()) return -1;\n        return list[l];\n    }\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2024-02-24"}),"\n",(0,t.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a582ms"}),"\n",(0,t.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a74.37MB"}),"\n",(0,t.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dfs\u540e\u6392\u5e8f\u5904\u7406queries\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def closestNodes(self, root: Optional[TreeNode], queries: List[int]) -> List[List[int]]:\n        arr = []\n        def inorder(node: Optional[TreeNode]):\n            if not node: return\n            inorder(node.left)\n            arr.append(node.val)\n            inorder(node.right)\n        inorder(root)\n        idx = 0\n        ans = [[] for _ in range(len(queries))]\n        queries = sorted((q, i) for i, q in enumerate(queries))\n        for q, i in queries:\n            while idx < len(arr) and arr[idx] < q:\n                idx += 1\n            ans[i] = [-1, -1]\n            if idx < len(arr) and arr[idx] == q:\n                ans[i] = [q, q]\n            else:\n                if idx > 0: ans[i][0] = arr[idx - 1]\n                if idx < len(arr): ans[i][1] = arr[idx]\n        return ans\n"})})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},31503:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var i=r(30758);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);