"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[68656],{30865:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=t(86070),s=t(25710);const l={},i="110.\u5e73\u8861\u4e8c\u53c9\u6811",o={id:"leetcode/101-200/\u5e73\u8861\u4e8c\u53c9\u6811",title:"110.\u5e73\u8861\u4e8c\u53c9\u6811",description:"\u94fe\u63a5\uff1a110.\u5e73\u8861\u4e8c\u53c9\u6811",source:"@site/docs/leetcode/101-200/110.\u5e73\u8861\u4e8c\u53c9\u6811.md",sourceDirName:"leetcode/101-200",slug:"/leetcode/101-200/\u5e73\u8861\u4e8c\u53c9\u6811",permalink:"/web/site/docs/leetcode/101-200/\u5e73\u8861\u4e8c\u53c9\u6811",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:110,frontMatter:{},sidebar:"journal",previous:{title:"109.\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/web/site/docs/leetcode/101-200/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811"},next:{title:"111.\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",permalink:"/web/site/docs/leetcode/101-200/\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"}},c={},d=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2},{value:"\u9898\u89e3 2 - c",id:"\u9898\u89e3-2---c",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"110\u5e73\u8861\u4e8c\u53c9\u6811",children:"110.\u5e73\u8861\u4e8c\u53c9\u6811"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(n.a,{href:"https://leetcode.cn/problems/balanced-binary-tree",children:"110.\u5e73\u8861\u4e8c\u53c9\u6811"}),(0,r.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1a\u7b80\u5355",(0,r.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",(0,r.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5b83\u662f\u5426\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2020-08-17"}),"\n",(0,r.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a112ms"}),"\n",(0,r.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a44.4MB"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,r.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u8ba1\u7b97\u5b50\u6811\u662f\u5426\u5e73\u8861\uff0c\u4ee5\u53ca\u8be5\u6811\u662f\u5426\u5e73\u8861\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const map = new Map<TreeNode, number>();\nfunction isBalanced(root: TreeNode | null): boolean {\n  if (root === null) return true;\n  const h = (node: TreeNode | null): number => {\n    if (node === null) return 0;\n    if (map.has(node)) return map.get(node)!;\n    const height = 1 + Math.max(h(node.left), h(node.right));\n    map.set(node, height);\n    return height;\n  };\n  return (\n    isBalanced(root.left) && isBalanced(root.right) && Math.abs(h(root.left) - h(root.right)) <= 1\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\u9898\u89e3-2---c",children:"\u9898\u89e3 2 - c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-11-27"}),"\n",(0,r.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,r.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a8.7MB"}),"\n",(0,r.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1ac"}),"\n",(0,r.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u9012\u5f52\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"// \u5224\u65ad\u8282\u70b9\u662f\u5426\u5e73\u8861,\u4e0d\u5e73\u8861\u8fd4\u56de-1,\u5e73\u8861\u8fd4\u56de\u9ad8\u5ea6\nint _isBalanced(struct TreeNode *node) {\n    if (!node) return 0;\n    int l = _isBalanced(node->left), r = _isBalanced(node->right);\n    if (l == -1 || r == -1) return -1;\n    if (abs(l - r) <= 1) return (l > r ? l : r) + 1;\n    return -1;\n}\nbool isBalanced(struct TreeNode* root){\n    return _isBalanced(root) > -1;\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},25710:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(30758);const s={},l=r.createContext(s);function i(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);