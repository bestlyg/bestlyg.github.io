"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[72436],{59439:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var r=t(86070),i=t(25710);const s={},a="715.Range\u6a21\u5757",l={id:"leetcode/701-800/Range\u6a21\u5757",title:"715.Range\u6a21\u5757",description:"\u94fe\u63a5\uff1a715.Range\u6a21\u5757",source:"@site/docs/leetcode/701-800/715.Range\u6a21\u5757.md",sourceDirName:"leetcode/701-800",slug:"/leetcode/701-800/Range\u6a21\u5757",permalink:"/docs/leetcode/701-800/Range\u6a21\u5757",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:715,frontMatter:{},sidebar:"journal",previous:{title:"714.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u542b\u624b\u7eed\u8d39",permalink:"/docs/leetcode/701-800/\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u542b\u624b\u7eed\u8d39"},next:{title:"718.\u6700\u957f\u91cd\u590d\u5b50\u6570\u7ec4",permalink:"/docs/leetcode/701-800/\u6700\u957f\u91cd\u590d\u5b50\u6570\u7ec4"}},d={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"715range\u6a21\u5757",children:"715.Range\u6a21\u5757"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/range-module",children:"715.Range\u6a21\u5757"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u8bbe\u8ba1\u3001\u7ebf\u6bb5\u6811\u3001\u6709\u5e8f\u96c6\u5408",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","Range\u6a21\u5757\u662f\u8ddf\u8e2a\u6570\u5b57\u8303\u56f4\u7684\u6a21\u5757\u3002\u8bbe\u8ba1\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u8ddf\u8e2a\u8868\u793a\u4e3a \u534a\u5f00\u533a\u95f4 \u7684\u8303\u56f4\u5e76\u67e5\u8be2\u5b83\u4eec\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-06-20"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a200ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a66.95MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6709\u5e8f\u96c6\u5408\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class RangeModule {\npublic:\n    RangeModule() {}\n    \n    void addRange(int left, int right) {\n        auto it = intervals.upper_bound(left);\n        if (it != intervals.begin()) {\n            auto start = prev(it);\n            if (start->second >= right) {\n                return;\n            }\n            if (start->second >= left) {\n                left = start->first;\n                intervals.erase(start);\n            }\n        }\n        while (it != intervals.end() && it->first <= right) {\n            right = max(right, it->second);\n            it = intervals.erase(it);\n        }\n        intervals[left] = right;\n    }\n    \n    bool queryRange(int left, int right) {\n        auto it = intervals.upper_bound(left);\n        if (it == intervals.begin()) {\n            return false;\n        }\n        it = prev(it);\n        return right <= it->second;\n    }\n    \n    void removeRange(int left, int right) {\n        auto it = intervals.upper_bound(left);\n        if (it != intervals.begin()) {\n            auto start = prev(it);\n            if (start->second >= right) {\n                int ri = start->second;\n                if (start->first == left) {\n                    intervals.erase(start);\n                }\n                else {\n                    start->second = left;\n                }\n                if (right != ri) {\n                    intervals[right] = ri;\n                }\n                return;\n            }\n            else if (start->second > left) {\n                start->second = left;\n            }\n        }\n        while (it != intervals.end() && it->first < right) {\n            if (it->second <= right) {\n                it = intervals.erase(it);\n            }\n            else {\n                intervals[right] = it->second;\n                intervals.erase(it);\n                break;\n            }\n        }\n    }\n\nprivate:\n    map<int, int> intervals;\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-11-12"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a480ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a20.4MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6709\u5e8f\u6570\u7ec4\uff0c\u6bcf\u6b21\u5408\u5e76\u6570\u7ec4\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"from sortedcontainers import SortedList\nclass RangeModule:\n    def __init__(self):\n        self.arr = SortedList([(-1, -1), (inf, inf)])\n\n    def addRange(self, left: int, right: int) -> None:\n        arr = self.arr\n        item = (left, right)\n        idx = arr.bisect_left(item)\n        if arr[idx - 1][1] >= left:\n            item = (arr[idx - 1][0], max(arr[idx - 1][1], item[1]))\n            arr.pop(idx - 1)\n            idx -= 1\n        while arr[idx][0] <= item[1]:\n            item = (item[0], max(arr[idx][1], item[1]))\n            arr.pop(idx)\n        arr.add(item)\n\n    def queryRange(self, left: int, right: int) -> bool:\n        arr = self.arr\n        idx = arr.bisect_right((left, inf))\n        return arr[idx - 1][0] <= left and arr[idx - 1][1] >= right\n\n    def removeRange(self, left: int, right: int) -> None:\n        arr = self.arr\n        idx = arr.bisect_left((left, right))\n        if arr[idx - 1][1] > left:\n            if arr[idx - 1][1] > right:\n                arr.add((right, arr[idx - 1][1]))\n            item = (arr[idx - 1][0], left)\n            arr.pop(idx - 1)\n            arr.add(item)\n        while arr[idx][1] <= right:\n            arr.pop(idx)\n        if arr[idx][0] <= right:\n            item = (right, arr[idx][1])\n            arr.pop(idx)\n            if item[0] != item[1]:\n                arr.add(item)\n"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(c,{...n})}):c(n)}},25710:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>l});var r=t(30758);const i={},s=r.createContext(i);function a(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);