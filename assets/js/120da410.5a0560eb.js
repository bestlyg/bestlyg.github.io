"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[91598],{76045:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>a,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var r=i(86070),l=i(31503);const s={},t="2472.\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",c={id:"leetcode/2401-2500/\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",title:"2472.\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",description:"\u94fe\u63a5\uff1a2472.\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",source:"@site/docs/leetcode/2401-2500/2472.\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee.md",sourceDirName:"leetcode/2401-2500",slug:"/leetcode/2401-2500/\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",permalink:"/docs/leetcode/2401-2500/\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2472,frontMatter:{},sidebar:"journal",previous:{title:"2471.\u9010\u5c42\u6392\u5e8f\u4e8c\u53c9\u6811\u6240\u9700\u7684\u6700\u5c11\u64cd\u4f5c\u6570\u76ee",permalink:"/docs/leetcode/2401-2500/\u9010\u5c42\u6392\u5e8f\u4e8c\u53c9\u6811\u6240\u9700\u7684\u6700\u5c11\u64cd\u4f5c\u6570\u76ee"},next:{title:"2475.\u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee",permalink:"/docs/leetcode/2401-2500/\u6570\u7ec4\u4e2d\u4e0d\u7b49\u4e09\u5143\u7ec4\u7684\u6570\u76ee"}},d={},o=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2}];function p(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"2472\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee",children:"2472.\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/maximum-number-of-non-overlapping-palindrome-substrings",children:"2472.\u4e0d\u91cd\u53e0\u56de\u6587\u5b50\u5b57\u7b26\u4e32\u7684\u6700\u5927\u6570\u76ee"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u8fd4\u56de\u6700\u4f18\u65b9\u6848\u4e2d\u80fd\u9009\u62e9\u7684\u5b50\u5b57\u7b26\u4e32\u7684 \u6700\u5927 \u6570\u76ee\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-11-13"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a44ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.6MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dp[i]\u8868\u793a\u5b58\u5728 i \u4e2a\u5b57\u7b26\u7684\u65f6\u5019\u6700\u5927\u56de\u6587\u4e2a\u6570\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    string s;\n    int n;\n    int maxPalindromes(string s, int k) {\n        this->s = s;\n        n = s.size();\n        vector<int> dp(n + 1, 0);\n        for (int i = 0; i < n; i++) {\n            check(dp, k, i, i);\n            check(dp, k, i, i + 1);\n        }\n        return dp[n];\n    }\n    void check(vector<int> &dp, int k, int l, int r) {\n        dp[l + 1] = max(dp[l + 1], dp[l]);\n        for (; l >= 0 && r < n && s[l] == s[r]; l--, r++) {\n            if (r - l + 1 >= k) dp[r + 1] = max(dp[r + 1], dp[l] + 1);\n        }\n    }\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-11-13"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a40ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a6.5MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u65b9\u4fbf\u83b7\u53d6 l \u548c r\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int maxPalindromes(string s, int k) {\n        int n = s.size();\n        vector<int> dp(n + 1, 0);\n        for (int i = 0; i < 2 * n - 1; i++) {\n            int l = i / 2, r = l + i % 2;\n            dp[l + 1] = max(dp[l + 1], dp[l]);\n            for (; l >= 0 && r < n && s[l] == s[r]; l--, r++) {\n                if (r - l + 1 >= k) dp[r + 1] = max(dp[r + 1], dp[l] + 1);\n            }\n        }\n        return dp[n];\n    }\n};\n"})})]})}function a(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(p,{...n})}):p(n)}},31503:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>c});var r=i(30758);const l={},s=r.createContext(l);function t(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:t(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);