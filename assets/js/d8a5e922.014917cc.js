"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[18879],{10868:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"leetcode/501-600/IPO","title":"502.IPO","description":"\u94fe\u63a5\uff1a502.IPO","source":"@site/docs/leetcode/501-600/502.IPO.md","sourceDirName":"leetcode/501-600","slug":"/leetcode/501-600/IPO","permalink":"/docs/leetcode/501-600/IPO","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":502,"frontMatter":{},"sidebar":"journal","previous":{"title":"501.\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4f17\u6570","permalink":"/docs/leetcode/501-600/\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4f17\u6570"},"next":{"title":"503.\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20II","permalink":"/docs/leetcode/501-600/\u4e0b\u4e00\u4e2a\u66f4\u5927\u5143\u7d20II"}}');var i=t(25105),s=t(8556);const o={},a="502.IPO",c={},d=[{value:"\u9898\u89e3 1 - typescript",id:"\u9898\u89e3-1---typescript",level:2}];function l(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"502ipo",children:"502.IPO"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,i.jsx)(e.a,{href:"https://leetcode.cn/problems/ipo",children:"502.IPO"}),(0,i.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,i.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u8d2a\u5fc3\u3001\u6570\u7ec4\u3001\u6392\u5e8f\u3001\u5806\uff08\u4f18\u5148\u961f\u5217\uff09",(0,i.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u4ece\u7ed9\u5b9a\u9879\u76ee\u4e2d\u9009\u62e9 \u6700\u591a k \u4e2a\u4e0d\u540c\u9879\u76ee\u7684\u5217\u8868\uff0c\u4ee5 \u6700\u5927\u5316\u6700\u7ec8\u8d44\u672c \uff0c\u5e76\u8f93\u51fa\u6700\u7ec8\u53ef\u83b7\u5f97\u7684\u6700\u591a\u8d44\u672c\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"\u9898\u89e3-1---typescript",children:"\u9898\u89e3 1 - typescript"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2021-09-08"}),"\n",(0,i.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a336ms"}),"\n",(0,i.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a66.9MB"}),"\n",(0,i.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1atypescript"}),"\n",(0,i.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5229\u7528\u5806\u5feb\u901f\u627e\u51fa\u5f53\u524d\u5229\u6da6\u6700\u5927\u503c\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",children:"class Heap<T = number> {\n  private arr: T[] = [];\n  get isEmpty() {\n    return this.size === 0;\n  }\n  get size() {\n    return this.arr.length;\n  }\n  get top() {\n    return this.arr[0];\n  }\n  constructor(private compare: (t1: T, t2: T) => number) {}\n  add(num: T): void {\n    this.arr.push(num);\n    this.shiftUp(this.size - 1);\n  }\n  remove(): T {\n    const num = this.arr.shift()!;\n    if (this.size) {\n      this.arr.unshift(this.arr.pop()!);\n      this.shiftDown(0);\n    }\n    return num;\n  }\n  private shiftUp(index: number): void {\n    if (index === 0) return;\n    const parentIndex = (index - 1) >> 1;\n    if (this.compare(this.arr[index], this.arr[parentIndex]) > 0) {\n      [this.arr[index], this.arr[parentIndex]] = [this.arr[parentIndex], this.arr[index]];\n      this.shiftUp(parentIndex);\n    }\n  }\n  private shiftDown(index: number): void {\n    let childrenIndex = index * 2 + 1;\n    if (childrenIndex > this.size - 1) return;\n    if (\n      childrenIndex + 1 <= this.size - 1 &&\n      this.compare(this.arr[childrenIndex + 1], this.arr[childrenIndex]) > 0\n    ) {\n      childrenIndex++;\n    }\n    if (this.compare(this.arr[childrenIndex], this.arr[index]) > 0) {\n      [this.arr[childrenIndex], this.arr[index]] = [this.arr[index], this.arr[childrenIndex]];\n      this.shiftDown(childrenIndex);\n    }\n  }\n  *[Symbol.iterator](): IterableIterator<T> {\n    for (const t of this.arr) {\n      yield t;\n    }\n  }\n}\ntype Data = {\n  cost: number;\n  profit: number;\n};\nfunction findMaximizedCapital(k: number, w: number, profits: number[], capital: number[]): number {\n  const n = profits.length;\n  const list: Data[] = [];\n  for (let i = 0; i < n; i++)\n    list.push({\n      cost: capital[i],\n      profit: profits[i],\n    });\n  list.sort((a, b) => a.cost - b.cost);\n  const heap = new Heap<Data>((t1, t2) => t1.profit - t2.profit);\n  if (w >= list[list.length - 1].cost) {\n    return list\n      .sort((a, b) => b.profit - a.profit)\n      .slice(0, k)\n      .reduce((total, cur) => (total += cur.profit), w);\n  }\n  let idx = 0;\n  while (k > 0) {\n    while (idx < n && list[idx].cost <= w) {\n      heap.add(list[idx++]);\n    }\n    if (heap.size === 0) break;\n    const data = heap.remove();\n    w += data.profit;\n    k--;\n  }\n  return w;\n}\n"})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},8556:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var r=t(58101);const i={},s=r.createContext(i);function o(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);