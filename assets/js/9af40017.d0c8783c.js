"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[17891],{75185:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>j,frontMatter:()=>l,metadata:()=>t,toc:()=>c});var r=e(86070),s=e(25710);const l={},o="1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",t={id:"leetcode/1201-1300/\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",title:"1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",description:"\u94fe\u63a5\uff1a1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",source:"@site/docs/leetcode/1201-1300/1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII.md",sourceDirName:"leetcode/1201-1300",slug:"/leetcode/1201-1300/\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",permalink:"/docs/leetcode/1201-1300/\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1289,frontMatter:{},sidebar:"journal",previous:{title:"1282.\u7528\u6237\u5206\u7ec4",permalink:"/docs/leetcode/1201-1300/\u7528\u6237\u5206\u7ec4"},next:{title:"1300.\u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c",permalink:"/docs/leetcode/1201-1300/\u8f6c\u53d8\u6570\u7ec4\u540e\u6700\u63a5\u8fd1\u76ee\u6807\u503c\u7684\u6570\u7ec4\u548c"}},d={},c=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function m(n){const i={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"1289\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cii",children:"1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII"})}),"\n",(0,r.jsxs)(i.blockquote,{children:["\n",(0,r.jsxs)(i.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(i.a,{href:"https://leetcode.cn/problems/minimum-falling-path-sum-ii",children:"1289.\u4e0b\u964d\u8def\u5f84\u6700\u5c0f\u548cII"}),(0,r.jsx)(i.br,{}),"\n","\u96be\u5ea6\uff1aHard",(0,r.jsx)(i.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u77e9\u9635",(0,r.jsx)(i.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a n x n \u6574\u6570\u77e9\u9635 grid \uff0c\u8bf7\u4f60\u8fd4\u56de \u975e\u96f6\u504f\u79fb\u4e0b\u964d\u8def\u5f84 \u6570\u5b57\u548c\u7684\u6700\u5c0f\u503c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-10"}),"\n",(0,r.jsx)(i.li,{children:"\u6267\u884c\u7528\u65f6\uff1a40ms"}),"\n",(0,r.jsx)(i.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a13.82MB"}),"\n",(0,r.jsx)(i.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(i.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u904d\u5386\uff0c\u53ea\u8bb0\u5f55\u6700\u5c0f\u503c\u548c\u7b2c\u4e8c\u5c0f\u503c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& grid) {\n        int n = grid.size(), min1, min2, res;\n        auto refresh = [&](int row) {\n            res = INT_MAX;\n            min1 = INT_MAX;\n            min2 = INT_MAX;\n            for (int j = 0; j < n; j++) {\n                res = min(res, grid[row][j]);\n                if (min1 == INT_MAX || grid[row][j] < grid[row][min1]) min2 = min1, min1 = j;\n                else if (min2 == INT_MAX || grid[row][j] < grid[row][min2]) min2 = j;\n            }\n        };\n        for (int row = 1; row < n; row++) {\n            refresh(row - 1);\n            for (int j = 0; j < n; j++) {\n                grid[row][j] += j == min1 ? grid[row - 1][min2] : grid[row - 1][min1];\n            }\n        }\n        refresh(n - 1);\n        return res;\n    }\n};\n"})}),"\n",(0,r.jsx)(i.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-10"}),"\n",(0,r.jsx)(i.li,{children:"\u6267\u884c\u7528\u65f6\uff1a128ms"}),"\n",(0,r.jsx)(i.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a18.97MB"}),"\n",(0,r.jsx)(i.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(i.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:"class Solution:\n    def minFallingPathSum(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        min1 = min2 = res = 0\n\n        def refresh(row: int):\n            nonlocal res\n            nonlocal min1\n            nonlocal min2\n            res = min1 = min2 = inf\n            for j in range(n):\n                res = min(res, grid[row][j])\n                if min1 == inf or grid[row][j] < grid[row][min1]:\n                    min2 = min1\n                    min1 = j\n                elif min2 == inf or grid[row][j] < grid[row][min2]:\n                    min2 = j\n        for row in range(1, n):\n            refresh(row-1)\n            for j in range(n):\n                grid[row][j] += grid[row -\n                                        1][min2] if j == min1 else grid[row - 1][min1]\n        refresh(n-1)\n        return res\n"})}),"\n",(0,r.jsx)(i.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-08-10"}),"\n",(0,r.jsx)(i.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,r.jsx)(i.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.53MB"}),"\n",(0,r.jsx)(i.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(i.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-rust",children:"impl Solution {\n    pub fn min_falling_path_sum(mut grid: Vec<Vec<i32>>) -> i32 {\n        let n = grid.len();\n        let mut min1 = 0;\n        let mut min2 = 0;\n        for row in 1..n {\n            min1 = usize::MAX;\n            min2 = usize::MAX;\n            for j in 0..n {\n                if min1 == usize::MAX || grid[row - 1][j] < grid[row - 1][min1] {\n                    min2 = min1;\n                    min1 = j;\n                } else if min2 == usize::MAX || grid[row - 1][j] < grid[row - 1][min2] {\n                    min2 = j;\n                }\n            }\n            for j in 0..n {\n                grid[row][j] += if j == min1 {\n                    grid[row - 1][min2]\n                } else {\n                    grid[row - 1][min1]\n                };\n            }\n        }\n        *grid[n - 1].iter().min().unwrap()\n    }\n}\n"})})]})}function j(n={}){const{wrapper:i}={...(0,s.R)(),...n.components};return i?(0,r.jsx)(i,{...n,children:(0,r.jsx)(m,{...n})}):m(n)}},25710:(n,i,e)=>{e.d(i,{R:()=>o,x:()=>t});var r=e(30758);const s={},l=r.createContext(s);function o(n){const i=r.useContext(l);return r.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function t(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(l.Provider,{value:i},n.children)}}}]);