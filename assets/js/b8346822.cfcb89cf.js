"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[60606],{49428:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>x,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=i(86070),t=i(25710);const s={},l="1043.\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",a={id:"leetcode/1001-1100/\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",title:"1043.\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",description:"\u94fe\u63a5\uff1a1043.\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",source:"@site/docs/leetcode/1001-1100/1043.\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c.md",sourceDirName:"leetcode/1001-1100",slug:"/leetcode/1001-1100/\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",permalink:"/docs/leetcode/1001-1100/\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1043,frontMatter:{},sidebar:"journal",previous:{title:"1042.\u4e0d\u90bb\u63a5\u690d\u82b1",permalink:"/docs/leetcode/1001-1100/\u4e0d\u90bb\u63a5\u690d\u82b1"},next:{title:"1044.\u6700\u957f\u91cd\u590d\u5b50\u4e32",permalink:"/docs/leetcode/1001-1100/\u6700\u957f\u91cd\u590d\u5b50\u4e32"}},c={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - python",id:"\u9898\u89e3-2---python",level:2},{value:"\u9898\u89e3 3 - rust",id:"\u9898\u89e3-3---rust",level:2}];function o(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"1043\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c",children:"1043.\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c"})}),"\n",(0,r.jsxs)(e.blockquote,{children:["\n",(0,r.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/partition-array-for-maximum-sum",children:"1043.\u5206\u9694\u6570\u7ec4\u4ee5\u5f97\u5230\u6700\u5927\u548c"}),(0,r.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,r.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212",(0,r.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 arr\uff0c\u8bf7\u4f60\u5c06\u8be5\u6570\u7ec4\u5206\u9694\u4e3a\u957f\u5ea6 \u6700\u591a \u4e3a k \u7684\u4e00\u4e9b\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002\u5206\u9694\u5b8c\u6210\u540e\uff0c\u6bcf\u4e2a\u5b50\u6570\u7ec4\u7684\u4e2d\u7684\u6240\u6709\u503c\u90fd\u4f1a\u53d8\u4e3a\u8be5\u5b50\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-19"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a4ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a8.3MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","dp[i]\u8868\u793a\u524di\u4e2a\u5143\u7d20\u80fd\u5206\u5272\u6210\u7684\u6700\u5927\u503c\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-cpp",children:"class Solution {\n    public:\n        int maxSumAfterPartitioning(vector<int>& arr, int k) {\n            int n = arr.size();\n            vector<int> dp(n + 1, 0);\n            int nmax = arr[0];\n            for (int i = 1; i <= k; i++) {\n                nmax = max(nmax, arr[i - 1]);\n                dp[i] = nmax * i;\n            }\n            for (int i = k + 1; i <= n; i++) {\n                nmax = arr[i - 1];\n                for (int j = i; i - j + 1 <= k; j--) {\n                    nmax = max(nmax, arr[j - 1]);\n                    dp[i] = max(dp[i], dp[j - 1] + nmax * (i - j + 1));\n                }   \n            }\n            return dp[n];\n        }\n    };\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-2---python",children:"\u9898\u89e3 2 - python"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-19"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a212ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.1MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def maxSumAfterPartitioning(self, arr: List[int], k: int) -> int:\n        n = len(arr)\n        dp = [0] * (n+1)\n        nmax = arr[0]\n        for i in range(1, k+1):\n            nmax = max(nmax, arr[i-1])\n            dp[i] = nmax * i\n        for i in range(k+1, n+1):\n            nmax = arr[i-1]\n            j = i\n            while i-j+1 <= k:\n                nmax = max(nmax, arr[j-1])\n                dp[i] = max(dp[i], dp[j-1]+nmax*(i-j+1))\n                j -= 1\n        return dp[n]\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u9898\u89e3-3---rust",children:"\u9898\u89e3 3 - rust"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-19"}),"\n",(0,r.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,r.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2MB"}),"\n",(0,r.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,r.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-rust",children:"impl Solution {\n    pub fn max_sum_after_partitioning(arr: Vec<i32>, k: i32) -> i32 {\n        use std::cmp::max;\n        let n = arr.len();\n        let k = k as usize;\n        let mut dp = vec![0; n + 1];\n        let mut nmax = arr[0];\n        for i in 1..=k {\n            nmax = max(nmax, arr[i - 1]);\n            dp[i] = nmax * (i as i32);\n        }\n        for i in k + 1..=n {\n            nmax = arr[i - 1];\n            let mut j = i;\n            while i - j + 1 <= k {\n                nmax = max(nmax, arr[j - 1]);\n                dp[i] = max(dp[i], dp[j - 1] + nmax * (i - j + 1) as i32);\n                j -= 1\n            }\n        }\n        dp[n]\n    }\n}\n"})})]})}function x(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},25710:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>a});var r=i(30758);const t={},s=r.createContext(t);function l(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);