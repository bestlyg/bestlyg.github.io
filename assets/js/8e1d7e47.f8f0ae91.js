"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[18058],{56768:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var t=l(86070),i=l(25710);const s={},d="445.\u4e24\u6570\u76f8\u52a0II",r={id:"leetcode/401-500/\u4e24\u6570\u76f8\u52a0II",title:"445.\u4e24\u6570\u76f8\u52a0II",description:"\u94fe\u63a5\uff1a445.\u4e24\u6570\u76f8\u52a0II",source:"@site/docs/leetcode/401-500/445.\u4e24\u6570\u76f8\u52a0II.md",sourceDirName:"leetcode/401-500",slug:"/leetcode/401-500/\u4e24\u6570\u76f8\u52a0II",permalink:"/docs/leetcode/401-500/\u4e24\u6570\u76f8\u52a0II",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:445,frontMatter:{},sidebar:"journal",previous:{title:"443.\u538b\u7f29\u5b57\u7b26\u4e32",permalink:"/docs/leetcode/401-500/\u538b\u7f29\u5b57\u7b26\u4e32"},next:{title:"446.\u7b49\u5dee\u6570\u5217\u5212\u5206II-\u5b50\u5e8f\u5217",permalink:"/docs/leetcode/401-500/\u7b49\u5dee\u6570\u5217\u5212\u5206II-\u5b50\u5e8f\u5217"}},o={},a=[{value:"\u9898\u89e3 1 - javascript",id:"\u9898\u89e3-1---javascript",level:2},{value:"\u9898\u89e3 2 - cpp",id:"\u9898\u89e3-2---cpp",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2},{value:"\u9898\u89e3 4 - rust",id:"\u9898\u89e3-4---rust",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"445\u4e24\u6570\u76f8\u52a0ii",children:"445.\u4e24\u6570\u76f8\u52a0II"})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(e.a,{href:"https://leetcode.cn/problems/add-two-numbers-ii",children:"445.\u4e24\u6570\u76f8\u52a0II"}),(0,t.jsx)(e.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(e.br,{}),"\n","\u6807\u7b7e\uff1a\u6808\u3001\u94fe\u8868\u3001\u6570\u5b66",(0,t.jsx)(e.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e24\u4e2a \u975e\u7a7a \u94fe\u8868\u6765\u4ee3\u8868\u4e24\u4e2a\u975e\u8d1f\u6574\u6570\u3002\u6570\u5b57\u6700\u9ad8\u4f4d\u4f4d\u4e8e\u94fe\u8868\u5f00\u59cb\u4f4d\u7f6e\u3002\u5b83\u4eec\u7684\u6bcf\u4e2a\u8282\u70b9\u53ea\u5b58\u50a8\u4e00\u4f4d\u6570\u5b57\u3002\u5c06\u8fd9\u4e24\u6570\u76f8\u52a0\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-1---javascript",children:"\u9898\u89e3 1 - javascript"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2020-04-14"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a140ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a38.6MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1ajavascript"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u538b\u6808\u540e\u4f9d\u6b21\u51fa\u6808\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n  let res;\n  const arr1 = [];\n  while (true) {\n    arr1.push(l1);\n    if (l1.next === null) break;\n    l1 = l1.next;\n  }\n  const arr2 = [];\n  while (true) {\n    arr2.push(l2);\n    if (l2.next === null) break;\n    l2 = l2.next;\n  }\n  let f = false;\n  while (arr1.length !== 0 && arr2.length !== 0) {\n    let num = arr1.pop().val + arr2.pop().val;\n    if (f) num++;\n    if (num >= 10) {\n      num = num - 10;\n      f = true;\n    } else {\n      f = false;\n    }\n    let temp = new ListNode(num);\n    temp.next = res;\n    res = temp;\n  }\n  while (arr1.length !== 0) {\n    let temp = arr1.pop();\n    if (f) {\n      temp.val++;\n      if (temp.val >= 10) temp.val = temp.val - 10;\n      else f = false;\n    }\n    temp.next = res;\n    res = temp;\n  }\n  while (arr2.length !== 0) {\n    let temp = arr2.pop();\n    if (f) {\n      temp.val++;\n      if (temp.val >= 10) temp.val = temp.val - 10;\n      else f = false;\n    }\n    temp.next = res;\n    res = temp;\n  }\n  if (f) {\n    let temp = new ListNode(1);\n    temp.next = res;\n    res = temp;\n  }\n  return res;\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-2---cpp",children:"\u9898\u89e3 2 - cpp"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-03"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a24ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a68.9MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u9012\u5f52\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int get_len(ListNode *l) {\n        int cnt = 0;\n        for (ListNode *p = l; p; p = p->next) cnt++;\n        return cnt;\n    }\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int len1 = get_len(l1), len2 = get_len(l2);\n        if (len2 > len1) {\n            swap(len1, len2);\n            swap(l1, l2);\n        }\n        while (len1 > len2) {\n            ListNode *head = new ListNode(0, l2);\n            l2 = head;\n            len2++;\n        }\n        auto res = dfs(l1, l2);\n        if (res.first) {\n            ListNode *head = new ListNode(1, l1);\n            l1 = head;\n        }\n        return l1;\n    }\n    pair<int, ListNode*> dfs(ListNode* l1, ListNode* l2) {\n        if (!l1) return make_pair(0, l2);\n        if (!l2) return make_pair(0, l1);\n        auto res = dfs(l1->next, l2->next);\n        l1->next = res.second;\n        l1->val += l2->val + res.first;\n        int add = 0;\n        if (l1->val >= 10) {\n            l1->val -= 10;\n            add = 1;\n        }\n        return make_pair(add, l1);\n    }\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-03"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a88ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a15.9MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"def getLen(l: Optional[ListNode]):\n    if not l:\n        return 0\n    cnt = 0\n    while l:\n        cnt += 1\n        l = l.next\n    return cnt\n\n\ndef dfs(l1: Optional[ListNode], l2: Optional[ListNode]) -> Tuple[int, ListNode]:\n    if not l1:\n        return (0, l2)\n    if not l2:\n        return (0, l1)\n    add, next = dfs(l1.next, l2.next)\n    l1.next = next\n    l1.val += l2.val + add\n    add = 0\n    if l1.val >= 10:\n        l1.val -= 10\n        add = 1\n    return (add, l1)\n\nclass Solution:\n    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:\n        len1, len2 = getLen(l1), getLen(l2)\n        if len2 > len1:\n            len1, len2 = len2, len1\n            l1, l2 = l2, l1\n        while len1 > len2:\n            head = ListNode(0, l2)\n            l2 = head\n            len2 += 1\n        add, node = dfs(l1, l2)\n        if add:\n            head = ListNode(1, l1)\n            l1 = head\n        return l1\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u9898\u89e3-4---rust",children:"\u9898\u89e3 4 - rust"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-07-03"}),"\n",(0,t.jsx)(e.li,{children:"\u6267\u884c\u7528\u65f6\uff1a0ms"}),"\n",(0,t.jsx)(e.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a1.9MB"}),"\n",(0,t.jsx)(e.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(e.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-rust",children:"fn get_len(l: &Option<Box<ListNode>>) -> usize {\n    match l {\n        Some(ref node) => get_len(&node.next) + 1,\n        None => 0,\n    }\n}\nfn dfs(\n    mut l1: Option<Box<ListNode>>,\n    mut l2: Option<Box<ListNode>>,\n) -> (i32, Option<Box<ListNode>>) {\n    if l1.is_none() {\n        (0, l2)\n    } else if l2.is_none() {\n        (0, l1)\n    } else {\n        let node1 = l1.as_mut().unwrap();\n        let node2 = l2.as_mut().unwrap();\n        let (mut add, next) = dfs(node1.next.take(), node2.next.take());\n        node1.val += node2.val + add;\n        node1.next = next;\n        add = 0;\n        if node1.val >= 10 {\n            node1.val -= 10;\n            add = 1;\n        }\n        (add, l1)\n    }\n}\nimpl Solution {\n    pub fn add_two_numbers(\n        mut l1: Option<Box<ListNode>>,\n        mut l2: Option<Box<ListNode>>,\n    ) -> Option<Box<ListNode>> {\n        let (mut len1, mut len2) = (get_len(&l1), get_len(&l2));\n        if len2 > len1 {\n            std::mem::swap(&mut len1, &mut len2);\n            std::mem::swap(&mut l1, &mut l2);\n        }\n        while len1 > len2 {\n            let mut head = Box::new(ListNode::new(0));\n            head.next = l2.take();\n            l2 = Some(head);\n            len2 += 1;\n        }\n        let (add, mut node) = dfs(l1, l2);\n        if add != 0 {\n            let mut head = Box::new(ListNode::new(1));\n            let next = node.take();\n            head.next = next;\n            node = Some(head);\n        }\n        node\n    }\n}\n"})})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},25710:(n,e,l)=>{l.d(e,{R:()=>d,x:()=>r});var t=l(30758);const i={},s=t.createContext(i);function d(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:d(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);