"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[55494],{33:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var l=t(86070),o=t(31503);const r={},s="623.\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",i={id:"leetcode/601-700/\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",title:"623.\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",description:"\u94fe\u63a5\uff1a623.\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",source:"@site/docs/leetcode/601-700/623.\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c.md",sourceDirName:"leetcode/601-700",slug:"/leetcode/601-700/\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",permalink:"/docs/leetcode/601-700/\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:623,frontMatter:{},sidebar:"journal",previous:{title:"622.\u8bbe\u8ba1\u5faa\u73af\u961f\u5217",permalink:"/docs/leetcode/601-700/\u8bbe\u8ba1\u5faa\u73af\u961f\u5217"},next:{title:"628.\u4e09\u4e2a\u6570\u7684\u6700\u5927\u4e58\u79ef",permalink:"/docs/leetcode/601-700/\u4e09\u4e2a\u6570\u7684\u6700\u5927\u4e58\u79ef"}},d={},c=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - rust",id:"\u9898\u89e3-2---rust",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"623\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c",children:"623.\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["\u94fe\u63a5\uff1a",(0,l.jsx)(n.a,{href:"https://leetcode.cn/problems/add-one-row-to-tree",children:"623.\u5728\u4e8c\u53c9\u6811\u4e2d\u589e\u52a0\u4e00\u884c"}),(0,l.jsx)(n.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,l.jsx)(n.br,{}),"\n","\u6807\u7b7e\uff1a\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811",(0,l.jsx)(n.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839 root \u548c\u4e24\u4e2a\u6574\u6570 val \u548c depth \uff0c\u5728\u7ed9\u5b9a\u7684\u6df1\u5ea6 depth \u5904\u6dfb\u52a0\u4e00\u4e2a\u503c\u4e3a val \u7684\u8282\u70b9\u884c\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-08-05"}),"\n",(0,l.jsx)(n.li,{children:"\u6267\u884c\u7528\u65f6\uff1a20ms"}),"\n",(0,l.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a24.4MB"}),"\n",(0,l.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,l.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6392\u5e8f\u540e\uff0c\u4ece\u540e\u5f80\u524d\u53d6\u503c\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-cpp",children:"class Solution {\n   public:\n    TreeNode* addOneRow(TreeNode* root, int val, int depth) {\n        if (depth == 1) return new TreeNode(val, root, nullptr);\n        queue<TreeNode*> q;\n        q.push(root);\n        int size = 1, level = 1;\n        while (level < depth - 1) {\n            TreeNode* node = q.front();\n            q.pop();\n            if (node->left) q.push(node->left);\n            if (node->right) q.push(node->right);\n            if (--size == 0) {\n                level++;\n                size = q.size();\n            }\n        }\n        while (q.size()) {\n            TreeNode* node = q.front();\n            q.pop();\n            node->left = new TreeNode(val, node->left, nullptr);\n            node->right = new TreeNode(val, nullptr, node->right);\n        }\n        return root;\n    }\n};\n"})}),"\n",(0,l.jsx)(n.h2,{id:"\u9898\u89e3-2---rust",children:"\u9898\u89e3 2 - rust"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2022-08-05"}),"\n",(0,l.jsx)(n.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a2.6MB"}),"\n",(0,l.jsx)(n.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,l.jsxs)(n.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u5c42\u5e8f\u904d\u5386\u3002"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-rust",children:"use std::cell::RefCell;\nuse std::collections::VecDeque;\nuse std::rc::Rc;\nimpl Solution {\n    pub fn add_one_row(\n        root: Option<Rc<RefCell<TreeNode>>>,\n        val: i32,\n        depth: i32,\n    ) -> Option<Rc<RefCell<TreeNode>>> {\n        if depth == 1 {\n            let mut new_root = TreeNode::new(val);\n            new_root.left = root;\n            Some(Rc::new(RefCell::new(new_root)))\n        } else {\n            let root = root.unwrap();\n            let mut q = VecDeque::<Rc<RefCell<TreeNode>>>::new();\n            q.push_back(root.clone());\n            let (mut size, mut level) = (1, 1);\n            while level < depth - 1 {\n                let node = q.pop_front();\n                let node = node.as_ref().unwrap().borrow();\n                if node.left.is_some() {\n                    q.push_back(node.left.as_ref().unwrap().clone());\n                }\n                if node.right.is_some() {\n                    q.push_back(node.right.as_ref().unwrap().clone());\n                }\n                size -= 1;\n                if size == 0 {\n                    level += 1;\n                    size = q.len();\n                }\n            }\n            while !q.is_empty() {\n                let node = q.pop_front();\n                let mut node = node.as_ref().unwrap().borrow_mut();\n                let left = node.left.clone();\n                let mut new_left = TreeNode::new(val);\n                new_left.left = left;\n                node.left = Some(Rc::new(RefCell::new(new_left)));\n                let right = node.right.clone();\n                let mut new_right = TreeNode::new(val);\n                new_right.right = right;\n                node.right = Some(Rc::new(RefCell::new(new_right)));\n            }\n            Some(root)\n        }\n    }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},31503:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var l=t(30758);const o={},r=l.createContext(o);function s(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);