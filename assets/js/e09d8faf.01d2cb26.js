"use strict";(self.webpackChunk_bestlyg_site=self.webpackChunk_bestlyg_site||[]).push([[19992],{86121:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"leetcode/2601-2700/\u7b49\u503c\u8ddd\u79bb\u548c","title":"2615.\u7b49\u503c\u8ddd\u79bb\u548c","description":"\u94fe\u63a5\uff1a2615.\u7b49\u503c\u8ddd\u79bb\u548c","source":"@site/docs/leetcode/2601-2700/2615.\u7b49\u503c\u8ddd\u79bb\u548c.md","sourceDirName":"leetcode/2601-2700","slug":"/leetcode/2601-2700/\u7b49\u503c\u8ddd\u79bb\u548c","permalink":"/docs/leetcode/2601-2700/\u7b49\u503c\u8ddd\u79bb\u548c","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2615,"frontMatter":{},"sidebar":"journal","previous":{"title":"2614.\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570","permalink":"/docs/leetcode/2601-2700/\u5bf9\u89d2\u7ebf\u4e0a\u7684\u8d28\u6570"},"next":{"title":"2616.\u6700\u5c0f\u5316\u6570\u5bf9\u7684\u6700\u5927\u5dee\u503c","permalink":"/docs/leetcode/2601-2700/\u6700\u5c0f\u5316\u6570\u5bf9\u7684\u6700\u5927\u5dee\u503c"}}');var t=e(25105),l=e(8556);const r={},c="2615.\u7b49\u503c\u8ddd\u79bb\u548c",o={},d=[{value:"\u9898\u89e3 1 - cpp",id:"\u9898\u89e3-1---cpp",level:2},{value:"\u9898\u89e3 2 - rust",id:"\u9898\u89e3-2---rust",level:2},{value:"\u9898\u89e3 3 - python",id:"\u9898\u89e3-3---python",level:2}];function u(n){const i={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"2615\u7b49\u503c\u8ddd\u79bb\u548c",children:"2615.\u7b49\u503c\u8ddd\u79bb\u548c"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsxs)(i.p,{children:["\u94fe\u63a5\uff1a",(0,t.jsx)(i.a,{href:"https://leetcode.cn/problems/sum-of-distances",children:"2615.\u7b49\u503c\u8ddd\u79bb\u548c"}),(0,t.jsx)(i.br,{}),"\n","\u96be\u5ea6\uff1aMedium",(0,t.jsx)(i.br,{}),"\n","\u6807\u7b7e\uff1a\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u524d\u7f00\u548c",(0,t.jsx)(i.br,{}),"\n","\u7b80\u4ecb\uff1a","\u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u7684\u6574\u6570\u6570\u7ec4 nums \u3002\u73b0\u6709\u4e00\u4e2a\u957f\u5ea6\u7b49\u4e8e nums.length \u7684\u6570\u7ec4 arr \u3002\u5bf9\u4e8e\u6ee1\u8db3 nums[j] == nums[i] \u4e14 j != i \u7684\u6240\u6709 j \uff0carr[i] \u7b49\u4e8e\u6240\u6709 |i - j| \u4e4b\u548c\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684 j \uff0c\u5219\u4ee4 arr[i] \u7b49\u4e8e 0 \u3002\u8fd4\u56de\u6570\u7ec4 arr \u3002"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"\u9898\u89e3-1---cpp",children:"\u9898\u89e3 1 - cpp"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,t.jsx)(i.li,{children:"\u6267\u884c\u7528\u65f6\uff1a72ms"}),"\n",(0,t.jsx)(i.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a34.7MB"}),"\n",(0,t.jsx)(i.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1acpp"}),"\n",(0,t.jsxs)(i.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u6536\u96c6\u6240\u6709\u76f8\u540c\u6570\u5b57\u7684\u4e0b\u6807\uff0c\u505a\u524d\u7f00\u548c\u8fdb\u884c\u5de6\u53f3\u6bd4\u8f83\u3002"]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-cpp",children:"class Solution {\npublic:\n    typedef long long ll;\n    vector<ll> distance(vector<int>& nums) {\n        int n = nums.size();\n        vector<ll> arr(n, 0);\n        unordered_map<int, vector<int>> m;\n        for (int i = 0; i < n; i++) {\n            m[nums[i]].push_back(i);\n        }\n        for (auto &item : m) {\n            auto &list = item.second;\n            ll sum = 0, left = 0;\n            for (auto &v : list) sum += v - list[0];\n            for (int i = 0; i < list.size(); i++) {\n                arr[list[i]] = sum + left;\n                if (i + 1 < list.size()) {\n                    left += (list[i + 1] - list[i]) * (i + 1);\n                    sum -= (list[i + 1] - list[i]) * (list.size() - 1 - i);\n                }\n            }\n        }\n        return arr;\n    }\n};\n"})}),"\n",(0,t.jsx)(i.h2,{id:"\u9898\u89e3-2---rust",children:"\u9898\u89e3 2 - rust"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,t.jsx)(i.li,{children:"\u6267\u884c\u7528\u65f6\uff1a68ms"}),"\n",(0,t.jsx)(i.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a12MB"}),"\n",(0,t.jsx)(i.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1arust"}),"\n",(0,t.jsxs)(i.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-rust",children:"impl Solution {\n    pub fn distance(nums: Vec<i32>) -> Vec<i64> {\n        use std::collections::HashMap;\n        let n = nums.len();\n        let mut arr: Vec<i64> = vec![0; n];\n        let mut m = HashMap::<i32, Vec<usize>>::new();\n        for i in 0..n {\n            let item = m.entry(nums[i]).or_insert(Vec::new());\n            item.push(i);\n        }\n        for (_, list) in m.into_iter() {\n            let (mut r, mut l) = (0, 0);\n            for v in &list {\n                r += *v - list[0];\n            }\n            for i in 0..list.len() {\n                arr[list[i]] = (r + l) as i64;\n                if i + 1 < list.len() {\n                    l += (list[i + 1] - list[i]) * (i + 1);\n                    r -= (list[i + 1] - list[i]) * (list.len() - 1 - i);\n                }\n            }\n        }\n        arr\n    }\n}\n"})}),"\n",(0,t.jsx)(i.h2,{id:"\u9898\u89e3-3---python",children:"\u9898\u89e3 3 - python"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"\u7f16\u8f91\u65f6\u95f4\uff1a2023-04-09"}),"\n",(0,t.jsx)(i.li,{children:"\u6267\u884c\u7528\u65f6\uff1a412ms"}),"\n",(0,t.jsx)(i.li,{children:"\u5185\u5b58\u6d88\u8017\uff1a52.2MB"}),"\n",(0,t.jsx)(i.li,{children:"\u7f16\u7a0b\u8bed\u8a00\uff1apython"}),"\n",(0,t.jsxs)(i.li,{children:["\u89e3\u6cd5\u4ecb\u7ecd\uff1a","\u540c\u4e0a\u3002"]}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-python",children:"class Solution:\n    def distance(self, nums: List[int]) -> List[int]:\n        n = len(nums)\n        arr = [0] * n\n        m: dict[int, List[int]] = {}\n        for i in range(n):\n            if not nums[i] in m:\n                m[nums[i]] = []\n            m[nums[i]].append(i)\n        for _, list in m.items():\n            l, r = 0, 0\n            for v in list:\n                r += v - list[0]\n            for i in range(len(list)):\n                arr[list[i]] = r + l\n                if i + 1 < len(list):\n                    l += (list[i + 1] - list[i]) * (i + 1)\n                    r -= (list[i + 1] - list[i]) * (len(list) - 1 - i)\n        return arr\n"})})]})}function a(n={}){const{wrapper:i}={...(0,l.R)(),...n.components};return i?(0,t.jsx)(i,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8556:(n,i,e)=>{e.d(i,{R:()=>r,x:()=>c});var s=e(58101);const t={},l=s.createContext(t);function r(n){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function c(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:r(n.components),s.createElement(l.Provider,{value:i},n.children)}}}]);